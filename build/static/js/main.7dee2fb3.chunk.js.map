{"version":3,"sources":["Assets/bg.svg","Assets/cartoon.png","Assets/paperplane.svg","Assets/plane.svg","Assets/rocket.svg","Assets/helper.JPG","Component/ServiceComponent.js","Store/Actions/authAction.js","Store/Actions/actionTypes.js","Component/RegistrationForm.js","Component/PricingCard.js","Component/LoginForm.js","Component/Loader.js","Component/LandingPage.js","Component/ResetPasswordForm.js","Store/Actions/resetPasswordAction.js","Component/ForgotPasswordForm.js","Component/ForgotPassword.js","Container/PublicPage.js","Component/Navigation.js","Store/Actions/userAction.js","Store/Actions/groupsAction.js","Component/Message.js","Component/HelpBox.js","Component/Homepage.js","Component/ChangePassword.js","Component/ChangeName.js","Component/Setting.js","Component/Subscription.js","Component/TableLoader.js","Component/CreateGroupForm.js","Component/EditGroupMember.js","Component/EditGroup.js","Component/AddMember.js","Component/CreateGroupRoute.js","Component/DeleteModal.js","Component/GroupList.js","Component/ManageGroups.js","Component/ApiDocs.js","Component/ManageApi.js","Container/Dashboard.js","Container/App.js","Store/Reducers/authReducer.js","Store/Reducers/userReducer.js","Store/Reducers/groupsReducer.js","Store/Reducers/resetPasswordReducer.js","Store/Reducers/rootReducer.js","index.js","Assets/logo.png","Assets/bg-icon.svg"],"names":["module","exports","ServiceComponent","Container","Service","style","borderRight","Typography","variant","align","fontWeight","marginBottom","className","styled","div","registrationFail","error","type","loginSuccess","token","localStorage","setItem","loginFail","logOut","removeItem","connect","state","loader","authReducer","registerLoader","registerStatus","dispatch","register","data","axios","post","then","res","email","result","console","log","catch","err","resendEmail","_","open","handleClose","useState","showPassword","setShowPassword","value","errorMsg","name","setName","setEmail","phone","setPhone","password","setPassword","formSubmitHandler","nameError","emailError","phoneError","passwordError","length","test","React","useEffect","e","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","outline","LoginContainer","onKeyDown","keyCode","SigninProgressBar","Box","color","Button","disabled","size","onClick","disableElevation","href","substring","indexOf","target","rel","textDecoration","FormContainer","src","logo","width","marginRight","alt","gutterBottom","padding","InputContainer","StyledTextField","label","fullWidth","autoFocus","helperText","Error","onChange","id","ShowHideBtn","aria-label","onMouseDown","event","preventDefault","textTransform","window","innerHeight","LinearProgress","TextField","theme","palette","primary","main","IconButton","span","secondary","PricingCard","GridContainer","container","justify","StyledGrid","item","xs","sm","md","lg","colorprops","paperplane","plane","rocket","Grid","loginLoader","unverifiedMsg","unverifiedAccountSuccess","login","role","response","status","sendEmailToUnverifiedAccount","switchFormHandler","username","sendEmailHandler","p","StyledAlert","severity","marginTop","Action","to","component","Alert","Loader","verifyLoader","verifyingLoader","success","verifyEmail","get","setSuccess","setError","openRegisterForm","setOpenRegisterForm","openLoginForm","setOpenLoginForm","openSnackbar","setOpenSnackbar","openErrorSnackbar","setOpenErrorSnackbar","location","useLocation","history","useHistory","handleCloseSnackBar","reason","handleCloseErrorSnackBar","handleOpenLoginForm","handleOpenRegisterForm","search","split","push","handleOpen","AppBar","StyledTypography","Login","TopSection","height","Card","RegisterButton","background","cartoon","SvgCurve","curve","Services","Pricing","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","msg","slideVariant","start","x","end","transition","duration","resetPasswordReducer","emailLoader","resetSuccess","resetError","resetPassword","pass","resetToken","newPassword","val","setPass","confirmPass","setConfirmPass","passwordHandler","passError","confirmPassError","square","elevation","variants","initial","animate","margin","motion","custom","emailSendSuccess","sendEmailToReset","verifyEmailHandler","prev","setResetToken","Wrapper","PublicPage","path","ForgotPassword","exact","LandingPage","userLoader","userReducer","user","itemClicked","Header","LogoTypo","Divider","Skeleton","StyledAvatar","charAt","toUpperCase","Name","StyledList","StyledNavLink","activeClassName","ListItem","button","ListItemIcon","fontSize","ListItemText","Footer","Avatar","List","NavLink","generatingApiKeySuccess","apiKey","loadingGroupsError","loadGroups","getState","headers","Authorization","groups","messageLoader","groupsReducer","groupsLoader","sendMessage","numberList","sms","numbers","key","count","setUserSuccess","number","setNumber","setNumberList","message","setMessage","fileRef","useRef","groupsChips","setGroupsChips","groupListLoader","setGroupListLoader","setOpen","checkBoxHandler","checked","addNumberHandler","Object","keys","findIndex","n","newList","assign","numberListHandler","groupCheckBoxHandler","groupId","index","newGroup","map","member","memberPhone","memberName","fromEntries","entries","filter","list","endIcon","current","click","ref","display","regx","readXlsxFile","files","rows","num","filterList","ob","accept","SearchBox","ClickAwayListener","onClickAway","StyledPermContactCalendarIcon","placeholder","which","Groups","GroupSkeleton","borderRadius","marginLeft","group","ChipList","Checkbox","bind","groupName","justifyContent","CircularProgress","SMSList","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","reverse","StyledCheckbox","MessageBox","multiline","messageError","PermContactCalendarIcon","HelpBox","Body","fadeVariant","opacity","document","title","flex","animation","fontFamily","smsLimit","LoaderContainer","bg","changePasswordLoader","changePassword","oldPass","newPass","setTimeout","setOldPass","setNewPass","alignItems","oldPassError","newPassError","changeDetailLoader","changeUserDetail","patch","changingUserDetailSuccess","changeName","setChangeName","changePhone","setChangePhone","changeNameError","changePhoneError","TableLoader","createGroupsLoader","createSuccess","newlyAddedGroup","createGroup","setCreateSuccess","closeModalHandler","setGroupName","createGroupHandler","pathname","y","updatingGroupMemberLoader","updateGroupMember","memberId","updatingGroupMemberSuccess","openEditModal","closeEditHandler","updateMemberHandler","numberError","returnKeyPress","updadingGroupNameLoader","groupList","deletingGroupMembersLoader","updateGroupName","updatingGroupNameSuccess","loadGroupList","pageNo","deleteGroupMembers","groupMemberId","delete","deletingGroupMembersSuccess","activeMemberId","setActiveMemberId","setOpenEditModal","deleteGroupMemberHandler","startIcon","Empty","StyledTableContainer","stickyHeader","addingMemberLoader","addGroupMember","members","setMembers","concat","returnKeyHandler","deleteMemberHandler","i","newMembers","splice","edge","Helper","helperImg","row","fadeVariants","CreateGroupRoute","openModalHalder","DeleteModal","deleteGroupHandler","closeDeleteModal","DeleteBox","deletingGroupLoader","deleteGroup","deletingGroupsSuccess","openDeleteModal","setOpenDeleteModal","openDeleteModalHandler","ApiDocs","setValue","spacing","Response","position","boxShadow","Tabs","newValue","scrollButtons","Tab","aria-controls","StyledBox","hidden","boxSizing","lineHeight","apiKeyLoader","getApiLoader","generateApi","getApiKey","showApiDocs","setShowApiDocs","copied","setCopied","inputRef","ApiContainer","ApiHeader","GenerateApiBtn","ApiBody","ApiKey","readOnly","Tooltip","placement","navigator","clipboard","writeText","select","execCommand","cursor","loadUser","setUserError","openDrawer","setOpenDrawer","toggleDrawer","query","minWidth","matches","SwipeableDrawer","onOpen","MobileNav","Content","Hamburger","Setting","Subscription","ManageGroups","ManageApi","isAuth","checkAuth","getItem","createMuiTheme","text","hint","initState","action","newGrp","groupIndex","groupListLoaderSecondary","newGroups","groupMemberIndex","newGroupMembers","groupListIndex","newGroupList","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","defaults","baseURL","app","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7dee2fb3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.815c4994.svg\";","module.exports = __webpack_public_path__ + \"static/media/cartoon.665731b3.png\";","module.exports = __webpack_public_path__ + \"static/media/paperplane.d23520d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/plane.68996ca4.svg\";","module.exports = __webpack_public_path__ + \"static/media/rocket.6e14d99e.svg\";","module.exports = __webpack_public_path__ + \"static/media/helper.7cb7fc7a.JPG\";","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction ServiceComponent() {\r\n    return (\r\n        <Container>\r\n              <Service style={{ borderRight : '1px solid #fb8c00' }}>\r\n                    <Typography variant='body1' align='center' style={{ fontWeight : '500', marginBottom : '10px' }}>\r\n                            Bulk Sms\r\n                     </Typography> \r\n                     <div className='serviceText'>\r\n                         A technology lets you send ,hundreds,even millions of SMS at a time to phone numbers with 1 click.\r\n                      </div>     \r\n              </Service>\r\n              <Service  style={{ borderRight : '1px solid #fb8c00' }}>\r\n                    <Typography variant='body1' align='center' style={{ fontWeight : '500', marginBottom : '10px' }}>\r\n                         COST-EFFECTIVE\r\n                     </Typography> \r\n                     <div className='serviceText'>\r\n                            Bulk sms messages is the best way to grow up your business as open rates of SMS promotions as high as 98%.\r\n                      </div>     \r\n              </Service> \r\n              <Service  style={{ borderRight : '1px solid #fb8c00' }}>\r\n                    <Typography variant='body1' align='center' style={{ fontWeight : '500', marginBottom : '10px' }}>\r\n                         COST-EFFECTIVE\r\n                     </Typography> \r\n                     <div className='serviceText'>\r\n                            Bulk sms messages is the best way to grow up your business as open rates of SMS promotions as high as 98%.\r\n                      </div>     \r\n              </Service>  \r\n              <Service>\r\n                    <Typography variant='body1' align='center' style={{ fontWeight : '500', marginBottom : '10px' }}>\r\n                         COST-EFFECTIVE\r\n                     </Typography> \r\n                     <div className='serviceText'>\r\n                            Bulk sms messages is the best way to grow up your business as open rates of SMS promotions as high as 98%.\r\n                      </div>     \r\n              </Service>         \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ServiceComponent;\r\n\r\nconst Container = styled.div`\r\n    display : flex;\r\n    justify-content : center;\r\n    margin-bottom : 20px;\r\n    @media (max-width : 992px) {\r\n        flex-direction : column;\r\n    }\r\n`\r\nconst Service = styled.div`\r\n    box-sizing : border-box;\r\n    padding : 20px;\r\n    margin-top : 30px;\r\n    .serviceText {\r\n        font-size : 14px;\r\n        text-align : center;\r\n        color : #757575;\r\n    }\r\n`\r\n\r\n\r\n\r\n","import { START_REGISTRATION, REGISTRATION_MAIL_SUCCESS, START_LOGIN, LOGIN_SUCCESS, VERIFY_EMAIL_SUCCESS,\r\n      VERIFYING_EMAIL, REGISTRATION_FAIL, LOG_OUT, LOGIN_FAIL, RESENDING_EMAIL, RESEND_EMAIL_FAIL, RESEND_EMAIL_SUCCESS,\r\n        UNVERIFIED_ACCOUNT, SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT, SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT_SUCCESS,\r\n      SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT_FAIL } from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nconst startRegistration = () => {\r\n    return {\r\n        type : START_REGISTRATION\r\n    }\r\n}\r\n\r\nconst registrationMailSuccess = () => {\r\n    return {\r\n        type : REGISTRATION_MAIL_SUCCESS\r\n    }\r\n}\r\n\r\nconst registrationFail = error => {\r\n    return {\r\n        type : REGISTRATION_FAIL,\r\n        error : error\r\n    }\r\n}\r\n\r\nexport const register = data => {\r\n    return dispatch => {\r\n        dispatch(startRegistration());\r\n        axios.post('/addUser', data)\r\n          .then(res => {\r\n              if(res.data){\r\n                    axios.post(`/sendEmail/${data.email}`)\r\n                    .then(result => {\r\n                        dispatch(registrationMailSuccess());\r\n                        console.log(result)\r\n                    })\r\n                    .catch(err => {\r\n                        dispatch(registrationFail('Server error please try  again later.'));\r\n                    })\r\n              }\r\n              else {\r\n                  dispatch(registrationFail('Email is already in use. Please try another email.'));\r\n              }\r\n          })\r\n          .catch(err => {\r\n                dispatch(registrationFail('Server error please try  again later.'));\r\n          })\r\n    }\r\n} \r\nconst startLogin = () => {\r\n    return {\r\n        type : START_LOGIN\r\n    }\r\n}\r\n\r\nconst loginSuccess = (token) => {\r\n    localStorage.setItem('token', token);\r\n    return {\r\n        type : LOGIN_SUCCESS,\r\n        token : token\r\n    }\r\n}\r\n\r\nconst loginFail = (error) => {\r\n    return {\r\n        type : LOGIN_FAIL,\r\n        error : error\r\n    }\r\n}\r\n\r\nconst unverifiedAccount = () => {\r\n    return {\r\n        type : UNVERIFIED_ACCOUNT\r\n    }\r\n}\r\n\r\nexport const login = (data) => {\r\n    return dispatch => {\r\n        dispatch(startLogin());\r\n        axios.post(`/authenticate`, data)\r\n          .then(res => {\r\n              if(res.data.role === \"ROLE_USER\"){\r\n                dispatch(loginSuccess(res.data.token));\r\n              }\r\n              else {\r\n                dispatch(loginFail('Incorrect email or password.'))\r\n              }\r\n              \r\n          })\r\n          .catch(err => {\r\n              if(err.response && err.response.status === 406){\r\n                    dispatch(unverifiedAccount());\r\n              }\r\n              else {\r\n                    dispatch(loginFail('Incorrect email or password.'))\r\n              }\r\n          })\r\n    }\r\n} \r\n\r\nconst verifyingEmail = () => {\r\n    return {\r\n        type : VERIFYING_EMAIL\r\n    }\r\n}\r\n\r\nconst verifyEmailSuccess = () => {\r\n    return {\r\n        type : VERIFY_EMAIL_SUCCESS\r\n    }\r\n}\r\n\r\nexport const verifyEmail = token => {\r\n    console.log(token)\r\n    return dispatch => {\r\n        dispatch(verifyingEmail());\r\n        axios.get(`/user/verify?token=${token}`)\r\n          .then(res => {\r\n              if(res.data){\r\n                  dispatch(verifyEmailSuccess());\r\n              }\r\n              else {\r\n                dispatch(registrationFail('Verification failed. Please try again.'));\r\n              }\r\n          })\r\n          .catch(err => {\r\n              console.log(err);\r\n          })\r\n    }\r\n}\r\n\r\nconst resendingEmail = () => {\r\n    return {\r\n        type : RESENDING_EMAIL\r\n    }\r\n}\r\n\r\nconst resendEmailSuccess = () => {\r\n    return {\r\n        type : RESEND_EMAIL_SUCCESS\r\n    }\r\n}\r\n\r\nconst resendEmailFail = () => {\r\n    return {\r\n        type : RESEND_EMAIL_FAIL\r\n    }\r\n}\r\n\r\nexport const resendEmail = email => {\r\n     return dispatch => {\r\n         dispatch(resendingEmail())\r\n         axios.post(`reSendEmail/${email}`)\r\n           .then(_ => {\r\n               dispatch(resendEmailSuccess())\r\n           })\r\n           .catch(err => {\r\n               dispatch(resendEmailFail('Problem in resending email.'))\r\n           })\r\n     }\r\n}\r\n\r\nexport const logOut = () => {\r\n    localStorage.removeItem('token');\r\n    return {\r\n        type : LOG_OUT\r\n    }\r\n}\r\n\r\nexport const checkAuth = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            dispatch(loginSuccess(token));\r\n        }\r\n    }\r\n}\r\n\r\nconst sendingEmailToUnverifiedAccount = () => {\r\n    return {\r\n        type : SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT\r\n    }\r\n}\r\n\r\nconst sendingEmailToUnverifiedAccountSuccess = () => {\r\n    return {\r\n        type : SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT_SUCCESS\r\n    }\r\n}\r\n\r\nconst sendingEmailToUnverifiedAccountFail = () => {\r\n    return {\r\n        type : SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT_FAIL\r\n    }\r\n}\r\n\r\nexport const sendEmailToUnverifiedAccount = email => {\r\n     return dispatch => {\r\n         dispatch(sendingEmailToUnverifiedAccount())\r\n         axios.post(`reSendEmail/${email}`)\r\n           .then(_ => {\r\n               dispatch(sendingEmailToUnverifiedAccountSuccess())\r\n           })\r\n           .catch(err => {\r\n               dispatch(sendingEmailToUnverifiedAccountFail('Problem in resending email.'))\r\n           })\r\n     }\r\n}\r\n","export const START_REGISTRATION = 'START_REGISTRATION';\r\nexport const REGISTRATION_MAIL_SUCCESS = 'REGISTRATION_MAIL_SUCCESS';\r\nexport const REGISTRATION_FAIL = 'REGISTRATION_FAIL';\r\n\r\nexport const START_LOGIN = 'START_LOGIN';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport const VERIFY_EMAIL_SUCCESS = 'VERIFY_EMAIL_SUCCESS';\r\nexport const VERIFY_EMAIL_FAIL = 'VERIFY_EMAIL_FAIL';\r\nexport const VERIFYING_EMAIL = 'VERIFYING_EMAIL';\r\n\r\nexport const UNVERIFIED_ACCOUNT = 'UNVERIFIED_ACCOUNT';\r\nexport const SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT  ='SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT';\r\nexport const SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT_SUCCESS = 'SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT_SUCCESS';\r\nexport const SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT_FAIL = 'SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT_FAIL';\r\n\r\nexport const SET_SUCCESS = 'SET_SUCCESS';\r\nexport const SET_ERROR = 'SET_ERROR';\r\n\r\nexport const LOADING_USER_DATA = 'LOADING_USER_DATA';\r\nexport const LOAD_USER_DATA_SUCCESS = 'LOAD_USER_DATA_SUCCESS';\r\nexport const LOAD_USER_DATA_FAIL = 'LOAD_USER_DATA_FAIL';\r\n\r\nexport const RESEND_EMAIL_SUCCESS = 'RESEND_EMAIL_SUCCESS';\r\nexport const RESEND_EMAIL_FAIL = 'RESEND_EMAIL_FAIL';\r\nexport const RESENDING_EMAIL = 'RESENDING_EMAIL';\r\n\r\nexport const SENDING_EMAIL_FOR_RESET = 'SENDING_EMAIL_FOR_RESET'\r\nexport const SENDING_EMAIL_FOR_RESET_SUCCESS = 'SENDING_EMAIL_FOR_RESET_SUCCESS'\r\nexport const SENDING_EMAIL_FOR_RESET_FAIL= 'SENDING_EMAIL_FOR_RESET_ERROR'\r\n\r\nexport const RESETTING_PASSWORD = 'RESETTING_PASSWORD'\r\nexport const RESETTING_PASSWORD_SUCCESS = 'RESETTING_PASSWORD_SUCCESS'\r\nexport const RESETTING_PASSWORD_FAIL = 'RESETTING_PASSWORD_FAIL'\r\n\r\nexport const SENDING_MESSAGE = 'SENDING_MESSAGE'\r\nexport const SENDING_MESSAGE_SUCCESS = 'SENDING_MESSAGE_SUCCESS'\r\nexport const SENDING_MESSAGE_FAIL = 'SENDING_MESSAGE_FAIL'\r\n\r\nexport const SUCCESS = 'SUCCESS'\r\nexport const ERROR = 'ERROR'\r\n\r\nexport const SET_USER_SUCCESS = 'SET_USER_SUCCESS'\r\nexport const SET_USER_ERROR = 'SET_USER_ERROR'\r\nexport const SET_CREATE_SUCCESS = 'SET_CREATE_SUCCESS'\r\n\r\nexport const CHANGING_PASSWORD = 'CHANGING_PASSWORD'\r\nexport const CHANGING_PASSWORD_SUCCESS = 'CHANGING_PASSWORD_SUCCESS'\r\nexport const CHANGING_PASSWORD_ERROR = 'CHANGING_PASSWORD_ERROR'\r\n\r\nexport const CHANGING_USER_DETAIL = 'CHANGING_USER_DETAIL';\r\nexport const CHANGING_USER_DETAIL_SUCCESS = 'CHANGING_USER_DETAIL_SUCCESS';\r\nexport const CHANGING_USER_DETAIL_ERROR = 'CHANGING_USER_DETAIL_ERROR';\r\n\r\nexport const LOADING_GROUPS = 'LOADING_GROUPS';\r\nexport const LOADING_GROUPS_SUCCESS = 'LOADING_GROUPS_SUCCESS';\r\nexport const LOADING_GROUPS_ERROR = 'LOADING_GROUPS_ERROR';\r\n\r\nexport const CREATING_GROUPS = 'CREATING_GROUPS';\r\nexport const CREATING_GROUPS_SUCCESS = 'CREATING_GROUPS_SUCCESS';\r\nexport const CREATING_GROUPS_FAIL = 'CREATING_GROUPS_FAIL';\r\n\r\nexport const UPDATING_GROUP_NAME = 'UPDATING_GROUP_NAME';\r\nexport const UPDATING_GROUP_NAME_SUCCESS = 'UPDATING_GROUP_NAME_SUCCESS';\r\nexport const UPDATING_GROUP_NAME_ERROR = 'UPDATING_GROUP_NAME_ERROR';\r\n\r\nexport const LOADING_GROUP_LIST = 'LOADING_GROUP_LIST';\r\nexport const LOADING_GROUP_LIST_SUCCESS = 'LOADING_GROUP_LIST_SUCCESS';\r\nexport const LOADING_GROUP_LIST_ERROR = 'LOADING_GROUP_LIST_ERROR';\r\n\r\nexport const DELETE_GROUP = 'DELETE_GROUP';\r\nexport const DELETE_GROUP_SUCCESS = 'DELETE_GROUP_SUCCESS';\r\nexport const DELETE_GROUP_ERROR = 'DELETE_GROUP_ERROR';\r\n\r\nexport const ADDING_GROUP_MEMBER = 'ADDING_GROUP_MEMBER'\r\nexport const ADDING_GROUP_MEMBER_SUCCESS = 'ADDING_GROUP_MEMBER_SUCCESS'\r\nexport const ADDING_GROUP_MEMBER_ERROR = 'ADDING_GROUP_MEMBER_ERROR'\r\n\r\nexport const DELETEING_GROUPMEMBER = 'DELETEING_GROUPMEMBER';\r\nexport const DELETEING_GROUPMEMBER_SUCCESS = 'DELETEING_GROUPMEMBER_SUCCESS';\r\nexport const DELETEING_GROUPMEMBER_ERROR = 'DELETEING_GROUPMEMBER_ERROR';\r\n\r\nexport const UPDATING_GROUPMEMBER = 'UPDATING_GROUPMEMBER';\r\nexport const UPDATING_GROUPMEMBER_SUCCESS = 'UPDATING_GROUPMEMBER_SUCCESS';\r\nexport const UPDATING_GROUPMEMBER_ERROR = 'UPDATING_GROUPMEMBER_ERROR';\r\n\r\nexport const GENERATING_API_KEY = 'GENERATING_API_KEY'; \r\nexport const GENERATING_API_KEY_SUCCESS = 'GENERATING_API_KEY_SUCCESS'; \r\nexport const GENERATING_API_KEY_ERROR = 'GENERATING_API_KEY_ERROR'; \r\n\r\nexport const FETCHING_API_KEY = 'FETCHING_API_KEY'\r\n\r\nexport const LOG_OUT = 'LOG_OUT';","import React, { useState } from 'react'\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport styled from 'styled-components';\r\nimport { Typography, Button, Box } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { register } from '../Store/Actions/authAction';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport { resendEmail } from '../Store/Actions/authAction'\r\nimport logo from '../Assets/logo.png'\r\n\r\nfunction RegistrationForm({ open, handleClose, register, loader, registerStatus, error, resendEmail }) {\r\n  \r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [name, setName] = useState({ value : '', error : false, errorMsg : 'Enter a valid name.' })\r\n    const [email, setEmail] = useState({ value : '', error : false, errorMsg : 'Enter a valid email address.' })\r\n    const [phone, setPhone] = useState({ value : '', error : false, errorMsg : 'Enter a valid phone number.' })\r\n    const [password, setPassword] = useState({ value : '', error : false, errorMsg : 'Enter a valid password.' })\r\n\r\n    const handleClickShowPassword = () => {\r\n             setShowPassword(!showPassword);\r\n      };\r\n    \r\n        const handleMouseDownPassword = (event) => {\r\n                event.preventDefault();\r\n        };\r\n\r\n        const nameChangeHandler = e => {\r\n            setName({ ...name, value : e.target.value, error : false })\r\n        }\r\n        const emailChangeHandler = e => {\r\n           setEmail({ ...email, value : e.target.value, error : false })\r\n        }\r\n        const phoneChangeHandler = e => {\r\n            setPhone({ ...phone, value : e.target.value, error : false })\r\n        }\r\n        const passwordChangeHandler = e => {\r\n            setPassword({ ...password, value : e.target.value, error : false })\r\n        }\r\n\r\n        const resendHandler = () => {\r\n            resendEmail(email.value)\r\n        }\r\n\r\n      const formSubmitHandler = () => {\r\n          let nameError = false;\r\n          let emailError = false;\r\n          let phoneError = false;\r\n          let passwordError = false;\r\n          const emailRegx = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n          if( name.value.length <= 3 ){\r\n              nameError = true;\r\n          }\r\n          if( password.value.length <= 3 ){\r\n                 passwordError = true;\r\n            }\r\n            if( emailRegx.test(email.value) ){\r\n                emailError = false;\r\n            }\r\n            else {\r\n                emailError = true;\r\n            }\r\n        if( phone.value.length !== 10 ){\r\n                phoneError = true;\r\n            }\r\n          \r\n        if( nameError || passwordError || emailError || phoneError ) {\r\n              setName({ ...name, error : nameError })\r\n              setEmail({ ...email, error : emailError })\r\n              setPhone({ ...phone, error : phoneError })\r\n              setPassword({ ...password, error :passwordError })\r\n          }\r\n          else {\r\n              const data = {\r\n                  name : name.value,\r\n                  email : email.value,\r\n                  phone : phone.value,\r\n                  password : password.value\r\n              }\r\n              register(data);\r\n          }\r\n      }\r\n\r\n      const enterPressHanlder = e => {\r\n          if(e.keyCode === 13){\r\n              formSubmitHandler();\r\n          }\r\n      }\r\n\r\n      React.useEffect(()=>{\r\n           if(error.value){\r\n               setEmail( e => {\r\n                   return {\r\n                       ...e,\r\n                       error : true\r\n                   }\r\n               })\r\n           }\r\n      },[error])\r\n\r\n    return (\r\n        <>\r\n        <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open} style={{ outline : 'none' }}>\r\n                <LoginContainer onKeyDown={enterPressHanlder}>\r\n                    { loader ? <div className='progress'><SigninProgressBar/></div> : null }\r\n                        { !registerStatus ? \r\n                            <FormContainer>\r\n                                <Typography variant='body1' align='center'>\r\n                                        Welcome To\r\n                                </Typography>   \r\n                                <Typography variant='h6' align='center' color='primary'>\r\n                                     <img src={logo} style={{ color : '#fff',width : '35px', marginRight : '10px' }} alt=''/>\r\n                                </Typography>   \r\n                                <Typography variant='body2' align='center' gutterBottom>\r\n                                        \"SMS Nepal\"\r\n                                </Typography>  \r\n                                <Typography variant='body1' align='center'>\r\n                                        <span style={{ fontWeight: '500' }}>Fill up the form to register.</span>\r\n                                </Typography>\r\n                                <div style={{ padding : '20px 0px' }}>\r\n                                    <InputContainer style={{marginBottom : '25px'}}>\r\n                                            <StyledTextField\r\n                                                    label=\"Full name\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    type=\"text\"\r\n                                                    size = 'medium'\r\n                                                    autoFocus\r\n                                                    disabled = {loader}\r\n                                                    value = {name.value}\r\n                                                    error = {name.error}\r\n                                                    helperText = { name.error ? <Error><WarningRoundedIcon /> <span> {name.errorMsg} </span></Error> : '' }\r\n                                                    onChange = {nameChangeHandler}\r\n                                                />\r\n                                        </InputContainer>    \r\n                                        <InputContainer style={{marginBottom : '25px'}}>\r\n                                            <StyledTextField\r\n                                                    label=\"Email\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    disabled = {loader}\r\n                                                    type=\"email\"\r\n                                                    size = 'medium'\r\n                                                    value = {email.value}\r\n                                                    error = {email.error}\r\n                                                    helperText = { email.error ? <Error><WarningRoundedIcon /> <span> {email.errorMsg} </span></Error> : '' }\r\n                                                    onChange = {emailChangeHandler}\r\n                                                />\r\n                                        </InputContainer> \r\n                                        <InputContainer style={{marginBottom : '25px'}}>\r\n                                            <StyledTextField\r\n                                                    id=\"outlined-error-helper-text\"\r\n                                                    label=\"Phone number\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    type=\"number\"\r\n                                                    size = 'medium'\r\n                                                    disabled = {loader}\r\n                                                    value = {phone.value}\r\n                                                    error = {phone.error}\r\n                                                    helperText = { phone.error ? <Error><WarningRoundedIcon /> <span> {phone.errorMsg} </span></Error> : '' }\r\n                                                    onChange = {phoneChangeHandler}\r\n                                                />\r\n                                        </InputContainer> \r\n                                        <InputContainer>\r\n                                            <StyledTextField\r\n                                                    id=\"outlined-error-helper-text standard-adornment-password\"\r\n                                                    label=\"Password\"\r\n                                                    variant=\"outlined\"\r\n                                                    disabled = {loader}\r\n                                                    fullWidth\r\n                                                    type = { showPassword ? 'text' : 'password' }\r\n                                                    value = {password.value}\r\n                                                    error = {password.error}\r\n                                                    helperText = { password.error ? <Error><WarningRoundedIcon /> <span> {password.errorMsg} </span></Error> : '' }\r\n                                                    onChange = {passwordChangeHandler}\r\n                                                />\r\n                                                <ShowHideBtn\r\n                                                        aria-label=\"toggle password visibility\"\r\n                                                        onClick={handleClickShowPassword}\r\n                                                        onMouseDown={handleMouseDownPassword}\r\n                                                        >\r\n                                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </ShowHideBtn>\r\n                                        </InputContainer>  \r\n                                        <Typography gutterBottom align='right'>\r\n                                                    <Button \r\n                                                            variant=\"contained\" \r\n                                                            color=\"primary\" \r\n                                                            disableElevation \r\n                                                            style={{ textTransform : 'capitalize', marginRight :'10px' }}\r\n                                                            onClick={formSubmitHandler}\r\n                                                            disabled={loader}>\r\n                                                            Register\r\n                                                    </Button>\r\n                                                    <Button \r\n                                                            variant=\"contained\" \r\n                                                            disableElevation \r\n                                                            style={{ textTransform : 'capitalize' }}\r\n                                                            onClick={handleClose}\r\n                                                            disabled={loader}>\r\n                                                            Cancel\r\n                                                    </Button>\r\n                                        </Typography> \r\n                                </div>      \r\n                        </FormContainer> \r\n                         :\r\n                         <div className='success'>\r\n                             <Typography variant='subtitle2'>\r\n                                <Box color='success.main' align='center'> \r\n                                      Verification link has been sent successfully. Please check you mail.   \r\n                                </Box>\r\n                             </Typography>  \r\n                             <div className='action'>\r\n                                    <Button disabled={loader} variant='contained' color='secondary' size='small' onClick={resendHandler} disableElevation>\r\n                                            Resend\r\n                                    </Button>\r\n                                    <a href={email.value && `https://${email.value.substring(email.value.indexOf('@') + 1, email.value.length)}`} \r\n                                        target ='_blank'\r\n                                        rel=\"noopener noreferrer\"\r\n                                        style={{ textDecoration : 'none' }}>\r\n                                            <Button disabled={loader} color='primary' variant='contained' size='small' disableElevation>\r\n                                                    Check mail\r\n                                            </Button>      \r\n                                    </a>\r\n                                    <Button disabled={loader} variant='contained' size='small' disableElevation onClick={handleClose}>\r\n                                            Cancel\r\n                                    </Button>\r\n                              </div>    \r\n                         </div>    \r\n                        }   \r\n                    </LoginContainer>\r\n        </Fade>\r\n      </Modal>\r\n      </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loader : state.authReducer.registerLoader,\r\n        registerStatus : state.authReducer.registerStatus,\r\n        error : state.authReducer.error\r\n    }\r\n}    \r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        register : data => dispatch(register(data)),\r\n        resendEmail : email => dispatch(resendEmail(email))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\r\n\r\nconst LoginContainer = styled.div`\r\n      box-sizing: border-box;  \r\n      height : calc(100%);\r\n      width : 500px;\r\n      background : #fff;\r\n      position : absolute;\r\n      left : 50%;\r\n      transform : translateX(-50%);\r\n      @media( max-width : 768px ){\r\n          width : 100vw;\r\n      }\r\n      .success {\r\n         height : ${window.innerHeight}px;\r\n         display : flex; \r\n         flex-direction : column;\r\n         align-items : center; \r\n         box-sizing : border-box;\r\n         padding : 0px 20px;\r\n         justify-content : center;\r\n         align-items : center;\r\n      }\r\n      .action {\r\n          display : flex;\r\n          margin-top : 10px;\r\n          justify-content : center;\r\n          .MuiButtonBase-root {\r\n              text-transform : capitalize;\r\n              margin-right : 10px;\r\n          }\r\n      }\r\n      .progress {\r\n          width : 100%;\r\n          background : red;\r\n          position : fixed;\r\n          top : 0px;\r\n          left : 0px;\r\n      }\r\n`\r\nconst SigninProgressBar = styled(LinearProgress)`\r\n        && {\r\n            height : 4px;\r\n        }\r\n`\r\n\r\nconst FormContainer = styled.div`\r\n    height : calc(100%);\r\n    overflow : auto;\r\n    box-sizing: border-box;  \r\n    padding : 10px 30px;\r\n    padding-top : 30px;\r\n    @media( max-width : 768px ){\r\n        padding : 30px 15px 0px;\r\n    }\r\n`\r\nconst InputContainer = styled.div`\r\n    margin : 10px 0px;\r\n    position : relative;\r\n    .MuiFormHelperText-root {\r\n        font-weight : 500;\r\n    }\r\n`\r\nconst StyledTextField = styled(TextField)`\r\n    ${({ theme }) => `\r\n        label {\r\n            font-weight : 500;\r\n        }\r\n        .Mui-focused {\r\n            font-weight : 400;\r\n        }\r\n        .MuiOutlinedInput-root {\r\n            fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &:hover fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &.Mui-focused fieldset {\r\n                border-color: ${theme.palette.primary.main};\r\n            }\r\n        }\r\n        .MuiFormHelperText-root {\r\n            top : 100%;\r\n            margin-top : 0px;\r\n            margin-left : 0px;\r\n        }\r\n        `}\r\n`\r\n\r\nconst ShowHideBtn = styled(IconButton)`\r\n    &&& {\r\n        position: absolute;\r\n        right : 10px;\r\n        top : 5px;\r\n    }\r\n`\r\nconst Error = styled.span`\r\n   display : flex;\r\n   align-items : center;\r\n   ${({ theme }) => `color : ${theme.palette.secondary.main}`};\r\n   font-weight : 500;\r\n   .MuiSvgIcon-root {\r\n       font-size : 16px;\r\n       margin-right : 5px;\r\n   }\r\n`  \r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Grid } from '@material-ui/core';\r\nimport paperplane from '../Assets/paperplane.svg'\r\nimport plane from '../Assets/plane.svg'\r\nimport rocket from '../Assets/rocket.svg'\r\n\r\nfunction PricingCard() {\r\n    return (\r\n        <GridContainer container justify='center'>\r\n          <StyledGrid item xs={12} sm={5} md={5} lg={3} colorprops='success'>\r\n                <div className='banner'>\r\n                     <span>\r\n                         Free\r\n                     </span>       \r\n                 </div>\r\n                 <div className='svgIcon'>\r\n                        <img src={paperplane} alt=''/>\r\n                 </div>    \r\n                 <div className = 'cost'>\r\n                        <span>\r\n                            Rs\r\n                        </span>\r\n                        <span>\r\n                                0\r\n                        </span> \r\n                        <span>\r\n                                /100sms\r\n                        </span>  \r\n                 </div>   \r\n                 <ul className='desc'>\r\n                    <li> Loremipsum text Loremipsum text Loremipsum text </li>\r\n                    <li> Loremipsum text Loremipsum text Loremipsum text </li>\r\n                 </ul>       \r\n           </StyledGrid> \r\n           <StyledGrid item xs={12} sm={5} md={5} lg={3} colorprops='primary'>\r\n                <div className='banner'>\r\n                     <span>\r\n                         Starter\r\n                     </span>       \r\n                 </div>\r\n                 <div className='svgIcon'>\r\n                        <img src={plane} alt=''/>\r\n                 </div>    \r\n                 <div className = 'cost'>\r\n                        <span>\r\n                            Rs\r\n                        </span>\r\n                        <span>\r\n                                1\r\n                        </span> \r\n                        <span>\r\n                                /sms\r\n                        </span>  \r\n                 </div>   \r\n                 <ul className='desc'>\r\n                    <li> Loremipsum text Loremipsum text Loremipsum text </li>\r\n                    <li> Loremipsum text Loremipsum text Loremipsum text </li>\r\n                 </ul>       \r\n           </StyledGrid>  \r\n           <StyledGrid item xs={12} sm={5} md={5} lg={3} colorprops='secondary'>\r\n                <div className='banner'>\r\n                     <span>\r\n                         Pro\r\n                     </span>       \r\n                 </div>\r\n                 <div className='svgIcon'>\r\n                        <img src={rocket} alt=''/>\r\n                 </div>    \r\n                 <div className = 'cost'>\r\n                        <span>\r\n                            Rs\r\n                        </span>\r\n                        <span>\r\n                                0.75\r\n                        </span> \r\n                        <span>\r\n                                /sms\r\n                        </span>  \r\n                 </div>   \r\n                 <ul className='desc'>\r\n                    <li> Loremipsum text Loremipsum text Loremipsum text </li>\r\n                    <li> Loremipsum text Loremipsum text Loremipsum text </li>\r\n                 </ul>       \r\n           </StyledGrid>      \r\n        </GridContainer>\r\n    )\r\n}\r\n\r\nexport default PricingCard;\r\n\r\nconst GridContainer = styled(Grid)`\r\n    && {\r\n        box-sizing : border-box;\r\n    }\r\n`\r\n\r\nconst StyledGrid = styled(Grid)`\r\n   &&& {\r\n    box-shadow: rgba(53, 64, 82, 0.05) 1px 0px 14px 0px;\r\n   margin : 5px 15px;    \r\n   height : 400px;\r\n   background : #fff;\r\n   box-sizing : border-box;\r\n   border-radius : 7px;\r\n   overflow : visible;\r\n   .svgIcon {\r\n       margin : 20px auto;\r\n       display : flex;\r\n       justify-content : center;\r\n       img {\r\n           height : 60px;\r\n           width :auto;\r\n       }\r\n   }\r\n   .banner {\r\n                display : flex;\r\n                justify-content : center;\r\n                align-items : center;    \r\n                height : 50px;\r\n                ${({ theme, colorprops }) => \r\n                `background : ${theme.palette[colorprops].main}`};\r\n                margin-top : 20px;\r\n                position : relative;\r\n                &::before {\r\n                    content : '';\r\n                    position : absolute;\r\n                    top : 0px;\r\n                    left : -10px;\r\n                    height : 100%;\r\n                    width : 10px;\r\n                    ${({ theme, colorprops }) => \r\n                        `background : ${theme.palette[colorprops].main}`};\r\n                    z-index : 999;\r\n                    border-radius : 5px 0px 0px 5px;\r\n                }\r\n                &::after {\r\n                    content : '';\r\n                    position : absolute;\r\n                    top : 0px;\r\n                    right : -10px;\r\n                    height : 100%;\r\n                    width : 10px;\r\n                    ${({ theme, colorprops }) => \r\n                        `background : ${theme.palette[colorprops].main}`};\r\n                    border-radius : 0px 5px 5px 0px;\r\n                    z-index : 999;\r\n                }\r\n                span {\r\n                    font-family: 'Kanit', sans-serif;\r\n                    font-weight : 500;\r\n                    font-size : 20px;\r\n                    color : #fff;    \r\n                }\r\n            } \r\n      .cost {\r\n          display : flex;\r\n          justify-content : center;\r\n          align-items : center;\r\n          height : 70px;\r\n          span {\r\n              height : 100%;\r\n              display : flex;\r\n              &:nth-child(1) {\r\n                  flex : 1;\r\n                  justify-content : flex-end;\r\n              }\r\n              &:nth-child(2) {\r\n                  justify-content : center;\r\n                  align-items : center;\r\n                  font-size : 70px;\r\n              }\r\n              &:nth-child(3) {\r\n                  flex : 1;\r\n                  justify-content : flex-start;\r\n                  align-items : flex-end;\r\n                }\r\n            }\r\n        }\r\n        .desc {\r\n            margin-top : 30px;\r\n            li {\r\n                font-size : 14px;\r\n                padding : 0px 10px;\r\n            }\r\n        }      \r\n   }\r\n`\r\n","import React, { useState } from 'react'\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport styled from 'styled-components';\r\nimport { Typography, Button, Box } from '@material-ui/core';\r\nimport logo from '../Assets/logo.png';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport { connect } from 'react-redux';\r\nimport { login, sendEmailToUnverifiedAccount } from '../Store/Actions/authAction';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Link }  from 'react-router-dom';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nfunction LoginForm({ open, handleClose, loader, login, switchFormHandler, error, unverifiedMsg,\r\n                 sendEmailToUnverifiedAccount, unverifiedAccountSuccess }) {\r\n  \r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [email, setEmail] = useState({ value : '', error : false, errorMsg : 'Enter a valid email address.' })\r\n    const [password, setPassword] = useState({ value : '', error : false, errorMsg : 'Enter a valid password.' })\r\n\r\n    const handleClickShowPassword = () => {\r\n             setShowPassword(!showPassword);\r\n      };\r\n    \r\n      const handleMouseDownPassword = (event) => {\r\n            event.preventDefault();\r\n      };\r\n\r\n      const emailChangeHandler = e => {\r\n        setEmail({ ...email, value : e.target.value, error : false })\r\n    }\r\n    const passwordChangeHandler = e => {\r\n        setPassword({ ...password, value : e.target.value, error : false })\r\n    }\r\n\r\n    const formSubmitHandler = () => {\r\n        let emailError = false;\r\n        let passwordError = false;\r\n        const emailRegx = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if( password.value.length <= 3 ){\r\n               passwordError = true;\r\n          }\r\n          if( emailRegx.test(email.value) ){\r\n            emailError = false;\r\n           }\r\n            else {\r\n                emailError = true;\r\n           }\r\n        if( passwordError || emailError ) {\r\n                setEmail({ ...email, error : emailError })\r\n                setPassword({ ...password, error :passwordError })\r\n           }\r\n        else {\r\n            const data = {\r\n                username : email.value,\r\n                password : password.value\r\n            }\r\n            login(data);\r\n        }\r\n    }\r\n\r\n    const enterPressHanlder = e => {\r\n        if(e.keyCode === 13){\r\n            formSubmitHandler();\r\n        }\r\n    }\r\n\r\n    const sendEmailHandler = () => {\r\n        sendEmailToUnverifiedAccount(email.value);\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        if(error.value){\r\n            setEmail( e => {\r\n                return {\r\n                    ...e,\r\n                    error : true\r\n                }\r\n            })\r\n            setPassword(p => {\r\n                return {\r\n                    ...p,\r\n                    error : true\r\n                }\r\n            })\r\n        }\r\n   },[error])\r\n\r\n    return (\r\n        <>\r\n        <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open} style={{ outline : 'none' }}>\r\n                    <LoginContainer onKeyDown={enterPressHanlder}>\r\n                        { loader ? <div className='progress'><SigninProgressBar/></div>  : null }\r\n                        <FormContainer>\r\n                                <Typography variant='body1' align='center'>\r\n                                        Welcome To\r\n                                </Typography>   \r\n                                <Typography variant='h6' align='center' color='primary'>\r\n                                        <img src={logo} style={{ color : '#fff',width : '35px', marginRight : '10px' }} alt=''/>\r\n                                </Typography>   \r\n                                <Typography variant='body2' align='center' gutterBottom>\r\n                                        \"SMS Nepal\"\r\n                                </Typography>  \r\n                                <Typography variant='body1' align='center'>\r\n                                        <span style={{ fontWeight: '500' }}>Log in to continue.</span>\r\n                                </Typography>\r\n                                {unverifiedMsg && <StyledAlert severity=\"info\" style={{ marginTop : '10px' }}>\r\n                                    Verify your email address to continue.\r\n                                    <div className='emailBtn'> \r\n                                        <Button color='primary' size='small'\r\n                                                disabled = {loader}\r\n                                                onClick={sendEmailHandler} \r\n                                                disableElevation> \r\n                                                Send confirmation\r\n                                        </Button>  \r\n                                    </div> \r\n                                </StyledAlert>} \r\n                                {unverifiedAccountSuccess && <StyledAlert severity=\"success\" style={{ marginTop : '10px' }}>\r\n                                    Verification link has been sent successfully.\r\n                                    <div className='emailBtn'> \r\n                                        <Button color='primary'\r\n                                                size='small' \r\n                                                disabled = {loader}\r\n                                                onClick={sendEmailHandler}\r\n                                                disableElevation> \r\n                                                Resend Email\r\n                                        </Button>  \r\n                                        <a href={email.value && `https://${email.value.substring(email.value.indexOf('@') + 1, email.value.length)}`} \r\n                                        target ='_blank'\r\n                                        rel=\"noopener noreferrer\"\r\n                                        style={{ textDecoration : 'none' }}>\r\n                                                <Button size='small'\r\n                                                        disableElevation\r\n                                                        disabled = {loader}> \r\n                                                        check mail\r\n                                                </Button>  \r\n                                        </a>\r\n                                    </div> \r\n                                </StyledAlert>} \r\n                                <div style={{ padding : '10px 0px' }}>\r\n                                    <InputContainer style={{marginBottom : '25px'}}>\r\n                                            <StyledTextField\r\n                                                    id=\"outlined-error-helper-text\"\r\n                                                    label=\"Email\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    type=\"email\"\r\n                                                    size = 'medium'\r\n                                                    autoFocus\r\n                                                    disabled = {loader}\r\n                                                    value = {email.value}\r\n                                                    error = {email.error}\r\n                                                    helperText = { email.error ? <Error><WarningRoundedIcon /> <span> {email.errorMsg} </span></Error> : '' }\r\n                                                    onChange = {emailChangeHandler}\r\n                                                />\r\n                                        </InputContainer>    \r\n                                        <InputContainer>\r\n                                            <StyledTextField\r\n                                                    id=\"outlined-error-helper-text standard-adornment-password\"\r\n                                                    label=\"Password\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    disabled = {loader}\r\n                                                    type = { showPassword ? 'text' : 'password' }\r\n                                                    value = {password.value}\r\n                                                    error = {password.error}\r\n                                                    helperText = { password.error ? <Error><WarningRoundedIcon /> <span> {password.errorMsg} </span></Error> : '' }\r\n                                                    onChange = {passwordChangeHandler}\r\n                                                />\r\n                                                <ShowHideBtn\r\n                                                        aria-label=\"toggle password visibility\"\r\n                                                        onClick={handleClickShowPassword}\r\n                                                        onMouseDown={handleMouseDownPassword}\r\n                                                        >\r\n                                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </ShowHideBtn>\r\n                                        </InputContainer>\r\n                                        <Action>\r\n                                             <Link to='/forgot-password' style={{ textDecoration : 'none' }}>\r\n                                                   <Typography variant='subtitle2' color = 'primary' gutterBottom>\r\n                                                        Forgot Password?\r\n                                                   </Typography> \r\n                                             </Link>\r\n                                            <Typography variant='caption' className='register-btn'>\r\n                                                Not yet registered? \r\n                                                <Box color='primary.main' component='span' className='signup' \r\n                                                     onClick={switchFormHandler}> Sign up </Box>\r\n                                                    now.\r\n                                            </Typography>    \r\n                                         </Action>     \r\n                                        <Typography gutterBottom align='right'>\r\n                                                    <Button \r\n                                                            variant=\"contained\" \r\n                                                            color=\"primary\" \r\n                                                            disableElevation \r\n                                                            disabled = {loader}\r\n                                                            style={{ textTransform : 'capitalize', marginRight :'10px' }}\r\n                                                            onClick={formSubmitHandler}>\r\n                                                            Log in\r\n                                                    </Button>\r\n                                                    <Button \r\n                                                            variant=\"contained\" \r\n                                                            disableElevation \r\n                                                            disabled = {loader}\r\n                                                            style={{ textTransform : 'capitalize' }}\r\n                                                            onClick={handleClose}>\r\n                                                            Cancel\r\n                                                    </Button>\r\n                                        </Typography> \r\n                                </div>      \r\n                        </FormContainer>    \r\n                    </LoginContainer>\r\n        </Fade>\r\n      </Modal>\r\n      </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loader : state.authReducer.loginLoader,\r\n        error : state.authReducer.error,\r\n        unverifiedMsg : state.authReducer.unverifiedMsg,\r\n        unverifiedAccountSuccess : state.authReducer.unverifiedAccountSuccess,\r\n    }\r\n}    \r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login : (data) => dispatch(login(data)),\r\n        sendEmailToUnverifiedAccount : email => dispatch(sendEmailToUnverifiedAccount(email)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n\r\nconst LoginContainer = styled.div`\r\n      box-sizing: border-box;  \r\n      height : calc(100%);\r\n      width : 500px;\r\n      background : #fff;\r\n      position : absolute;\r\n      left : 50%;\r\n      transform : translateX(-50%);\r\n      @media( max-width : 768px ){\r\n          width : 100vw;\r\n      }\r\n      .progress {\r\n          width : 100%;\r\n          background : red;\r\n          position : fixed;\r\n          top : 0px;\r\n          left : 0px;\r\n          z-index : 9999;\r\n      }\r\n`\r\nconst SigninProgressBar = styled(LinearProgress)`\r\n        && {\r\n            height : 4px;\r\n        }\r\n`\r\n\r\nconst FormContainer = styled.div`\r\n    height : calc(100%);\r\n    overflow : auto;\r\n    box-sizing: border-box;  \r\n    padding : 0px 30px;\r\n    padding-top : 30px;\r\n    @media( max-width : 768px ){\r\n        padding : 30px 15px 0px;\r\n    }\r\n`\r\nconst InputContainer = styled.div`\r\n    margin : 20px 0px;\r\n    position : relative;\r\n    .MuiFormHelperText-root {\r\n        font-weight : 500;\r\n    }\r\n`\r\nconst StyledTextField = styled(TextField)`\r\n    ${({ theme }) => `\r\n        label {\r\n            font-weight : 500;\r\n        }\r\n        .Mui-focused {\r\n            font-weight : 400;\r\n        }\r\n        .MuiOutlinedInput-root {\r\n            fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &:hover fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &.Mui-focused fieldset {\r\n                border-color: ${theme.palette.primary.main};\r\n            }\r\n        }\r\n        .MuiFormHelperText-root {\r\n            top : 100%;\r\n            margin-top : 0px;\r\n            margin-left : 0px;\r\n        }\r\n        `}\r\n`\r\n\r\nconst ShowHideBtn = styled(IconButton)`\r\n    &&& {\r\n        position: absolute;\r\n        right : 10px;\r\n        top : 5px;\r\n    }\r\n`\r\nconst Error = styled.span`\r\n   display : flex;\r\n   align-items : center;\r\n   ${({ theme }) => `color : ${theme.palette.secondary.main}`};\r\n   font-weight : 500;\r\n   .MuiSvgIcon-root {\r\n       font-size : 16px;\r\n       margin-right : 5px;\r\n   }\r\n`\r\n\r\nconst Action = styled.div`\r\n   padding : 0px 5px;\r\n   margin-bottom : 10px;\r\n   .register-btn {\r\n       color : #9e9e9e;\r\n       font-weight : 400;\r\n       word-spacing : 0px;\r\n       .signup {\r\n           display : inline;\r\n            font-weight : 500;\r\n           cursor: pointer;\r\n       }\r\n   }\r\n`\r\nconst StyledAlert = styled(Alert)`\r\n    &&& {\r\n        padding-top : 5px;\r\n        padding-bottom : 0px;\r\n        .emailBtn {\r\n            display : flex;\r\n            width : 100%;\r\n            justify-content : flex-start;\r\n            margin-top : 3px;\r\n        }\r\n    }\r\n`","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Container>\r\n            <LinearProgress color='primary'/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Loader;\r\n\r\nconst Container = styled.div`\r\n   height : ${window.innerHeight}px;\r\n   width : 100vw;\r\n   position : fixed;\r\n   top : 0px;\r\n   left : 0px; \r\n   background : rgba(0, 0, 0, 0.2);\r\n   z-index : 99;\r\n`\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport curve from '../Assets/bg.svg';\r\nimport cartoon from '../Assets/cartoon.png';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\nimport ServiceComponent from './ServiceComponent';\r\nimport RegistrationForm from './RegistrationForm';\r\nimport PricingCard from './PricingCard';\r\nimport LoginForm from './LoginForm';\r\nimport { useLocation , useHistory} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verifyEmail } from '../Store/Actions/authAction';\r\nimport Loader from './Loader';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { SET_SUCCESS, SET_ERROR } from '../Store/Actions/actionTypes';\r\nimport logo from '../Assets/logo.png'\r\n\r\nfunction LandingPage({ verifyEmail, verifyLoader, success, setSuccess, error, setError }) {\r\n\r\n    const [openRegisterForm, setOpenRegisterForm] = useState(false);\r\n    const [openLoginForm, setOpenLoginForm] = useState(false);\r\n    const [openSnackbar, setOpenSnackbar] = useState(false);\r\n    const [openErrorSnackbar, setOpenErrorSnackbar] = useState(false);\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n\r\n    const handleCloseSnackBar = (event, reason) => {\r\n     if (reason === 'clickaway') {\r\n       return;\r\n     }\r\n     setOpenSnackbar(false);\r\n   };\r\n\r\n   const handleCloseErrorSnackBar = (event, reason) => {\r\n     if (reason === 'clickaway') {\r\n       return;\r\n     }\r\n     setOpenErrorSnackbar(false);\r\n   };\r\n\r\n    const handleOpenLoginForm = () => {\r\n       setOpenLoginForm(true);\r\n     };\r\n\r\n     const handleCloseLoginForm = () => {\r\n       setOpenLoginForm(false);\r\n     };  \r\n\r\n    const handleOpenRegisterForm = () => {\r\n       setOpenRegisterForm(true);\r\n     };\r\n\r\n     const handleCloseRegisterForm = () => {\r\n       setOpenRegisterForm(false);\r\n     };  \r\n\r\n     React.useEffect(() => {\r\n          if(location.search){\r\n                if(location.search.split('=')[0] === '?token') {\r\n                    const token = location.search.split('=')[1];\r\n                    verifyEmail(token);\r\n                    history.push('/');\r\n                }\r\n          }\r\n          \r\n     }, [location, verifyEmail, history])\r\n\r\n     const switchFormHandler = () => {\r\n          setOpenLoginForm(false);\r\n          setOpenRegisterForm(true);\r\n     }\r\n\r\n     React.useEffect(() => {\r\n          if(success.value){\r\n               setOpenSnackbar(true);\r\n               setSuccess();\r\n          }\r\n          if(error.value){\r\n               setOpenErrorSnackbar(true);\r\n               setError();\r\n          }\r\n     },[success, setSuccess, error, setError])\r\n\r\n    return (\r\n        <Container>\r\n             {verifyLoader && <Loader /> }\r\n             <RegistrationForm open={openRegisterForm} handleClose={handleCloseRegisterForm} handleOpen= {handleOpenRegisterForm} />\r\n             <LoginForm switchFormHandler={switchFormHandler} open={openLoginForm} handleClose={handleCloseLoginForm} handleOpen= {handleOpenLoginForm} />\r\n              <AppBar>\r\n                    <img src={logo} style={{ color : '#fff',width : '25px', marginRight : '10px' }} alt=''/>\r\n                    <StyledTypography>\r\n                         SMS Nepal\r\n                    </StyledTypography>     \r\n                    <Login size='medium' onClick={handleOpenLoginForm}>\r\n                              Login\r\n                    </Login>   \r\n                    <Login size='medium'>\r\n                              Contact Us\r\n                    </Login>    \r\n               </AppBar>   \r\n              <TopSection>\r\n                    <Grid container style={{ height : '100%' }}>\r\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                             <Card>\r\n                                   <div className='text'>\r\n                                       <Typography variant='h4' style={{ marginBottom : '10px' }}>\r\n                                                  Bulk SMS solution\r\n                                        </Typography>   \r\n                                        <Typography variant='subtitle2' style={{ fontWeight : '400', marginBottom : '20px' }}>\r\n                                                  SMS Nepal is nepal's no.1 fastest sms sending website.Loremipsum dollar\r\n                                                  Loremipsum dollar Loremipsum dollar  Loremipsum dollar Loremipsum dollarLoremipsum dollar \r\n                                                  Loremipsum dollar Loremipsum dollar Loremipsum dollar\r\n                                        </Typography>   \r\n                                        <RegisterButton variant='contained' disableElevation onClick={handleOpenRegisterForm}>\r\n                                                  Register\r\n                                         </RegisterButton>    \r\n                                    </div>    \r\n                             </Card>   \r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                             <Card className='desktop-only' style={{ background : '' }}>\r\n                                   <img src={cartoon} alt=''/>\r\n                             </Card>   \r\n                        </Grid>\r\n                     </Grid>   \r\n               </TopSection>\r\n               <SvgCurve>\r\n                    <img src={curve} alt=''/>\r\n               </SvgCurve> \r\n               <Typography variant='h4' align='center' color='primary'>\r\n                              Our Services\r\n               </Typography> \r\n               <Services>\r\n                    <ServiceComponent />\r\n                </Services>  \r\n                <Typography variant='h4' align='center' color='primary'>\r\n                              Our Packages\r\n               </Typography>    \r\n                <Pricing>\r\n                      <PricingCard /> \t\r\n                </Pricing>  \r\n                <Snackbar open={openSnackbar} \r\n                          autoHideDuration={4000} \r\n                          onClose={handleCloseSnackBar}\r\n                          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n                    <Alert onClose={handleCloseSnackBar} severity=\"success\">\r\n                         {success.msg}\r\n                    </Alert>\r\n                </Snackbar>  \r\n                <Snackbar open={openErrorSnackbar} \r\n                          autoHideDuration={5000} \r\n                          onClose={handleCloseErrorSnackBar}\r\n                          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n                    <Alert onClose={handleCloseErrorSnackBar} severity=\"error\">\r\n                         {error.msg}\r\n                    </Alert>\r\n                </Snackbar>    \r\n        </Container>    \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n     return {\r\n         verifyLoader : state.authReducer.verifyingLoader,\r\n         success : state.authReducer.success,\r\n         error : state.authReducer.error\r\n     }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n     return {\r\n          verifyEmail : token => dispatch(verifyEmail(token)),\r\n          setSuccess : () => dispatch({ type : SET_SUCCESS }),     \r\n          setError : () => dispatch({ type : SET_ERROR }),     \r\n     }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LandingPage);\r\n\r\nconst Container = styled.div`\r\n     width : 100%;\r\n`\r\n\r\nconst AppBar = styled.div`\r\n    height : 56px;\r\n    ${({ theme }) => `background : ${theme.palette.primary.main}`};\r\n    display : flex;\r\n     box-sizing : border-box;\r\n     padding : 20px;\r\n     align-items : center;\r\n`\r\n\r\nconst TopSection = styled.div`\r\n   height : 50vh;\r\n   ${({ theme }) => `background : ${theme.palette.primary.main}`}\r\n`\r\nconst SvgCurve = styled.div`\r\n   position : relative;\r\n   margin-top : -3px;\r\n`\r\nconst Card = styled.div`\r\n   height : 100%;\r\n   position : relative;\r\n   &.desktop-only {\r\n        @media( max-width : 992px ) {\r\n             display : none \r\n            \r\n        }    \r\n   }\r\n   .text {\r\n        position : absolute;\r\n        top : 60%;\r\n        left : 50%;\r\n        width : 70%;\r\n        transform : translate(-50%, -50%);\r\n        @media( max-width : 768px ) {\r\n               top : 100%;\r\n        }\r\n        color : #fff;\r\n        .MuiTypography-h4 {\r\n          @media( max-width : 768px ) {\r\n               font-size : 20px;\r\n               font-weight : 500;\r\n          }\r\n        }\r\n   }\r\n   img {\r\n        position : absolute;\r\n        height : 400px;\r\n        width : auto;\r\n        z-index : 1;\r\n        left : 50%;\r\n        top : 70%;\r\n        transform : translate(-50%, -50%);\r\n   }\r\n`\r\nconst RegisterButton = styled(Button)`\r\n    &&& {\r\n        background : #fff;\r\n        ${({ theme }) => `color : ${theme.palette.primary.main}`};\r\n    }\r\n`\r\nconst Services = styled.div`\r\n        margin-bottom : 40px;\r\n`\r\nconst StyledTypography = styled(Typography)`\r\n   &&& {\r\n     font-family: 'Kanit', sans-serif;\r\n     color : #fff;\r\n     flex : 1;\r\n     font-size : 20px;\r\n   }\r\n  \r\n`\r\nconst Login = styled(Button)`\r\n    &&& {\r\n         color : #fff;\r\n    }\r\n`\r\nconst Pricing = styled(Grid)`\r\n    &&& {\r\n         display : flex;\r\n         justify-content : center;\r\n         margin : 20px auto;\r\n    }\r\n`","import React from 'react'\nimport styled from 'styled-components';\nimport { Card, Typography, TextField, Button } from '@material-ui/core';\nimport logo from '../Assets/logo.png'\nimport { motion } from 'framer-motion'\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\nimport { resetPassword } from '../Store/Actions/resetPasswordAction';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom'\nimport { Alert } from '@material-ui/lab'\n\nconst slideVariant = {\n    start : {\n        x : '100%'\n    },\n    end : {\n        x : 0,\n        transition : {\n            type : 'tween',\n            duration : 0.2\n        }\n    }\n}\n\nfunction ResetPasswordForm({ loader, resetPassword, resetSuccess, resetError, resetToken }) {\n\n    const [pass, setPass] = React.useState({ val : '', error : false, errorMsg : 'Enter a valid password' });\n    const [confirmPass, setConfirmPass] = React.useState({ val : '', error : false, errorMsg : 'Password doesnot match' });\n    const history = useHistory();\n\n    const passChangeHandler = e => {\n        setPass({ ...pass, error : false, val : e.target.value });\n    }\n\n    const confirmPassChangeHandler = e => {\n        setConfirmPass({ ...confirmPass, error : false, val : e.target.value });\n    }\n\n    const passwordHandler = () => {\n        let passError = false;\n        let confirmPassError = false;\n        if( pass.val.length < 3 ){\n            passError = true\n        }\n        if( pass.val !== confirmPass.val ) {\n            confirmPassError = true\n        }\n        if( confirmPassError || passError ) {\n            setPass({ ...pass, error : passError });\n            setConfirmPass({ ...confirmPass, error : confirmPassError });\n        }\n        else {\n            resetPassword(pass.val, resetToken);\n        }\n    }\n\n    const enterKeyHandler = e => {\n        if(e.keyCode === 13) {\n            passwordHandler();\n        }\n    }\n\n    React.useEffect(() => {\n        if(resetSuccess){\n            history.push('/')\n        }\n    },[resetSuccess, history])\n\n    return (\n               <FormContainer onKeyDown={enterKeyHandler} square elevation={0} variants={slideVariant} initial='start' animate='end'>\n                    <img src={logo} alt='' style={{ width : '35px' }}/>\n                    <Typography variant='subtitle2' style={{ marginTop : '10px' }}>\n                        SMS Nepal\n                    </Typography>\n                    <Typography variant='body2' style={{ margin : '10px auto 15px' }}>\n                        Change your password.\n                    </Typography>\n                    {resetError && <Alert severity=\"error\" style={{ margin : '5px auto 15px' }}> \n                        Couldn't reset password right now. Please try again later\n                    </Alert>}\n                    <InputContainer style={{marginBottom : '25px'}}>\n                        <StyledTextField\n                                label=\"New Password\"\n                                variant=\"outlined\"\n                                fullWidth\n                                type=\"password\"\n                                size = 'medium'\n                                disabled={loader}\n                                autoFocus\n                                onChange={passChangeHandler}\n                                error = {pass.error}\n                                helperText = { pass.error ? <Error><WarningRoundedIcon /> <span> {pass.errorMsg} </span></Error> : '' }\n                                value = {pass.val}\n                        />\n                    </InputContainer>\n                    <InputContainer style={{marginBottom : '25px'}}>\n                        <StyledTextField\n                                label=\"Confirm Password\"\n                                variant=\"outlined\"\n                                fullWidth\n                                type=\"password\"\n                                size = 'medium'\n                                disabled={loader}\n                                onChange={confirmPassChangeHandler}\n                                error = {confirmPass.error}\n                                helperText = { confirmPass.error ? <Error><WarningRoundedIcon /> <span> {confirmPass.errorMsg} </span></Error> : '' }\n                                value = {confirmPass.val}\n                         />\n                    </InputContainer>\n                    <div className='action'>\n                        <Button color='primary' variant='contained' \n                                style={{ textTransform : 'capitalize' }}\n                                disabled={loader}\n                                disableElevation\n                                onClick={passwordHandler}>\n                                Change Password\n                        </Button>\n                    </div>      \n               </FormContainer> \n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        loader : state.resetPasswordReducer.emailLoader,\n        resetSuccess : state.resetPasswordReducer.resetSuccess,\n        resetError : state.resetPasswordReducer.resetError,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        resetPassword : (pass, resetToken) => dispatch(resetPassword(pass, resetToken))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPasswordForm);\n\nconst FormContainer = motion.custom(styled(Card)`\n    &&& {\n        height : 100%;\n        width : 100%;\n        display : flex;\n        flex-direction : column;\n        padding : 1.5rem;\n        box-sizing : border-box;\n        align-items : center;\n        .action {\n            align-self : flex-end;\n        }\n    }\n`)\nconst InputContainer = styled.div`\n   width : 100%;\n    margin : 5px 0px;\n    position : relative;\n    .MuiFormHelperText-root {\n        font-weight : 500;\n    }\n`\nconst StyledTextField = styled(TextField)`\n    ${({ theme }) => `\n        label {\n            font-weight : 500;\n        }\n        .Mui-focused {\n            font-weight : 400;\n        }\n        .MuiOutlinedInput-root {\n            fieldset {\n                border-color: rgba(0, 0, 0, 0.23);\n            }\n            &:hover fieldset {\n                border-color: rgba(0, 0, 0, 0.23);\n            }\n            &.Mui-focused fieldset {\n                border-color: ${theme.palette.primary.main};\n            }\n        }\n        .MuiFormHelperText-root {\n            top : 100%;\n            margin-top : 0px;\n            margin-left : 0px;\n        }\n        `}\n`\nconst Error = styled.span`\n   display : flex;\n   align-items : center;\n   ${({ theme }) => `color : ${theme.palette.secondary.main}`};\n   font-weight : 500;\n   .MuiSvgIcon-root {\n       font-size : 16px;\n       margin-right : 5px;\n   }\n`  ","import { SENDING_EMAIL_FOR_RESET, SENDING_EMAIL_FOR_RESET_SUCCESS, SENDING_EMAIL_FOR_RESET_FAIL,\n        RESETTING_PASSWORD, RESETTING_PASSWORD_SUCCESS, RESETTING_PASSWORD_FAIL } from './actionTypes';\nimport axios from 'axios';\n\nconst sendingEmailForReset = () => {\n    return {\n        type : SENDING_EMAIL_FOR_RESET\n    }\n}\n\nconst sendingEmailForResetSuccess = () => {\n    return {\n        type : SENDING_EMAIL_FOR_RESET_SUCCESS\n    }\n}\n\nconst sendingEmailForResetFail = () => {\n    return {\n        type : SENDING_EMAIL_FOR_RESET_FAIL\n    }\n}\n\nexport const sendEmailToReset = email => {\n    return dispatch => {\n        dispatch(sendingEmailForReset());\n        axios.post(`/resetPassword/${email}`)\n          .then(res => {\n              if(res.status === 200){\n                dispatch(sendingEmailForResetSuccess()); \n              }\n              else {\n                dispatch(sendingEmailForResetFail());\n              }\n          })\n          .catch(err => {\n              console.log(err.response.status);\n              dispatch(sendingEmailForResetFail());\n          })\n    }\n}\n\nconst resettingPassword = () => {\n    return {\n        type : RESETTING_PASSWORD\n    }\n}\n\nconst resettingPasswordSuccess = () => {\n    return {\n        type : RESETTING_PASSWORD_SUCCESS\n    }\n}\n\nconst resettingPasswordFail = () => {\n    return {\n        type : RESETTING_PASSWORD_FAIL\n    }\n}\n\nexport const resetPassword = (newPassword, { resetToken }) => {\n    console.log(newPassword, resetToken)\n    return dispatch => {\n        dispatch(resettingPassword());\n        axios.post(`/user/resetPassword?token=${resetToken}&password=${newPassword}`)\n            .then(_ => {\n                dispatch(resettingPasswordSuccess());\n            })\n            .catch(_ => {\n                dispatch(resettingPasswordFail());\n            })\n    }\n}","import React from 'react'\nimport styled from 'styled-components';\nimport { Card, Typography, TextField, Button } from '@material-ui/core';\nimport logo from '../Assets/logo.png'\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\nimport { sendEmailToReset } from '../Store/Actions/resetPasswordAction';\nimport { connect } from 'react-redux';\nimport { Alert } from '@material-ui/lab'\n\nfunction ForgotPasswordForm({ sendEmailToReset, loader, error, emailSendSuccess }) {\n\n    const [email, setEmail] = React.useState({ value : '', error : false, errorMsg : 'Enter a valid email address.' });\n\n    const emailChangeHandler = e => {\n        setEmail({ ...email, value : e.target.value, error : false })\n    }\n\n    const enterKeyHandler = e => {\n        if(e.keyCode === 13){\n            verifyEmailHandler();\n        }\n    }\n\n    const verifyEmailHandler = () => {\n        let emailError = false;\n        const emailRegx = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n        if( emailRegx.test(email.value) ){\n            emailError = false;\n        }\n        else {\n            emailError = true;\n        }\n        if(emailError){\n            setEmail({ ...email, error : emailError })\n        }\n        else {\n           sendEmailToReset(email.value);\n        }\n    }\n\n    React.useEffect(() => {\n        if(error) {\n            setEmail( prev => {\n                return {\n                    ...prev,\n                    error : true\n                }\n            })\n        }\n    },[error])\n\n    return (\n               <FormContainer square elevation={0}>\n                    <img src={logo} alt='' style={{ width : '35px' }}/>\n                    <Typography variant='subtitle2' style={{ marginTop : '10px' }}>\n                        SMS Nepal\n                    </Typography>\n                    <Typography variant='h5' style={{ marginTop : '10px' }}>\n                        Password Recovery\n                    </Typography>\n                    <Typography variant='body2' style={{ marginTop : '10px' }}>\n                        Enter your email address to recover password.\n                    </Typography>\n                    { emailSendSuccess && <StyledAlert severity=\"success\" style={{ marginTop : '10px' }}>\n                          Password reset link has been sucessfully sent to your email.\n                            <div className='emailBtn'>  \n                                <a href={email.value && `https://${email.value.substring(email.value.indexOf('@') + 1, email.value.length)}`} \n                                        target ='_blank'\n                                        rel=\"noopener noreferrer\"\n                                        style={{ textDecoration : 'none' }}>\n                                                <Button size='small'\n                                                        disableElevation\n                                                        > \n                                                        check mail\n                                                </Button>  \n                                </a>\n                            </div> \n                     </StyledAlert>}\n                    <InputContainer style={{marginBottom : '25px'}}>\n                        <StyledTextField\n                                id=\"outlined-error-helper-text\"\n                                label=\"Email\"\n                                variant=\"outlined\"\n                                fullWidth\n                                type=\"text\"\n                                onKeyDown = {enterKeyHandler}\n                                size = 'medium'\n                                autoFocus\n                                disabled={loader}\n                                value={email.value}\n                                error = {email.error}\n                                helperText = { email.error ? <Error><WarningRoundedIcon /> <span> {email.errorMsg} </span></Error> : '' }\n                                onChange = {emailChangeHandler}\n                        />\n                    </InputContainer>\n                    <div className='action'>\n                        {!emailSendSuccess && <Button color='primary' variant='contained' \n                                disableElevation\n                                disabled={loader}\n                                onClick={verifyEmailHandler} \n                                >\n                                Next\n                        </Button>}\n                    </div>      \n               </FormContainer> \n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        loader : state.resetPasswordReducer.emailLoader,\n        error : state.resetPasswordReducer.emailError,\n        emailSendSuccess : state.resetPasswordReducer.emailSendSuccess,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        sendEmailToReset : (email) => dispatch(sendEmailToReset(email))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPasswordForm);\n\nconst FormContainer = styled(Card)`\n    &&& {\n        height : 100%;\n        width : 100%;\n        display : flex;\n        flex-direction : column;\n        padding : 1.5rem;\n        box-sizing : border-box;\n        align-items : center;\n        .action {\n            align-self : flex-end;\n        }\n    }\n`\nconst InputContainer = styled.div`\n   width : 100%;\n    margin : 20px 0px;\n    position : relative;\n    .MuiFormHelperText-root {\n        font-weight : 500;\n    }\n`\nconst StyledTextField = styled(TextField)`\n    ${({ theme }) => `\n        label {\n            font-weight : 500;\n        }\n        .Mui-focused {\n            font-weight : 400;\n        }\n        .MuiOutlinedInput-root {\n            fieldset {\n                border-color: rgba(0, 0, 0, 0.23);\n            }\n            &:hover fieldset {\n                border-color: rgba(0, 0, 0, 0.23);\n            }\n            &.Mui-focused fieldset {\n                border-color: ${theme.palette.primary.main};\n            }\n        }\n        .MuiFormHelperText-root {\n            top : 100%;\n            margin-top : 0px;\n            margin-left : 0px;\n        }\n        `}\n`\nconst Error = styled.span`\n   display : flex;\n   align-items : center;\n   ${({ theme }) => `color : ${theme.palette.secondary.main}`};\n   font-weight : 500;\n   .MuiSvgIcon-root {\n       font-size : 16px;\n       margin-right : 5px;\n   }\n`  \nconst StyledAlert = styled(Alert)`\n    &&& {\n        padding-top : 5px;\n        padding-bottom : 0px;\n        .emailBtn {\n            display : flex;\n            width : 100%;\n            justify-content : flex-start;\n            margin-top : 3px;\n        }\n    }\n`","import React from 'react'\nimport styled from 'styled-components'\nimport ResetPasswordForm from './ResetPasswordForm'\nimport ForgotPasswordForm from './ForgotPasswordForm'\nimport { LinearProgress } from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport { useLocation, useHistory } from 'react-router-dom'\n\nfunction ForgotPassword({ loader }) {\n\n    const { search } = useLocation();\n    const { push } = useHistory();\n    const [resetToken, setResetToken] = React.useState(false)\n\n    React.useEffect(() => {\n        if(search.split('=')[0] === '?code'){\n            setResetToken(prev => {\n                return {\n                    ...prev,\n                    resetToken : search.split('=')[1]\n                }\n            })\n            push('/forgot-password');\n        }\n    }, [search, push])\n\n    return (\n        <Wrapper>\n            <Container>\n                {loader && <LinearProgress />}\n                { !resetToken ? \n                    <ForgotPasswordForm/> \n                    : \n                    <ResetPasswordForm resetToken={resetToken}/>}\n            </Container>   \n        </Wrapper>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        loader : state.resetPasswordReducer.emailLoader,\n    }\n}\n\nexport default connect(mapStateToProps)(ForgotPassword)\n\nconst Wrapper = styled.div`\n      width : 100%;\n      height : ${window.innerHeight}px;\n      display : flex;\n      justify-content : center;\n      align-items : center;\n      background : #fff;\n`  \nconst Container = styled.div`\n        height : 80%;\n        width : 400px;\n        overflow : hidden;\n        background : #fff;\n        border : 1px solid #ccc;\n        border-radius : 5px;\n        @media( max-width : 768px ) {\n            height : ${window.innerHeight};\n            width : 100%;\n        }\n`\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport LandingPage from '../Component/LandingPage';\nimport ForgotPassword from '../Component/ForgotPassword';\n\nfunction PublicPage() {\n    return (\n        <Switch>\n             <Route path='/forgot-password' component={ForgotPassword} exact/>   \n             <Route path='/' component={LandingPage}/>   \n        </Switch>\n    )\n}\n\nexport default PublicPage\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Avatar, Typography, Divider } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport BarChartOutlinedIcon from '@material-ui/icons/BarChartOutlined';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport  { logOut } from '../Store/Actions/authAction';\r\nimport { connect } from 'react-redux';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport logo from '../Assets/logo.png'\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\n\r\nfunction Navigation({ logOut, userLoader, itemClicked, user }) {\r\n\r\n    const history = useHistory();\r\n\r\n    const logOutHandler = () => {\r\n        logOut();\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n              <Header>\r\n                     <img src={logo} style={{ color : '#fff',width : '25px', marginRight : '10px' }} alt=''/>\r\n                    <LogoTypo>\r\n                         SMS Nepal\r\n                    </LogoTypo>\r\n              </Header>\r\n              <Divider />\r\n              { !userLoader ? \r\n                    <StyledAvatar>\r\n                       { user.name && user.name.charAt(0).toUpperCase() }\r\n                    </StyledAvatar> \r\n                    :\r\n                    <Skeleton variant=\"circle\" width={60} height={60} \r\n                                style={{ background : 'rgba(255, 255, 255, 0.1)', marginTop : '10px' }}\r\n                    />\r\n                }\r\n               { !userLoader ? \r\n               <Name>\r\n                   <Typography variant='subtitle2'>\r\n                         { user.name && user.name }\r\n                   </Typography>   \r\n                </Name> \r\n                 :\r\n               <Skeleton width={80} height={30} \r\n                        style={{ background : 'rgba(255, 255, 255, 0.1)', marginTop : '10px' }}\r\n                    />\r\n                }\r\n                <StyledList component=\"nav\" aria-labelledby=\"nested-list-subheader\">\r\n                        <StyledNavLink to='/dashboard' activeClassName='activeNav' exact onClick={itemClicked}>\r\n                                <ListItem button>\r\n                                        <ListItemIcon>\r\n                                            <BarChartOutlinedIcon fontSize='small'/>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Dashboard\" />\r\n                                </ListItem>\r\n                        </StyledNavLink>\r\n                        <StyledNavLink to='/manage-groups' activeClassName='activeNav' exact onClick={itemClicked}>\r\n                                <ListItem button>\r\n                                        <ListItemIcon>\r\n                                            <GroupAddIcon fontSize='small'/>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Manage Groups\" />\r\n                                </ListItem>\r\n                        </StyledNavLink>\r\n                        <StyledNavLink to='/setting' activeClassName='activeNav' exact onClick={itemClicked}>\r\n                                <ListItem button>\r\n                                        <ListItemIcon>\r\n                                            <SettingsIcon fontSize='small'/>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Setting\" />\r\n                                </ListItem>\r\n                        </StyledNavLink>\r\n                        <StyledNavLink to='/manage-api' activeClassName='activeNav' exact onClick={itemClicked}>\r\n                                <ListItem button>\r\n                                        <ListItemIcon>\r\n                                            <CodeIcon fontSize='small'/>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Manage Api\" />\r\n                                </ListItem>\r\n                        </StyledNavLink>\r\n                        <StyledNavLink to='/subscription' activeClassName='subs' exact onClick={itemClicked}>\r\n                                <ListItem button>\r\n                                        <ListItemIcon>\r\n                                            <i className=\"flaticon-crown\"></i>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Subscription\" style={{ color : '#F27121' }}/>\r\n                                </ListItem>\r\n                        </StyledNavLink>\r\n                        <ListItem button onClick={logOutHandler}>\r\n                                        <ListItemIcon>\r\n                                            <ExitToAppIcon fontSize='small' style={{ color : '#bfbfbf' }}/>\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"Log out\" style={{ color : '#bfbfbf' }}/>\r\n                        </ListItem>\r\n                </StyledList>      \r\n                <Footer>\r\n                    <Typography variant='caption' align='center'>\r\n                         SMS Nepal &copy; 2020\r\n                    </Typography>\r\n              </Footer>\r\n        </Container>    \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLoader : state.userReducer.userLoader,\r\n        user : state.userReducer.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logOut : () => dispatch(logOut())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n\r\nconst Container = styled.div`\r\n    height : 100%;\r\n    flex-basis : 260px;\r\n    display : flex;\r\n    flex-direction : column;\r\n    align-items : center;\r\n    border-right : 1px solid rgba(0, 0, 0, 0.12);\r\n    box-sizing: border-box;\r\n    background : #031525;\r\n`\r\nconst Header = styled.div`\r\n    height : 56px;\r\n    box-sizing : border-box;\r\n    padding : 0px 10px;\r\n    display : flex;\r\n    align-items : center;\r\n    color : #fff;\r\n    border-bottom : 1px solid  rgba(255, 255, 255, 0.1);\r\n    width : 100%;\r\n`\r\nconst StyledAvatar = styled(Avatar)`\r\n    && {\r\n        height : 60px;\r\n        width : 60px;\r\n        margin-top : 20px;\r\n        ${({ theme }) => `background : ${theme.palette.success.main}`};\r\n        font-size : 30px;\r\n    }\r\n`\r\nconst Name = styled.div`\r\n    margin-top : 7px;\r\n    text-align : center;\r\n    font-size : 15px;\r\n    color : #fff;\r\n`\r\nconst StyledList = styled(List)`\r\n   &&& {\r\n       flex : 1;\r\n       box-sizing : border-box;\r\n       margin-top : 20px;\r\n       width : 100%;\r\n       color: #546e7a;\r\n       padding-left : 10px;\r\n       padding-right : 10px;\r\n       .MuiListItem-root {\r\n           padding-top : 5px;\r\n           padding-bottom : 5px;\r\n       }\r\n       .MuiListItemIcon-root {\r\n           min-width : 0px;\r\n           margin-right: 8px;\r\n       }\r\n       .MuiButtonBase-root {\r\n           border-radius : 3px;\r\n       }\r\n       .MuiTypography-root{\r\n           font-size: 0.915rem;\r\n           font-weight : 500;\r\n       }\r\n   }\r\n  \r\n`\r\nconst StyledNavLink = styled(NavLink)`\r\n    ${({ theme }) => `\r\n      &&& {\r\n            color: #bfbfbf;\r\n            text-decoration: none;\r\n            .MuiSvgIcon-root{\r\n                color : #bfbfbf;\r\n            }\r\n            &.activeNav {\r\n                  color : #bfbfbf;\r\n                }\r\n            }\r\n            &.activeNav .MuiButtonBase-root {\r\n                background : rgba(255, 255, 255, 0.1);\r\n            }\r\n            &.activeNav .MuiSvgIcon-root{\r\n                color : #bfbfbf;\r\n            }\r\n            &.subs .MuiButtonBase-root{\r\n                background : rgba(242, 113, 33, 0.2);\r\n            }\r\n    `}\r\n`\r\nconst LogoTypo = styled(Typography)`\r\n   &&& {\r\n     font-family: 'Kanit', sans-serif;\r\n     flex : 1;\r\n     font-size : 20px;\r\n     margin-left : 6px;\r\n   }\r\n`\r\nconst Footer = styled.div`\r\n    height : 56px;\r\n    box-sizing : border-box;\r\n    padding : 0px 10px;\r\n    display : flex;\r\n    align-items : center;\r\n    color : #fff;\r\n    border-top : 1px solid  rgba(255, 255, 255, 0.1);\r\n    width : 100%;\r\n    justify-content : center;\r\n`","import {  LOAD_USER_DATA_SUCCESS, LOADING_USER_DATA, SENDING_MESSAGE, SENDING_MESSAGE_SUCCESS, SENDING_MESSAGE_FAIL, SET_USER_SUCCESS,\r\n        SET_USER_ERROR, SUCCESS, ERROR, CHANGING_PASSWORD, CHANGING_PASSWORD_SUCCESS, CHANGING_PASSWORD_ERROR, CHANGING_USER_DETAIL,\r\n        CHANGING_USER_DETAIL_SUCCESS, CHANGING_USER_DETAIL_ERROR,GENERATING_API_KEY, GENERATING_API_KEY_SUCCESS, GENERATING_API_KEY_ERROR,\r\n        FETCHING_API_KEY } from './actionTypes';\r\nimport { logOut } from './authAction';\r\nimport axios from 'axios';\r\n\r\nconst loadingUser = () => {\r\n    return {\r\n        type : LOADING_USER_DATA\r\n    }\r\n}\r\n\r\nconst loadUserDataSuccess = user => {\r\n    return {\r\n        type : LOAD_USER_DATA_SUCCESS,\r\n        user : user\r\n    }\r\n}\r\n\r\nexport const loadUser = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch(loadingUser());\r\n        const token = getState().authReducer.token;\r\n        axios.get(`/userInfo`,\r\n            { headers : { Authorization : `Bearer ${token}`} }\r\n        )\r\n        .then(res => {\r\n            dispatch(loadUserDataSuccess(res.data));\r\n        })\r\n        .catch(err => {\r\n            logOut();\r\n        })\r\n    }\r\n}\r\n\r\nconst sendingMessage = () => {\r\n    return {\r\n        type : SENDING_MESSAGE\r\n    }\r\n}\r\n\r\nconst sendingMessageSuccess = count => {\r\n    return {\r\n        type : SENDING_MESSAGE_SUCCESS,\r\n        count : count\r\n    }\r\n}\r\n\r\nconst sendingMessageFail = () => {\r\n    return {\r\n        type : SENDING_MESSAGE_FAIL\r\n    }\r\n}\r\n\r\nexport const success = data => {\r\n    return {\r\n        type : SUCCESS,\r\n        data : data\r\n    }\r\n}\r\n\r\nexport const error = error => {\r\n    return {\r\n        type : ERROR,\r\n        error : error\r\n    }\r\n}\r\n\r\nexport const sendMessage = (numberList, sms) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(sendingMessage());\r\n        let numbers = [];\r\n        const token = getState().authReducer.token;\r\n        for(let key in numberList){\r\n            if(numberList[key].value){\r\n                numbers.push(key);\r\n            }\r\n        }\r\n        if(numbers.length === 0){\r\n            dispatch(sendingMessageFail());\r\n            dispatch(error('Enter atleast one receipt.'));\r\n        }\r\n        else {\r\n            axios.post(`/sendSMS`,\r\n                { sms : sms, phone : numbers },\r\n                { headers : { Authorization : `Bearer ${token}`} }\r\n              )\r\n               .then(res => {\r\n                   console.log(res);\r\n                   dispatch(sendingMessageSuccess(numbers.length));\r\n                   dispatch(success('Message successfully sent to '+numbers.length+' person.'));\r\n               })\r\n               .catch(err => {\r\n                  if(err.response.data.status === 402){\r\n                    dispatch(sendingMessageFail());\r\n                    dispatch(error('SMS limit exceeds. Change your sms subscription plan.'));\r\n                  }\r\n                  else {\r\n                    dispatch(sendingMessageFail());\r\n                    dispatch(error('Could not send sms right now. Please try again later'));\r\n                  }\r\n               })\r\n        }\r\n    }\r\n} \r\n\r\nexport const setUserSuccess = () => {\r\n    return {\r\n        type : SET_USER_SUCCESS\r\n    }\r\n}\r\n\r\nexport const setUserError = () => {\r\n    return {\r\n        type : SET_USER_ERROR\r\n    }\r\n}\r\n\r\nconst changingPassword = () => {\r\n    return {\r\n        type : CHANGING_PASSWORD\r\n    }\r\n}\r\nconst changingPasswordSuccess = () => {\r\n    return {\r\n        type : CHANGING_PASSWORD_SUCCESS\r\n    }\r\n}\r\nconst changingPasswordError = () => {\r\n    return {\r\n        type : CHANGING_PASSWORD_ERROR\r\n    }\r\n}\r\nexport const changePassword = (oldPass, newPass) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(changingPassword())\r\n        const token = getState().authReducer.token;\r\n        axios.post(`/user/changePassword?oldPassword=${oldPass}&newPassword=${newPass}`,\r\n               null,\r\n               { headers : { Authorization : `Bearer ${token}`} }\r\n               )\r\n          .then(res => {\r\n               if(res.status === 200){\r\n                    dispatch(changingPasswordSuccess());\r\n                    dispatch(success(res.data))\r\n               }\r\n          })  \r\n          .catch(err => {\r\n              if(err.response.status === 401){\r\n                dispatch(changingPasswordError());\r\n                dispatch(error('Current password does not match'))\r\n              }\r\n              else {\r\n                dispatch(changingPasswordError());\r\n                dispatch(error('Could not change password right now.'))\r\n              }\r\n          }) \r\n        setTimeout(() => {\r\n            \r\n           \r\n        },1000)  \r\n    }\r\n}\r\n\r\nconst changingUserDetail = () => {\r\n    return {\r\n        type : CHANGING_USER_DETAIL\r\n    }\r\n}\r\nconst changingUserDetailSuccess = (name, phone) => {\r\n    return {\r\n        type : CHANGING_USER_DETAIL_SUCCESS,\r\n        name : name,\r\n        phone : phone\r\n    }\r\n}\r\nconst changingUserDetailError = () => {\r\n    return {\r\n        type : CHANGING_USER_DETAIL_ERROR\r\n    }\r\n}\r\n\r\nexport const changeUserDetail = (name, phone) => {\r\n    console.log(name, phone);\r\n    return (dispatch, getState) => {\r\n        dispatch(changingUserDetail());\r\n        const token = getState().authReducer.token;\r\n        axios.patch(`/updateUserDetails`, { name : name, phone : phone },\r\n             { headers : { Authorization : `Bearer ${token}`} })\r\n             .then(res => {\r\n                 if(res.status === 200) {\r\n                    dispatch(changingUserDetailSuccess(name, phone));\r\n                 }\r\n                 else {\r\n                    dispatch(changingUserDetailError());\r\n                    dispatch(error('Could not change detail right now.'))\r\n                 }\r\n             })\r\n             .catch(_ => {\r\n                dispatch(changingUserDetailError());\r\n                dispatch(error('Could not change detail right now.'))\r\n             })\r\n    }\r\n}\r\n\r\nconst generatingApiKey = () => {\r\n    return {\r\n        type : GENERATING_API_KEY\r\n    }\r\n}\r\nconst generatingApiKeySuccess = (apiKey) => {\r\n    return {\r\n        type : GENERATING_API_KEY_SUCCESS,\r\n        apiKey : apiKey\r\n    }\r\n}\r\nconst generatingApiKeyError = () => {\r\n    return {\r\n        type : GENERATING_API_KEY_ERROR\r\n    }\r\n}\r\nexport const generateApi = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch(generatingApiKey());\r\n        const token = getState().authReducer.token;\r\n        axios.patch(`/getApiKey`, null,\r\n                { headers : { Authorization : `Bearer ${token}`} })\r\n             .then(res => {\r\n                 dispatch(generatingApiKeySuccess(res.data.apiKey));   \r\n             })\r\n             .catch(err => {\r\n                dispatch(generatingApiKeyError());\r\n                dispatch(error('Could not generate API key right now.'))\r\n             })   \r\n    }\r\n}\r\n\r\nconst fetchingApiKey = () => {\r\n    return {\r\n        type : FETCHING_API_KEY\r\n    }\r\n}\r\n\r\nexport const getApiKey = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch(fetchingApiKey());\r\n        const token = getState().authReducer.token;\r\n        axios.get(`/getApiKey`,\r\n                { headers : { Authorization : `Bearer ${token}`} })\r\n             .then(res => {\r\n                 dispatch(generatingApiKeySuccess(res.data));   \r\n             })\r\n             .catch(err => {\r\n                dispatch(generatingApiKeyError());\r\n                dispatch(error('Could not get API key right now.'))\r\n             })   \r\n    }\r\n}","import { LOADING_GROUPS, LOADING_GROUPS_SUCCESS, LOADING_GROUPS_ERROR, CREATING_GROUPS, CREATING_GROUPS_FAIL, CREATING_GROUPS_SUCCESS,\r\n        UPDATING_GROUP_NAME, UPDATING_GROUP_NAME_SUCCESS, UPDATING_GROUP_NAME_ERROR, LOADING_GROUP_LIST, LOADING_GROUP_LIST_SUCCESS,\r\n        LOADING_GROUP_LIST_ERROR, DELETE_GROUP, DELETE_GROUP_ERROR, DELETE_GROUP_SUCCESS, ADDING_GROUP_MEMBER, ADDING_GROUP_MEMBER_SUCCESS,\r\n        ADDING_GROUP_MEMBER_ERROR, DELETEING_GROUPMEMBER, DELETEING_GROUPMEMBER_ERROR, DELETEING_GROUPMEMBER_SUCCESS, UPDATING_GROUPMEMBER,\r\n        UPDATING_GROUPMEMBER_ERROR, UPDATING_GROUPMEMBER_SUCCESS, SET_CREATE_SUCCESS } from './actionTypes';\r\nimport { error, success } from './userAction'\r\nimport axios from 'axios'\r\n\r\nconst loadingGroups = () => {\r\n    return {\r\n        type : LOADING_GROUPS\r\n    }\r\n}\r\n\r\nconst loadingGroupsSuccess = groups => {\r\n    return {\r\n        type : LOADING_GROUPS_SUCCESS,\r\n        groups : groups\r\n    }\r\n}\r\nconst loadingGroupsError = error => {\r\n    return {\r\n        type : LOADING_GROUPS_ERROR,\r\n        error : error\r\n    }\r\n}\r\nexport const loadGroups = () => {\r\n    return  (dispatch, getState) => {\r\n        const token = getState().authReducer.token;\r\n        dispatch(loadingGroups());\r\n        axios.get(`/groups`,\r\n                { headers : { Authorization : `Bearer ${token}` } })\r\n             .then(res => {\r\n                 if(res.status === 200){\r\n                     dispatch(loadingGroupsSuccess(res.data));\r\n                 } \r\n                 else {\r\n                     dispatch(loadingGroupsError())\r\n                     dispatch(error('Could not load groups. Try again later'));\r\n                 }\r\n             })   \r\n             .catch(err => {\r\n                 dispatch(loadingGroupsError())\r\n                 dispatch(error('Could not load groups. Try again later'));\r\n             })\r\n    }   \r\n}\r\n\r\nconst creatingGroups = () => {\r\n    return {\r\n        type : CREATING_GROUPS\r\n    }\r\n}\r\nconst creatingGroupsSuccess = data => {\r\n    return {\r\n        type : CREATING_GROUPS_SUCCESS,\r\n        data : data\r\n    }\r\n}\r\nconst creatingGroupsFail = () => {\r\n    return {\r\n        type : CREATING_GROUPS_FAIL\r\n    }\r\n}\r\n\r\nexport const setCreateSuccess = () => {\r\n    return dispatch => {\r\n        dispatch({ type : SET_CREATE_SUCCESS })\r\n    }\r\n}\r\n\r\nexport const createGroup = groupName => {\r\n    return (dispatch, getState) => { \r\n        dispatch(creatingGroups());\r\n        const token = getState().authReducer.token;\r\n        axios.post('/groups/create', { groupName : groupName },\r\n                 { headers : { Authorization : `Bearer ${token}` } })\r\n               .then(res => {\r\n                   if(res.status === 200){\r\n                       console.log(res);\r\n                       dispatch(creatingGroupsSuccess(res.data)); \r\n                   }\r\n                   else {\r\n                        dispatch(creatingGroupsFail());\r\n                        dispatch(error('Could not create groups. Try again later'));\r\n                   }\r\n               })\r\n               .catch(err => {\r\n                   dispatch(creatingGroupsFail());\r\n                   dispatch(error('Could not create groups. Try again later'));\r\n               })  \r\n    }\r\n}\r\n\r\nconst updatingGroupName = () => {\r\n    return {\r\n        type : UPDATING_GROUP_NAME\r\n    }\r\n}\r\nconst updatingGroupNameSuccess = (groupName, groupId) => {\r\n    return {\r\n        type : UPDATING_GROUP_NAME_SUCCESS,\r\n        groupName : groupName,\r\n        groupId : groupId\r\n    }\r\n}\r\nconst updatingGroupNameError = () => {\r\n    return {\r\n        type : UPDATING_GROUP_NAME_ERROR\r\n    }\r\n}\r\nexport const updateGroupName = (groupName, groupId) => {\r\n    return (dispatch, getState) => {\r\n         dispatch(updatingGroupName());\r\n         const token = getState().authReducer.token;\r\n         console.log(token);\r\n         axios.patch(`/groups/updateGroupDetails?groupName=${groupName}&groupId=${groupId}`,null,\r\n                 { headers : { Authorization : `Bearer ${token}` }})\r\n                 .then(_ => {\r\n                     dispatch(updatingGroupNameSuccess(groupName, groupId))\r\n                 })\r\n                 .catch(err => {\r\n                     dispatch(updatingGroupNameError());\r\n                     dispatch(error('Could not create groups. Try again later'));\r\n                 })\r\n    }\r\n}\r\n\r\nconst loadingGroupList = () => {\r\n    return {\r\n        type : LOADING_GROUP_LIST\r\n    }\r\n}\r\nconst loadingGroupListSuccess = (data) => {\r\n    return {\r\n        type : LOADING_GROUP_LIST_SUCCESS,\r\n        data : data\r\n    }\r\n}\r\nconst loadingGroupListError = () => {\r\n    return {\r\n        type : LOADING_GROUP_LIST_ERROR\r\n    }\r\n}\r\n\r\nexport const loadGroupList = (groupId, pageNo, filter) => {\r\n    console.log(filter);\r\n    return (dispatch, getState) => {\r\n        dispatch(loadingGroupList());\r\n         const token = getState().authReducer.token;\r\n         axios.get(`/groups/members?groupId=${groupId}&page=${pageNo}`,\r\n                { headers : { Authorization : `Bearer ${token}` }})\r\n              .then(res => {\r\n                  dispatch(loadingGroupListSuccess(res.data));\r\n              })  \r\n              .catch(err =>{\r\n                  dispatch(loadingGroupListError());\r\n                  dispatch(error('Could not create groups. Try again later'));\r\n              })\r\n    }\r\n}\r\n\r\nconst deletingGroups = () => {\r\n    return {\r\n        type : DELETE_GROUP\r\n    }\r\n}\r\n\r\nconst deletingGroupsSuccess = groupId => {\r\n    return {\r\n        type : DELETE_GROUP_SUCCESS,\r\n        groupId : groupId\r\n    }\r\n}\r\n\r\nconst deletingGroupsError = () => {\r\n    return {\r\n        type : DELETE_GROUP_ERROR\r\n    }\r\n}\r\n\r\nexport const deleteGroup = groupId => {\r\n    return (dispatch, getState) => {\r\n        dispatch(deletingGroups());\r\n        const token = getState().authReducer.token;\r\n        axios.delete(`/groups/delete?groupIds=${groupId}`,\r\n            { headers : { Authorization : `Bearer ${token}` }})\r\n            .then(_ => {\r\n                dispatch(deletingGroupsSuccess(groupId))\r\n            })\r\n            .catch(_ => {\r\n                dispatch(deletingGroupsError());\r\n                dispatch(error('Could not delete group. Try again later'));\r\n            })\r\n    }\r\n}\r\n\r\nconst addingGroupMember = () => {\r\n    return {\r\n        type : ADDING_GROUP_MEMBER\r\n    }\r\n}\r\n\r\nconst addingGroupMemberSuccess = () => {\r\n    return {\r\n        type : ADDING_GROUP_MEMBER_SUCCESS\r\n    }\r\n}\r\n\r\nconst addingGroupMemberError = () => {\r\n    return {\r\n        type : ADDING_GROUP_MEMBER_ERROR\r\n    }\r\n}\r\n\r\nexport const addGroupMember = (groupId, groupList) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(addingGroupMember());\r\n        const token = getState().authReducer.token;\r\n        axios.post(`/groups/addGroupMember?groupId=${groupId}`, \r\n                    groupList,\r\n                { headers : { Authorization : `Bearer ${token}` }})\r\n             .then(res => {\r\n                 console.log(res);\r\n                 dispatch(addingGroupMemberSuccess());\r\n                 dispatch(success('Members added to the groups successfully.'))\r\n             })\r\n             .catch(err => {\r\n                 dispatch(addingGroupMemberError());\r\n                 dispatch(error('Could not add members. Try again later'));\r\n             })\r\n    }\r\n}\r\n\r\nconst deletingGroupMembers = () => {\r\n    return {\r\n        type : DELETEING_GROUPMEMBER\r\n    }\r\n}\r\n\r\nconst deletingGroupMembersSuccess = (groupMemberId) => {\r\n    return {\r\n        type : DELETEING_GROUPMEMBER_SUCCESS,\r\n        groupMemberId : groupMemberId\r\n    }\r\n}\r\n\r\nconst deletingGroupMembersError = () => {\r\n    return {\r\n        type : DELETEING_GROUPMEMBER_ERROR\r\n    }\r\n}\r\n\r\nexport const deleteGroupMembers = (groupMemberId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(deletingGroupMembers());\r\n        const token = getState().authReducer.token\r\n        axios.delete(`/groups/deleteGroupMember?memberId=${groupMemberId}`,\r\n                { headers : { Authorization : `Bearer ${token}` }})\r\n                .then(res => {\r\n                    if(res.status === 200) {\r\n                        dispatch(deletingGroupMembersSuccess(groupMemberId))\r\n                    }\r\n                    else {\r\n                        dispatch(deletingGroupMembersError());\r\n                        dispatch(error('Could not delete group member. Please try again later'))\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err.response);\r\n                    dispatch(deletingGroupMembersError());\r\n                    dispatch(error('Could not delete group member. Please try again later'))\r\n                })\r\n    }\r\n}\r\n\r\nconst updatingGroupMember = () => {\r\n    return {\r\n        type : UPDATING_GROUPMEMBER\r\n    }\r\n}\r\nconst updatingGroupMemberSuccess = (memberId, memberName, memberPhone) => {\r\n    return {\r\n        type : UPDATING_GROUPMEMBER_SUCCESS,\r\n        memberId : memberId,\r\n        memberName : memberName,\r\n        memberPhone : memberPhone\r\n    }\r\n}\r\nconst updatingGroupMemberError = () => {\r\n    return {\r\n        type : UPDATING_GROUPMEMBER_ERROR\r\n    }\r\n}\r\nexport const updateGroupMember = (memberId, memberName, memberPhone) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(updatingGroupMember());\r\n        const token = getState().authReducer.token;\r\n        axios.patch(`/groups/updateGroupMemberDetails?memberId=${memberId}`,{ memberName : memberName , memberPhone : memberPhone },\r\n                { headers : { Authorization : `Bearer ${token}` }})\r\n             .then(res => {\r\n                 if(res.status === 200) {\r\n                    dispatch(updatingGroupMemberSuccess(memberId, memberName, memberPhone))\r\n                    dispatch(success('Member updated successfully.'))\r\n                 } \r\n                 else {\r\n                     dispatch(updatingGroupMemberError());\r\n                     dispatch(error('Could not update member detail. Please try again later'))\r\n                 }\r\n\r\n             })   \r\n             .catch(_ => {\r\n                dispatch(updatingGroupMemberError());\r\n                dispatch(error('Could not update member detail. Please try again later'))\r\n             })\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport { Typography, Button, Table, TableContainer, TableHead, TableRow, TableCell, TableBody, Checkbox, TextField, ClickAwayListener, CircularProgress } from '@material-ui/core';\r\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { connect } from 'react-redux';\r\nimport { sendMessage, setUserSuccess, error } from '../Store/Actions/userAction'\r\nimport Loader from './Loader'\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport readXlsxFile from 'read-excel-file'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { loadGroups } from '../Store/Actions/groupsAction'\r\nimport axios from 'axios'\r\n\r\nfunction Message({ sendMessage, loader, success, setUserSuccess, loadGroups, groups, groupsLoader, token, error }) {\r\n\r\n    const [number, setNumber] = useState({ value : '', error : false });\r\n    const [numberList, setNumberList] = useState({});\r\n    const [message, setMessage] = useState({ value : '', error : false });\r\n    const fileRef = React.useRef(null);\r\n    const [groupsChips, setGroupsChips] = useState(groups);\r\n    const [groupListLoader, setGroupListLoader] = useState(false)\r\n\r\n    const [open, setOpen] = useState({ val : false, label : '' });\r\n  \r\n    const handleClickAway = () => {\r\n      setOpen({ ...open, val : false });\r\n    };\r\n\r\n    const numberChangeHandler = e => {\r\n        setNumber({ ...number, value : e.target.value });\r\n        setOpen({ ...open, val : false });\r\n    }\r\n\r\n    const numberListHandler = () => {\r\n        const check = Object.keys(numberList).findIndex(n => n === number.value );\r\n        if(check === -1){\r\n            let newList = { ...numberList };\r\n            Object.assign(newList, { [number.value] : { value : true, name : '' } });\r\n            setNumberList({ ...newList });\r\n            setNumber({ ...number, value : '' })\r\n        }\r\n        else {\r\n            setOpen({ ...open, val : true, label : 'Number already exists.' });\r\n        }\r\n    }\r\n\r\n    const checkBoxHandler = (key, e) => {\r\n        setNumberList({\r\n            ...numberList,\r\n            [key] : {\r\n                ...numberList[key],\r\n                value : e.target.checked\r\n            }\r\n        })\r\n    }\r\n\r\n    const addNumberHandler = () => {\r\n           \r\n          if(number.value.length === 10){\r\n             numberListHandler()\r\n          }\r\n          else {\r\n              setOpen({ ...open, val : true, label : 'Enter a valid Number' });\r\n          }\r\n    }\r\n    const pressHandler = e => {\r\n        if(e.which === 13){\r\n            addNumberHandler();\r\n        }\r\n    }\r\n\r\n    const messageChangeHandler = e => {\r\n        setMessage({ ...message, value : e.target.value, error : false })\r\n    }\r\n\r\n    const sendMessageHandler = () => {\r\n        let messageError = false;\r\n        if(message.value.length < 2){\r\n            messageError = true\r\n        }\r\n        if(messageError) {\r\n            setMessage({ ...message, error : messageError });\r\n        }\r\n        else {\r\n           sendMessage(numberList, message.value)\r\n        }\r\n    }\r\n\r\n    const fileChangeHandler = e => {\r\n        let list = [];\r\n        const regx = /^[9]\\d{9}/;\r\n        readXlsxFile(e.target.files[0]).then((rows) => {\r\n               rows.map(number => number.map(num => list.push({ [num] : { value : true, name : '' } })));\r\n               list = list.filter(filterList => Object.keys(filterList)[0] !== 'null' && regx.test(Object.keys(filterList)[0]));\r\n               let newList = {};\r\n               list.map(ob => Object.assign(newList, ob));\r\n               setNumberList({ ...numberList, ...newList })\r\n        })\r\n    }\r\n\r\n    const groupCheckBoxHandler = (groupId, index, e) => {\r\n          let newGroup = [...groupsChips];\r\n          newGroup[index] = { ...newGroup[index], checked : e.target.checked };\r\n          setGroupsChips([...newGroup]);\r\n          if(e.target.checked){\r\n              setGroupListLoader(true);\r\n              axios.get(`/groups/members?groupId=${groupId}&page=0`,\r\n                    { headers : { Authorization : `Bearer ${token}` } })\r\n                   .then(res => {\r\n                        let newList = { ...numberList };\r\n                        res.data.map(member => \r\n                                Object.assign(newList, { [member.memberPhone] : { value : true, name : member.memberName, groupId : groupId } \r\n                              }))\r\n                        setNumberList({ ...newList });\r\n                        setGroupListLoader(false);\r\n                   })\r\n                   .catch(_ => {\r\n                        setGroupListLoader(false);\r\n                        error('Could not load data right now. Please try again later.')\r\n                   }) \r\n          }\r\n          else {\r\n                let newList = Object.fromEntries(Object.entries(numberList).filter(list => !list[1].groupId || list[1].groupId !== groupId))\r\n                setNumberList({...newList})\r\n          }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(success.value){\r\n            setNumber({ value : '', error : false });\r\n            setNumberList({});\r\n            setMessage({ value : '', error : false });\r\n            setUserSuccess();\r\n        }\r\n    },[success, setUserSuccess])\r\n\r\n    React.useEffect(() => {\r\n       groups.length === 0 && loadGroups();\r\n    },[loadGroups, groups])\r\n\r\n    React.useEffect(() => {\r\n        setGroupsChips([...groups])\r\n    },[groups])\r\n\r\n    return (\r\n        <Container>\r\n            { loader ? <Loader /> :  null}\r\n          <Header>\r\n              <Typography variant='subtitle2' color='textPrimary' style={{ fontSize : '16px' }}>\r\n                    Send Message\r\n              </Typography>    \r\n              <Button size='small' \r\n                      variant='contained' \r\n                      color='primary' \r\n                      endIcon={<PublishIcon fontSize='small'/>}\r\n                      disableElevation\r\n                      style={{ textTransform : 'capitalize' }}\r\n                      onClick = {() => fileRef.current.click()}>\r\n                    Import\r\n              </Button>    \r\n              <input type='file' ref={fileRef} style={{ display : 'none' }} onChange={fileChangeHandler} accept='.xlsx , .xls'/>\r\n          </Header> \r\n          <SearchBox>\r\n          <ClickAwayListener onClickAway={handleClickAway}>\r\n                <div className='clickAway'>\r\n                    <span className='box'>\r\n                            <StyledPermContactCalendarIcon />\r\n                            <input type='text' \r\n                                   placeholder = 'Enter receipt number....' \r\n                                   value={number.value} \r\n                                   onChange={numberChangeHandler}\r\n                                   onKeyDown={pressHandler}\r\n                                />\r\n                            <Button color='primary' variant='contained' disableElevation onClick={addNumberHandler}>\r\n                                Add\r\n                            </Button>\r\n                    </span>  \r\n                    {open.val ? (\r\n                                <div className='errorMsg'>\r\n                                    {open.label}\r\n                                </div>\r\n                                ) : null}\r\n                </div>\r\n            </ClickAwayListener>   \r\n          </SearchBox>\r\n          <Groups>\r\n               {!groupsLoader ? \r\n                   groupsChips.length > 0 && groupsChips.map((group, index) =>  \r\n                        <ChipList key={group.groupId}>\r\n                            <Checkbox color='primary'  \r\n                                      checked={group.checked || false}\r\n                                      disabled={groupListLoader}\r\n                                      onChange={groupCheckBoxHandler.bind(null, group.groupId, index)}  \r\n                                      style={{ padding : '5px' }} \r\n                                      size='small' />\r\n                             {group.groupName}   \r\n                    </ChipList>)\r\n                :\r\n                <GroupSkeleton>\r\n                     <Skeleton variant=\"rect\" width={80} height={30} style={{ borderRadius : '20px' }}/>\r\n                     <Skeleton variant=\"rect\" width={80} height={30} style={{ borderRadius : '20px', marginLeft : '7px' }}/>\r\n                     <Skeleton variant=\"rect\" width={80} height={30} style={{ borderRadius : '20px', marginLeft : '7px' }}/>\r\n                </GroupSkeleton> }       \r\n          </Groups>\r\n            { !groupListLoader ? <SMSList>\r\n                {  Object.keys(numberList).length !== 0 ?\r\n                    <TableContainer >\r\n                        <Table size=\"small\" aria-label=\"a dense table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Check</TableCell>\r\n                                    <TableCell align=\"center\">Name</TableCell>\r\n                                    <TableCell align=\"center\">Number</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    Object.keys(numberList).reverse().map( key => \r\n                                            <TableRow key={key}>\r\n                                                    <TableCell align=\"center\">\r\n                                                        <StyledCheckbox \r\n                                                                size='small' \r\n                                                                color='primary' \r\n                                                                checked={ numberList[key].value }\r\n                                                                onChange={ checkBoxHandler.bind(null, key) }/>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\">{numberList[key].name}</TableCell>\r\n                                                    <TableCell align=\"center\">{key}</TableCell>\r\n                                            </TableRow>\r\n                                        )\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                </TableContainer>\r\n                    :\r\n                    <div style={{ display : 'flex', justifyContent : 'center', color : '#757575' }}>\r\n                          <Typography variant='caption' >\r\n                                Add a number to send message.    \r\n                           </Typography>   \r\n                     </div>   \r\n                }       \r\n            </SMSList>\r\n            :\r\n            <div style={{ display : 'flex', justifyContent : 'center', padding : '1rem 0px' }}>\r\n                <CircularProgress size={30}/>\r\n            </div>\r\n            }\r\n            <MessageBox>\r\n                    <StyledTextField\r\n                         id=\"outlined-multiline-static\"\r\n                         label=\"Message\"\r\n                         multiline\r\n                         variant=\"outlined\"\r\n                         rows={4}\r\n                         fullWidth\r\n                         value={message.value}\r\n                         onChange={messageChangeHandler}\r\n                         error={message.error}\r\n                         helperText={ message.error ? \"Message should be atleast two character long.\" : \"\" }\r\n                    />\r\n             </MessageBox> \r\n             <Action>\r\n                    <Button size='small' \r\n                            variant='contained' \r\n                            color='primary' \r\n                            endIcon={<SendIcon />} \r\n                            disableElevation\r\n                            onClick={sendMessageHandler}>\r\n                        Send\r\n                    </Button>\r\n             </Action>          \r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n         token : state.authReducer.token,\r\n         loader : state.userReducer.messageLoader,\r\n         groups : state.groupsReducer.groups,\r\n         success : state.userReducer.success,\r\n         groupsLoader : state.groupsReducer.groupsLoader,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendMessage : (numberList, sms) => dispatch(sendMessage(numberList, sms)),\r\n        setUserSuccess : () => dispatch(setUserSuccess()),\r\n        loadGroups : () => dispatch(loadGroups()),\r\n        error : (err) => dispatch(error(err)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Message);\r\n\r\nconst Container = styled.div`\r\n    \r\n    display : flex;\r\n    flex-direction : column;\r\n    margin-bottom : 20px;\r\n    border-radius : 10px;\r\n    background : #fff;\r\n    box-shadow: rgba(53, 64, 82, 0.05) 1px 0px 14px 0px;\r\n`\r\n\r\nconst Header = styled.div`\r\n   height : 50px;\r\n   padding : 0px 20px;\r\n   display : flex;\r\n   align-items : center;\r\n   justify-content : space-between;\r\n   border-bottom : 1px solid rgba(0, 0, 0, 0.12);\r\n`\r\nconst SearchBox = styled.span`\r\n   display : flex;\r\n   justify-content : center;\r\n   align-items : center;\r\n   margin : 20px 10px 10px;\r\n   box-sizing : border-box;\r\n   position : relative;\r\n   width : auto;\r\n   .box {\r\n        padding-left : 10px;\r\n        border : 1px solid rgba(0, 0, 0, 0.2);\r\n        display : flex;\r\n        align-items : center;\r\n        border-radius : 5px;\r\n        button {\r\n        border-radius : 0px;\r\n        } \r\n        input {\r\n            outline : none;\r\n            width : 300px;\r\n            font-size : 16px;\r\n            border : 0px;\r\n            &::placeholder {\r\n                color : #aaa;\r\n            }\r\n            @media (max-width : 992px) {\r\n                width : 100%;\r\n            }\r\n        }\r\n       \r\n   }\r\n   .clickAway {\r\n            .errorMsg {\r\n                position : absolute;\r\n                top : calc(100% + 5px);\r\n                border : 1px solid #b00030;\r\n                background : #b71c1c;\r\n                font-size : 13px;\r\n                padding: 10px;\r\n                color: #fff;\r\n                border-radius : 5px;\r\n                &::before {\r\n                    content : '';\r\n                    position : absolute;\r\n                    bottom : 100%;\r\n                    border-top : 5px solid transparent;\r\n                    border-bottom : 5px solid #b00030;\r\n                    border-left : 5px solid transparent;\r\n                    border-right : 5px solid transparent;\r\n                }\r\n            }\r\n         }\r\n \r\n`\r\nconst StyledPermContactCalendarIcon = styled(PermContactCalendarIcon)`\r\n     &&& {\r\n        font-size : 25px;\r\n         margin-right : 10px;\r\n         ${({ theme }) => `color : ${theme.palette.primary.main}`}\r\n     }\r\n`\r\nconst SMSList = styled.div`\r\n    margin-top : 20px;\r\n    padding : 0px 20px;\r\n    max-height : 180px;\r\n    overflow-y : auto;\r\n`\r\nconst StyledCheckbox = styled(Checkbox)`\r\n   &&& {\r\n       padding : 5px;\r\n   }\r\n`\r\n\r\nconst MessageBox = styled.div`\r\n   padding : 0px 20px;\r\n   margin-top : 30px; \r\n   position : relative;\r\n`\r\nconst Action = styled.div`\r\n   display : flex;\r\n   box-sizing : border-box;\r\n   padding : 20px;\r\n   justify-content : flex-end;\r\n`\r\nconst StyledTextField = styled(TextField)`\r\n    ${({ theme }) => `\r\n        label {\r\n            font-weight : 500;\r\n        }\r\n        .Mui-focused {\r\n            font-weight : 400;\r\n        }\r\n        .MuiOutlinedInput-root {\r\n            fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &:hover fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &.Mui-focused fieldset {\r\n                border-color: ${theme.palette.primary.main};\r\n            }\r\n        }\r\n        .MuiFormHelperText-root {\r\n            position : absolute;\r\n            top : 100%;\r\n            margin-top : 0px;\r\n            margin-left : 0px;\r\n        }\r\n        `}\r\n`\r\nconst Groups = styled.div`\r\n     display : flex;\r\n     width : 100%;\r\n     box-sizing : border-box;\r\n     flex-wrap : wrap;\r\n     justify-content : center;\r\n`;\r\nconst ChipList = styled.span`\r\n  ${({ theme }) => `border : 1.2px solid ${theme.palette.primary.main};\r\n            color : ${theme.palette.primary.main};`}  \r\n  display : flex;\r\n  align-items : center;\r\n  padding-right :10px;\r\n  box-sizing : border-box;\r\n  font-size: 0.75rem;\r\n  border-radius : 20px;\r\n  margin : 10px 8px 0px;\r\n  font-weight : 500;\r\n`;\r\n\r\nconst GroupSkeleton = styled.div`\r\n    display : flex;\r\n`;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nfunction HelpBox() {\r\n    return (\r\n        <Container>\r\n             <Header>\r\n                <Typography variant='subtitle2' color='textPrimary' style={{ fontSize : '16px' }}>\r\n                        Quick start\r\n                </Typography>  \r\n             </Header>\r\n             <Body>   \r\n                <Typography variant='subtitle2' style={{ fontSize : '14px', fontWeight : '400', color : '#757575' }}>\r\n                        Loremipsum Text Loremipsum Text \r\n                        Loremipsum Text Loremipsum Text \r\n                        Loremipsum Text Loremipsum Text \r\n                        Loremipsum Text Loremipsum Text \r\n                </Typography>  \r\n            </Body>    \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default HelpBox;\r\n\r\nconst Container = styled.div`\r\n    box-sizing : border-box;\r\n    background : #fff;\r\n    border-radius : 10px;\r\n    box-shadow: rgba(53, 64, 82, 0.05) 1px 0px 14px 0px;\r\n    width : 100%;\r\n`\r\nconst Header = styled.div`\r\n   height : 50px;\r\n   padding : 0px 20px;\r\n   display : flex;\r\n   flex-direction : column;\r\n   justify-content : center;\r\n`\r\nconst Body = styled.div`\r\n   padding : 0px 20px;\r\n   padding-bottom : 20px;\r\n`","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport bg from '../Assets/bg-icon.svg';\r\nimport { Grid, Typography, CircularProgress } from '@material-ui/core';\r\nimport Message from './Message';\r\nimport HelpBox from './HelpBox'\r\nimport { motion } from 'framer-motion';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { connect } from 'react-redux';\r\n\r\nconst fadeVariant = {\r\n    start : {\r\n        opacity : 0\r\n    },\r\n    end : {\r\n        opacity : 1,\r\n        transition : {\r\n            type : 'tween',\r\n            duration : 0.5\r\n        }\r\n    }\r\n}\r\n\r\nfunction Homepage({ userLoader, user }) {\r\n    React.useEffect(() => {\r\n        document.title = 'SMS Nepal - Dashboard';\r\n    },[])\r\n    return (\r\n        <Container variants={fadeVariant} initial='start' animate='end'>\r\n              <Header>\r\n              <div className= 'top'>\r\n                        <div style={{ flex : '1' }}>\r\n                            <Typography variant='h4' style={{ color : '#fff', fontWeight: '700' }}>\r\n                                Get started\r\n                            </Typography> \r\n                            <Typography variant='subtitle2' style={{ color : '#fff', fontWeight : '400', marginTop : '5px' }}>\r\n                                We help you to send bulk sms more efficiently.\r\n                            </Typography>\r\n                        </div>\r\n                     { !userLoader ?  \r\n                        \t<div className='statCard'>\r\n                                    <div className='title'>\r\n                                        <Typography variant='caption'  style={{  fontWeight : '400', color : '#eee' }}>\r\n                                            Statistics\r\n                                        </Typography>  \r\n                                        <Typography variant='subtitle2' style={{  fontWeight : '400' }}>\r\n                                            Total Message\r\n                                        </Typography>          \r\n                                    </div>    \r\n                                    <div>\r\n                                        <Typography variant='subtitle2' className='number' component='div' align='right' style={{ fontFamily : 'Kanit' }}>\r\n                                            { user.smsLimit && user.smsLimit}\r\n                                        </Typography> \r\n                                    </div>    \r\n                             </div> \r\n                          :  \r\n                            <Skeleton animation='wave' height={120} width={200}\r\n                                     style={{ background : 'rgba(242, 113, 33, 0.7)'}}\r\n                                />\r\n                        }\r\n                     </div>\r\n              </Header>    \r\n              { !userLoader ? \r\n                    <GridContainer container>\r\n                            <StyledGrid item xs={12} sm={12} md={9} lg={9}>\r\n                                   <Message />\r\n                            </StyledGrid>  \r\n                            <StyledGrid item xs={12} sm={12} md={3} lg={3}>\r\n                                   <HelpBox />\r\n                            </StyledGrid>  \r\n                    </GridContainer>  \r\n                     :\r\n                    <LoaderContainer>\r\n                            <CircularProgress />\r\n                    </LoaderContainer>   } \r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLoader : state.userReducer.userLoader,\r\n        user : state.userReducer.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Homepage);\r\n\r\nconst Container = styled(motion.div)`\r\n    height : calc(100% - 56px);\r\n    overflow : auto;\r\n    flex : 1;\r\n    background : #DADDE1;\r\n`\r\nconst Header = styled.div`\r\n     height : 180px;\r\n     ${({ theme }) => `background :  ${theme.palette.primary.main}`};\r\n     padding : 10px 30px;\r\n     box-sizing : border-box;\r\n     background-image : url(${bg});\r\n     background-size : 50%;\r\n     @media( max-width : 768px ) {\r\n         height : auto;\r\n     }\r\n     .top {\r\n         position : relative;\r\n         display : flex;\r\n         @media( max-width : 768px ) {\r\n             flex-direction : column;\r\n         }\r\n             .statCard  {\r\n                  color : #fff ;\r\n                  box-sizing : border-box;\r\n                  padding : 5px 10px;\r\n                  display : flex;\r\n                  height : 70px;  \r\n                  width : 200px;\r\n                  background : #fff;\r\n                  border-radius : 3px;\r\n                  justify-content : space-between;\r\n                  align-items : flex-end;\r\n                  background: #F27121;\r\n                  .title {\r\n                      height : 100%;\r\n                      flex : 1;\r\n                      display : flex;\r\n                      flex-direction : column;\r\n                      justify-content : space-evenly;\r\n                  }\r\n                  .number {\r\n                      font-size : 25px;\r\n                  }\r\n                  @media( max-width : 768px ) {\r\n                        margin-top : 10px;\r\n                    }\r\n         }\r\n     }\r\n`\r\n\r\n\r\n\r\nconst StyledGrid = styled(Grid)`\r\n    &&& {\r\n        box-sizing : border-box;\r\n        padding : 0px 5px;\r\n    }\r\n`\r\nconst GridContainer = styled(Grid)`\r\n    box-sizing : border-box;\r\n    padding : 0px 10px;\r\n    margin-bottom : 10px;\r\n    @media( min-width : 768px ) {\r\n        margin-top : -70px;\r\n    }\r\n    @media( max-width : 768px ) {\r\n        margin-top : 15px;\r\n    }\r\n`\r\n\r\nconst LoaderContainer = styled.div`\r\n    position : absolute;\r\n    left : 50%;\r\n    transform : translate(-50%, -50%);\r\n    height : 60px;\r\n    width : 60px;\r\n    border-radius : 60px;\r\n    box-shadow: rgba(0, 0, 0, 0.05) 1px 0px 14px 0px;\r\n    background : #fff;\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n`","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Typography, TextField, Button } from '@material-ui/core';\r\n// import Alert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { changePassword } from '../Store/Actions/userAction';\r\nimport { connect } from 'react-redux'\r\n\r\nfunction ChangePassword({ changePassword, loader, success }) {\r\n\r\n    const [oldPass, setOldPass] = React.useState({ value : '', error : false, msg : 'Enter a valid password' });\r\n    const [newPass, setNewPass] = React.useState({ value : '', error : false, msg : 'Enter a valid password' });\r\n    const [confirmPass, setConfirmPass] = React.useState({ value : '', error : false, msg : 'Password does not match' });\r\n\r\n    const oldPassHandler = e => {\r\n        setOldPass({ ...oldPass, value : e.target.value, error : false });\r\n    }\r\n\r\n    const newPassHandler = e => {\r\n        setNewPass({ ...newPass, value : e.target.value, error : false });\r\n    }\r\n\r\n    const confirmPassHandler = e => {\r\n        setConfirmPass({ ...confirmPass, value : e.target.value, error : false });\r\n    }\r\n\r\n    const passwordChangeHadler = () => {\r\n        let oldPassError = false;\r\n        let newPassError = false;\r\n        let confirmPassError = false;\r\n        if(oldPass.value.length === 0) {\r\n            oldPassError = true;\r\n        }\r\n        if(newPass.value.length === 0) {\r\n            newPassError = true;\r\n        }\r\n        if(confirmPass.value !== newPass.value){\r\n            confirmPassError = true;\r\n        }\r\n        if(oldPassError || newPassError || confirmPassError){\r\n            setOldPass({ ...oldPass, error : oldPassError });\r\n            setNewPass({ ...newPass, error : newPassError });\r\n            setConfirmPass({ ...confirmPass, error : confirmPassError });\r\n        }\r\n        else {\r\n            changePassword(oldPass.value, newPass.value)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(success.value){\r\n            setOldPass({ value : '', error : false, msg : 'Enter a valid password' });\r\n            setNewPass({ value : '', error : false, msg : 'Enter a valid password' });\r\n            setConfirmPass({ value : '', error : false, msg : 'Enter a valid password' });\r\n        }\r\n    },[success])\r\n\r\n    return (\r\n        <Container>\r\n             <Header>\r\n                <Typography variant='subtitle2' color='textPrimary' style={{ fontSize : '16px' }}>\r\n                        Change Password\r\n                </Typography>    \r\n            </Header> \r\n            <Body>\r\n                    <InputContainer>\r\n                        <StyledTextField\r\n                                label=\"Current password\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                size = 'small'\r\n                                value={oldPass.value}\r\n                                onChange={oldPassHandler}\r\n                                error = {oldPass.error}\r\n                                helperText = {oldPass.error ? oldPass.msg : '' }\r\n                            />\r\n                    </InputContainer> \r\n                    <InputContainer>\r\n                        <StyledTextField\r\n                                label=\"New password\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                size = 'small'\r\n                                value={newPass.value}\r\n                                onChange={newPassHandler}\r\n                                error = {newPass.error}\r\n                                helperText = { newPass.error ? newPass.msg : '' }\r\n                         />\r\n                    </InputContainer> \r\n                    <InputContainer>\r\n                        <StyledTextField\r\n                                label=\"Confirm password\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                size = 'small'\r\n                                value={confirmPass.value}\r\n                                onChange={confirmPassHandler}\r\n                                error = {confirmPass.error}\r\n                                helperText = { confirmPass.error ? confirmPass.msg : '' }\r\n                            />\r\n                    </InputContainer> \r\n                    {/* <Alert severity=\"error\" fullWidth>Enter a correct password</Alert> */}\r\n                    <div style={{ display : 'flex', justifyContent : 'flex-end', alignItems : 'center', width : '90%', marginTop : '20px' }}>\r\n                         {loader ? <CircularProgress size={25} style={{ marginRight : '10px' }}/> : null}\r\n                          <Button \r\n                                variant=\"contained\" \r\n                                color=\"primary\" \r\n                                disableElevation\r\n                                size='small'\r\n                                style={{ textTransform : 'capitalize' }} \r\n                                onClick={passwordChangeHadler}\r\n                                disabled={loader} >\r\n                                Change Password\r\n                           </Button>\r\n                     </div>   \r\n            </Body>   \r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loader : state.userReducer.changePasswordLoader,\r\n        success : state.userReducer.success\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changePassword : (oldPass, newPass) => dispatch(changePassword(oldPass, newPass))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\r\n\r\nconst Container = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    margin-bottom : 20px;\r\n    border-radius : 10px;\r\n    background : #fff;\r\n    box-shadow: rgba(53, 64, 82, 0.05) 1px 0px 14px 0px;\r\n`\r\nconst Header = styled.div`\r\n   height : 50px;\r\n   padding : 0px 20px;\r\n   display : flex;\r\n   align-items : center;\r\n   border-bottom : 1px solid rgba(0, 0, 0, 0.12);\r\n`\r\nconst Body = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    align-items : center;\r\n    padding : 20px 0px;\r\n`\r\nconst InputContainer = styled.div`\r\n    margin : 10px 0px;\r\n    position : relative;\r\n    width : 90%;\r\n    .MuiFormHelperText-root {\r\n        font-weight : 500;\r\n    }\r\n`\r\nconst StyledTextField = styled(TextField)`\r\n    ${({ theme }) => `\r\n        label {\r\n            font-weight : 500;\r\n        }\r\n        .Mui-focused {\r\n            font-weight : 400;\r\n        }\r\n        .MuiOutlinedInput-root {\r\n            fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &:hover fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &.Mui-focused fieldset {\r\n                border-color: ${theme.palette.primary.main};\r\n            }\r\n        }\r\n        .MuiFormHelperText-root {\r\n            position : absolute;\r\n            top : 100%;\r\n            margin-top : 0px;\r\n            margin-left : 0px;\r\n        }\r\n        `}\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport  { Button, Typography, TextField, CircularProgress } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { changeUserDetail } from '../Store/Actions/userAction'\r\n\r\nfunction ChangeName({ name, phone, changeUserDetail, changeDetailLoader }) {\r\n\r\n    const [changeName, setChangeName] = React.useState({ value : name, error : false });\r\n    const [changePhone, setChangePhone] = React.useState({ value : phone, error : false });\r\n\r\n    const nameChangeHandler = e => {\r\n        setChangeName({ ...changeName, value : e.target.value, error : false });\r\n    }\r\n\r\n    const phoneChangeHandler = e => {\r\n        setChangePhone({ ...changePhone, value : e.target.value, error : false });\r\n    }\r\n\r\n    const clickHandler = () => {\r\n        let changeNameError = false;\r\n        let changePhoneError = false;\r\n        if(changeName.value.length < 1) {\r\n            changeNameError = true;\r\n        }\r\n        if(changePhone.value.length !== 10) {\r\n            changePhoneError = true\r\n        }\r\n        if( changeNameError || changePhoneError ) {\r\n            setChangeName({ ...changeName, error : changeNameError });\r\n            setChangePhone({ ...changePhone, error : changePhoneError });\r\n        }\r\n        else {\r\n            changeUserDetail(changeName.value, changePhone.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Header>\r\n                <Typography variant='subtitle2' color='textPrimary' style={{ fontSize : '16px' }}>\r\n                        Change name\r\n                </Typography>    \r\n            </Header> \r\n            <Body>\r\n                <InputContainer>\r\n                    <StyledTextField\r\n                            label=\"Name\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            type=\"text\"\r\n                            size = 'small'\r\n                            disabled={changeDetailLoader}\r\n                            value={changeName.value}\r\n                            onChange={nameChangeHandler}\r\n                            error = {changeName.error}\r\n                            helperText = { changeName.error ? 'Enter valid name' : '' }\r\n                        />\r\n                    <StyledTextField\r\n                            label=\"Phone\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            disabled={changeDetailLoader}\r\n                            style={{ marginTop : '20px' }}\r\n                            size = 'small'\r\n                            value={changePhone.value}\r\n                            onChange={phoneChangeHandler}\r\n                            error = {changePhone.error}\r\n                            helperText = { changePhone.error ? 'Phone number must be 10 digits long.' : '' }\r\n                        />\r\n                </InputContainer> \r\n                <div style={{ display : 'flex', justifyContent : 'flex-end', width : '90%' }}>\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            disableElevation\r\n                            disabled={changeDetailLoader}\r\n                            size='small'\r\n                            style={{ textTransform : 'capitalize', marginTop : '20px' }} \r\n                            onClick={clickHandler}>\r\n                                 {changeDetailLoader ? <CircularProgress size={20}/> : 'Save'}\r\n                        </Button>\r\n                    </div>   \r\n            </Body> \r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        name : state.userReducer.user.name,\r\n        phone : state.userReducer.user.phone,\r\n        changeDetailLoader : state.userReducer.changeDetailLoader\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeUserDetail : (name, phone) => dispatch(changeUserDetail(name, phone))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeName);\r\n\r\nconst Container = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    margin-bottom : 20px;\r\n    border-radius : 10px;\r\n    background : #fff;\r\n    box-shadow: rgba(53, 64, 82, 0.05) 1px 0px 14px 0px;\r\n`\r\nconst Body = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    align-items : center;\r\n    padding : 20px 0px;\r\n`\r\nconst Header = styled.div`\r\n   height : 50px;\r\n   padding : 0px 20px;\r\n   display : flex;\r\n   align-items : center;\r\n   border-bottom : 1px solid rgba(0, 0, 0, 0.12);\r\n`\r\nconst InputContainer = styled.div`\r\n    margin : 10px 0px;\r\n    position : relative;\r\n    width : 90%;\r\n    .MuiFormHelperText-root {\r\n        font-weight : 500;\r\n    }\r\n`\r\nconst StyledTextField = styled(TextField)`\r\n    ${({ theme }) => `\r\n        label {\r\n            font-weight : 500;\r\n        }\r\n        .Mui-focused {\r\n            font-weight : 400;\r\n        }\r\n        .MuiOutlinedInput-root {\r\n            fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &:hover fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &.Mui-focused fieldset {\r\n                border-color: ${theme.palette.primary.main};\r\n            }\r\n        }\r\n        .MuiFormHelperText-root {\r\n            position : absolute;\r\n            top : 100%;\r\n            margin-top : 0px;\r\n            margin-left : 0px;\r\n        }\r\n        `}\r\n`","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport bg from '../Assets/bg-icon.svg';\r\nimport { Grid, Typography, CircularProgress } from '@material-ui/core';\r\nimport ChangePassword from './ChangePassword';\r\nimport { motion } from 'framer-motion';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { connect } from 'react-redux';\r\nimport ChangeName from './ChangeName';\r\n\r\nconst fadeVariant = {\r\n    start : {\r\n        opacity : 0\r\n    },\r\n    end : {\r\n        opacity : 1,\r\n        transition : {\r\n            type : 'tween',\r\n            duration : 0.5\r\n        }\r\n    }\r\n}\r\nfunction Setting({ userLoader, user }) {\r\n    React.useEffect(() => {\r\n         document.title = 'SMS Nepal - Setting'   \r\n    },[])\r\n                return (\r\n                        <Container variants={fadeVariant} initial='start' animate='end'>\r\n                                <Header>\r\n                                    <div className= 'top'>\r\n                                        <div style={{ flex : '1' }}>\r\n                                            <Typography variant='h4' style={{ color : '#fff', fontWeight: '700' }}>\r\n                                                Setting\r\n                                            </Typography> \r\n                                            <Typography variant='subtitle2' style={{ color : '#fff', fontWeight : '400', marginTop : '5px' }}>\r\n                                                Change your name, email, password and phone number.\r\n                                            </Typography>\r\n                                         </div>\r\n                                        { !userLoader ?  \r\n                                            <div className='statCard'>\r\n                                                        <div className='title'>\r\n                                                            <Typography variant='caption'  style={{  fontWeight : '400', color : '#eee' }}>\r\n                                                                Statistics\r\n                                                            </Typography>  \r\n                                                            <Typography variant='subtitle2' style={{  fontWeight : '400' }}>\r\n                                                                Total Message\r\n                                                            </Typography>          \r\n                                                        </div>    \r\n                                                        <div>\r\n                                                            <Typography variant='subtitle2' className='number' component='div' align='right' style={{ fontFamily : 'Kanit' }}>\r\n                                                                {user.smsLimit}\r\n                                                            </Typography> \r\n                                                        </div>    \r\n                                                </div>   \r\n                                                :  \r\n                                                <Skeleton animation='wave' height={120} width={200}\r\n                                                            style={{ background : 'rgba(242, 113, 33, 0.7)'}}\r\n                                                />\r\n                                            }\r\n                                    </div>  \r\n                                </Header>\r\n                                { !userLoader ? \r\n                                        <GridContainer container>\r\n                                            <StyledGrid item xs={12} sm={12} md={6} lg={6}>\r\n                                                <ChangePassword />\r\n                                            </StyledGrid>  \r\n                                            <StyledGrid item xs={12} sm={12} md={6} lg={6}>\r\n                                                <ChangeName />\r\n                                            </StyledGrid>\r\n                                        </GridContainer>  \r\n                                        :\r\n                                        <LoaderContainer>\r\n                                                <CircularProgress />\r\n                                        </LoaderContainer>   \r\n                                    } \r\n                        </Container>\r\n                )\r\n            }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLoader : state.userReducer.userLoader,\r\n        user : state.userReducer.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Setting)\r\n\r\nconst Container = styled(motion.div)`\r\n    height : calc(100% - 56px);\r\n    overflow : auto;\r\n    flex : 1;\r\n    background : #DADDE1;\r\n`\r\nconst Header = styled.div`\r\n     height : 180px;\r\n     ${({ theme }) => `background :  ${theme.palette.primary.main}`};\r\n     padding : 10px 30px;\r\n     box-sizing : border-box;\r\n     background-image : url(${bg});\r\n     background-size : 50%;\r\n     @media( max-width : 768px ) {\r\n         height : auto;\r\n     }\r\n     .top {\r\n         position : relative;\r\n         display : flex;\r\n         @media( max-width : 768px ) {\r\n             flex-direction : column;\r\n         }\r\n             .statCard  {\r\n                  color : #fff ;\r\n                  box-sizing : border-box;\r\n                  padding : 5px 10px;\r\n                  display : flex;\r\n                  height : 70px;  \r\n                  width : 200px;\r\n                  background : #fff;\r\n                  border-radius : 3px;\r\n                  justify-content : space-between;\r\n                  align-items : flex-end;\r\n                  background: #F27121;\r\n                  .title {\r\n                      height : 100%;\r\n                      flex : 1;\r\n                      display : flex;\r\n                      flex-direction : column;\r\n                      justify-content : space-evenly;\r\n                  }\r\n                  .number {\r\n                      font-size : 25px;\r\n                  }\r\n                  @media( max-width : 768px ) {\r\n                        margin-top : 10px;\r\n                    }\r\n         }\r\n     }\r\n`\r\n\r\n\r\n\r\nconst StyledGrid = styled(Grid)`\r\n    &&& {\r\n        box-sizing : border-box;\r\n        padding : 0px 5px;\r\n    }\r\n`\r\nconst GridContainer = styled(Grid)`\r\n    box-sizing : border-box;\r\n    padding : 0px 10px;\r\n    margin-bottom : 10px;\r\n    @media( min-width : 768px ) {\r\n        margin-top : -70px;\r\n    }\r\n    @media( max-width : 768px ) {\r\n        margin-top : 15px;\r\n    }\r\n`\r\n\r\nconst LoaderContainer = styled.div`\r\n    position : absolute;\r\n    left : 50%;\r\n    transform : translate(-50%, -50%);\r\n    height : 60px;\r\n    width : 60px;\r\n    border-radius : 60px;\r\n    box-shadow: rgba(0, 0, 0, 0.05) 1px 0px 14px 0px;\r\n    background : #fff;\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n`","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport bg from '../Assets/bg-icon.svg';\r\nimport { Grid, Typography, CircularProgress } from '@material-ui/core';\r\nimport PricingCard from '../Component/PricingCard';\r\nimport { motion } from 'framer-motion';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { connect } from 'react-redux';\r\n\r\nconst fadeVariant = {\r\n    start : {\r\n        opacity : 0\r\n    },\r\n    end : {\r\n        opacity : 1,\r\n        transition : {\r\n            type : 'tween',\r\n            duration : 0.5\r\n        }\r\n    }\r\n}\r\nfunction Subscription({ userLoader, user }) {\r\n          return (\r\n                    <Container variants={fadeVariant} initial='start' animate='end'>\r\n                            <Header>\r\n                                <div className= 'top'>\r\n                                    <div style={{ flex : '1' }}>\r\n                                        <Typography variant='h4' style={{ color : '#fff', fontWeight: '700' }}>\r\n                                            Subscription\r\n                                        </Typography> \r\n                                        <Typography variant='subtitle2' style={{ color : '#fff', fontWeight : '400', marginTop : '5px' }}>\r\n                                            Change your plan.\r\n                                        </Typography>\r\n                                    </div>\r\n                                    { !userLoader ?  \r\n                                        <div className='statCard'>\r\n                                                    <div className='title'>\r\n                                                        <Typography variant='caption'  style={{  fontWeight : '400', color : '#eee' }}>\r\n                                                            Statistics\r\n                                                        </Typography>  \r\n                                                        <Typography variant='subtitle2' style={{  fontWeight : '400' }}>\r\n                                                            Total Message\r\n                                                        </Typography>          \r\n                                                    </div>    \r\n                                                    <div>\r\n                                                        <Typography variant='subtitle2' className='number' component='div' align='right' style={{ fontFamily : 'Kanit' }}>\r\n                                                            {user.smsLimit}\r\n                                                        </Typography> \r\n                                                    </div>    \r\n                                            </div>   \r\n                                            :  \r\n                                            <Skeleton animation='wave' height={120} width={200}\r\n                                                        style={{ background : 'rgba(242, 113, 33, 0.7)'}}\r\n                                            />\r\n                                        }\r\n                                </div>  \r\n                            </Header>\r\n                            { !userLoader ? \r\n                                    <GridContainer container>\r\n                                        <StyledGrid item xs={12}>\r\n                                                <PricingCard />\r\n                                        </StyledGrid>  \r\n                                    </GridContainer>  \r\n                                    :\r\n                                    <LoaderContainer>\r\n                                            <CircularProgress />\r\n                                    </LoaderContainer>   \r\n                                } \r\n                    </Container>\r\n            )\r\n        }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLoader : state.userReducer.userLoader,\r\n        user : state.userReducer.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Subscription);\r\n\r\nconst Container = styled(motion.div)`\r\n    height : calc(100% - 56px);\r\n    overflow : auto;\r\n    flex : 1;\r\n    background : #DADDE1;\r\n`\r\nconst Header = styled.div`\r\n     height : 180px;\r\n     ${({ theme }) => `background :  ${theme.palette.primary.main}`};\r\n     padding : 10px 30px;\r\n     box-sizing : border-box;\r\n     background-image : url(${bg});\r\n     background-size : 50%;\r\n     @media( max-width : 768px ) {\r\n         height : auto;\r\n     }\r\n     .top {\r\n         position : relative;\r\n         display : flex;\r\n         @media( max-width : 768px ) {\r\n             flex-direction : column;\r\n         }\r\n             .statCard  {\r\n                  color : #fff ;\r\n                  box-sizing : border-box;\r\n                  padding : 5px 10px;\r\n                  display : flex;\r\n                  height : 70px;  \r\n                  width : 200px;\r\n                  background : #fff;\r\n                  border-radius : 3px;\r\n                  justify-content : space-between;\r\n                  align-items : flex-end;\r\n                  background: #F27121;\r\n                  .title {\r\n                      height : 100%;\r\n                      flex : 1;\r\n                      display : flex;\r\n                      flex-direction : column;\r\n                      justify-content : space-evenly;\r\n                  }\r\n                  .number {\r\n                      font-size : 25px;\r\n                  }\r\n                  @media( max-width : 768px ) {\r\n                        margin-top : 10px;\r\n                    }\r\n         }\r\n     }\r\n`\r\n\r\n\r\n\r\nconst StyledGrid = styled(Grid)`\r\n    &&& {\r\n        box-sizing : border-box;\r\n        padding : 0px 5px;\r\n    }\r\n`\r\nconst GridContainer = styled(Grid)`\r\n    box-sizing : border-box;\r\n    padding : 0px 10px;\r\n    margin-bottom : 10px;\r\n    @media( min-width : 768px ) {\r\n        margin-top : -70px;\r\n    }\r\n    @media( max-width : 768px ) {\r\n        margin-top : 15px;\r\n    }\r\n`\r\n\r\nconst LoaderContainer = styled.div`\r\n    position : absolute;\r\n    left : 50%;\r\n    transform : translate(-50%, -50%);\r\n    height : 60px;\r\n    width : 60px;\r\n    border-radius : 60px;\r\n    box-shadow: rgba(0, 0, 0, 0.05) 1px 0px 14px 0px;\r\n    background : #fff;\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n`","import React from 'react'\r\nimport { Table, TableHead, TableCell, TableBody, TableRow } from '@material-ui/core'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nfunction TableLoader() {\r\n    return (\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                        <TableRow>\r\n                            <TableCell><Skeleton variant=\"text\" width={40}/></TableCell>\r\n                            <TableCell align=\"center\"><Skeleton variant=\"text\" /></TableCell>\r\n                            <TableCell align=\"center\"><Skeleton variant=\"text\" /></TableCell>\r\n                            <TableCell align=\"right\"><Skeleton variant=\"text\" /></TableCell>\r\n                        </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                        <TableRow>\r\n                            <TableCell><Skeleton variant=\"text\" width={20}/></TableCell>\r\n                            <TableCell align=\"center\"><Skeleton variant=\"text\" width={200}/></TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <Skeleton variant=\"text\" width={40}/>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <Skeleton variant=\"text\" width={40}/>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell><Skeleton variant=\"text\" width={20}/></TableCell>\r\n                            <TableCell align=\"center\"><Skeleton variant=\"text\" width={200}/></TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <Skeleton variant=\"text\" width={40}/>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <Skeleton variant=\"text\" width={40}/>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell><Skeleton variant=\"text\" width={20}/></TableCell>\r\n                            <TableCell align=\"center\"><Skeleton variant=\"text\" width={200}/></TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <Skeleton variant=\"text\" width={40}/>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <Skeleton variant=\"text\" width={40}/>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell><Skeleton variant=\"text\" width={20}/></TableCell>\r\n                            <TableCell align=\"center\"><Skeleton variant=\"text\" width={200}/></TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <Skeleton variant=\"text\" width={40}/>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <Skeleton variant=\"text\" width={40}/>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n    )\r\n}\r\n\r\nexport default TableLoader\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Typography, TextField, Button, CircularProgress } from '@material-ui/core'\r\nimport styled from 'styled-components';\r\nimport { createGroup, setCreateSuccess } from '../Store/Actions/groupsAction'\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction CreateGroupForm({ closeModalHandler, createGroup, loader, createSuccess, newlyAddedGroup, setCreateSuccess }) {\r\n\r\n    const [groupName, setGroupName] = useState({ value : '', error : false });\r\n    const history = useHistory()\r\n\r\n    const groupNameChangeHandler = e => {\r\n        setGroupName({ ...groupName, value : e.target.value, error : false })\r\n    }\r\n\r\n    const createGroupHandler = e => {\r\n        if(groupName.value.length > 0) {\r\n            createGroup(groupName.value);\r\n        }\r\n        else {\r\n            setGroupName({ ...groupName, value : e.target.value, error : true })\r\n        }\r\n    }\r\n\r\n    const onEnterPress = e =>{\r\n        if(e.keyCode === 13) {\r\n            createGroupHandler();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(createSuccess){\r\n            setCreateSuccess();\r\n            history.push({\r\n                pathname : '/manage-groups/edit-group',\r\n                state : { groupName : newlyAddedGroup.groupName, groupId : newlyAddedGroup.groupId }\r\n            })\r\n        }\r\n    }, [createSuccess, history, newlyAddedGroup, setCreateSuccess])\r\n\r\n    return (\r\n        <Container>\r\n             <Typography variant='h6' color='textPrimary'>\r\n                  Create Group  \r\n             </Typography>\r\n             <InputContainer>\r\n                <StyledTextField\r\n                        label=\"Group name\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        type=\"text\"\r\n                        size = 'medium'\r\n                        disabled={loader}\r\n                        value={groupName.value}\r\n                        onChange={groupNameChangeHandler}\r\n                        error = {groupName.error}\r\n                        helperText = { groupName.error ? 'Enter a valid group name' : '' }\r\n                        onKeyDown={onEnterPress}\r\n                        autoFocus\r\n                    />\r\n            </InputContainer>\r\n            <Action>\r\n                { loader ? <CircularProgress size={25}/> : null }\r\n                <div>\r\n                    <Button size='small' color='primary' variant='contained' \r\n                            disableElevation\r\n                            disabled={loader}\r\n                            onClick={createGroupHandler}\r\n                            style={{ margin : '0rem 0.7rem', textTransform : 'capitalize' }}>\r\n                        Create Group\r\n                    </Button>\r\n                </div>\r\n                <div>\r\n                    <Button size='small' variant='contained' style={{ textTransform : 'capitalize' }}\r\n                            onClick={closeModalHandler}\r\n                            disabled={loader}\r\n                            disableElevation>\r\n                        Cancel\r\n                    </Button>\r\n                </div>\r\n            </Action>      \r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loader : state.groupsReducer.createGroupsLoader,\r\n        createSuccess : state.groupsReducer.createSuccess,\r\n        newlyAddedGroup : state.groupsReducer.newlyAddedGroup,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createGroup : groupName => dispatch(createGroup(groupName)),\r\n        setCreateSuccess : groupName => dispatch(setCreateSuccess())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateGroupForm);\r\n\r\nconst Container = styled.div`\r\n  display : flex;\r\n  flex-direction : column;\r\n  width : 100%;\r\n  align-items : flex-start;\r\n  padding : 1rem;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n    margin : 20px 0px;\r\n    position : relative;\r\n    width : 100%;\r\n    .MuiFormHelperText-root {\r\n        font-weight : 500;\r\n    }\r\n`\r\nconst StyledTextField = styled(TextField)`\r\n    ${({ theme }) => `\r\n        label {\r\n            font-weight : 500;\r\n        }\r\n        .Mui-focused {\r\n            font-weight : 400;\r\n        }\r\n        .MuiOutlinedInput-root {\r\n            fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &:hover fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &.Mui-focused fieldset {\r\n                border-color: ${theme.palette.primary.main};\r\n            }\r\n        }\r\n        .MuiFormHelperText-root {\r\n            top : 100%;\r\n            margin-top : 0px;\r\n            margin-left : 5px;\r\n        }\r\n        `}\r\n`\r\nconst Action = styled.div`\r\n   box-sizing : border-box;\r\n   display : flex;\r\n   justify-content : flex-end;\r\n   width : 100%;\r\n   padding : 0.1rem 0px;\r\n   align-items : center;\r\n`;\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components';\r\nimport { TextField, Button, CircularProgress } from '@material-ui/core'\r\nimport { motion } from 'framer-motion'\r\nimport { updateGroupMember } from '../Store/Actions/groupsAction'\r\nimport { setUserSuccess } from '../Store/Actions/userAction'\r\nimport  { connect } from 'react-redux'\r\n\r\nconst slideVariant = {\r\n    start : {\r\n        y : '-100%',\r\n        opacity : 0\r\n    },\r\n    end : {\r\n        y : 0,\r\n        opacity : 1,\r\n        transition : {\r\n            type : 'tween',\r\n            duration : 0.2\r\n        }\r\n    }\r\n}\r\n\r\nfunction EditGroupMember({ openEditModal, closeEditHandler,updatingGroupMemberLoader, updateGroupMember, success, setUserSuccess }) {\r\n\r\n    const [name, setName] = useState({ value : '', error : false });\r\n    const [number, setNumber] = useState({ value : '', error : false });\r\n\r\n    const changeNameHandler = e => {\r\n        setName({ ...name, value : e.target.value, error : false })\r\n    }\r\n\r\n    const changeNumberHandler = e => {\r\n        setNumber({ ...number, value : e.target.value, error : false })\r\n    }\r\n\r\n    const updateMemberHandler = () => {\r\n        let nameError = false;\r\n        let numberError = false;\r\n        if(name.value.length < 1) {\r\n            nameError = true;\r\n        }\r\n        if(number.value.length !== 10) {\r\n            numberError = true;\r\n        }\r\n        if(nameError || numberError) {\r\n            setNumber({ ...number, error : numberError });\r\n            setName({ ...name, error : nameError })\r\n        }\r\n        else {\r\n            updateGroupMember(openEditModal.memberId, name.value, number.value)\r\n        }\r\n    }\r\n\r\n    const returnKeyPress = e => {\r\n        if(e.keyCode === 13){\r\n            updateMemberHandler();\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(success.value){\r\n            closeEditHandler()\r\n            setUserSuccess();\r\n        }\r\n    },[success, closeEditHandler, setUserSuccess])\r\n\r\n    useEffect(() => {\r\n        setName(prev => ({ ...prev, value : openEditModal.memberName }));\r\n        setNumber(prev => ({ ...prev, value : openEditModal.memberPhone }));\r\n    }, [openEditModal.memberName, openEditModal.memberPhone ])\r\n\r\n    return (\r\n        <Container>\r\n            <FormContainer variants={slideVariant} initial='start' animate='end' >\r\n                    <InputContainer>\r\n                        <StyledTextField\r\n                                label=\"Name\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                type=\"text\"\r\n                                size = 'small'\r\n                                value={name.value}\r\n                                onChange={changeNameHandler}\r\n                                disabled={updatingGroupMemberLoader}\r\n                                error={name.error}\r\n                                onKeyDown = {returnKeyPress}\r\n                                helperText={name.error ? 'Enter a valid name' : ''}\r\n                            /> \r\n                        <StyledTextField\r\n                                label=\"Phone\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                type=\"text\"\r\n                                size = 'small'\r\n                                style={{ marginLeft : '7px' }}\r\n                                value={number.value}\r\n                                disabled={updatingGroupMemberLoader}\r\n                                onKeyDown = {returnKeyPress}\r\n                                onChange={changeNumberHandler}\r\n                                error = {number.error}\r\n                                helperText={number.error ? 'Number must be 10 digits long.' : ''}\r\n                            /> \r\n                    </InputContainer>\r\n                    <div style={{ display : 'flex', justifyContent : 'flex-end', width : '100%' }}>\r\n                        <Button variant='contained' \r\n                                size='small'\r\n                                color='primary'\r\n                                disableElevation\r\n                                disabled={updatingGroupMemberLoader}\r\n                                style={{ textTransform : 'capitalize', marginRight : '7px' }}\r\n                                onClick={updateMemberHandler}\r\n                                >\r\n                            {updatingGroupMemberLoader ? <CircularProgress size={20}/> : 'Save'}\r\n                        </Button>\r\n                        <Button variant='contained' \r\n                                size='small'\r\n                                disableElevation\r\n                                style={{ textTransform : 'capitalize' }}\r\n                                onClick={closeEditHandler}\r\n                                disabled={updatingGroupMemberLoader}\r\n                                >\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n            </FormContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        updatingGroupMemberLoader : state.groupsReducer.updatingGroupMemberLoader,\r\n        success : state.userReducer.success,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateGroupMember : (memberId, memberName, memberPhone) => dispatch(updateGroupMember(memberId, memberName, memberPhone)),\r\n        setUserSuccess : () => dispatch(setUserSuccess())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditGroupMember)\r\n\r\nconst Container = styled.div`\r\n    position : absolute;\r\n    top : 0;\r\n    left : 0;\r\n    height : 100%;\r\n    width : 100%;\r\n    background : rgba(0, 0, 0, 0.4);\r\n    z-index : 3;\r\n`;\r\nconst FormContainer = styled(motion.div)`\r\n   box-sizing : border-box;\r\n   padding : 1rem; \r\n   background : #fff;\r\n`;\r\nconst InputContainer = styled.div`\r\n    margin : 10px 0px 20px;\r\n    display : flex;\r\n    position : relative;\r\n    width : 100%;\r\n    .MuiFormHelperText-root {\r\n        font-weight : 500;\r\n    }\r\n`\r\nconst StyledTextField = styled(TextField)`\r\n    ${({ theme }) => `\r\n        label {\r\n            font-weight : 500;\r\n        }\r\n        .Mui-focused {\r\n            font-weight : 400;\r\n        }\r\n        .MuiOutlinedInput-root {\r\n            fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &:hover fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &.Mui-focused fieldset {\r\n                border-color: ${theme.palette.primary.main};\r\n            }\r\n        }\r\n        .MuiFormHelperText-root {\r\n            top : 100%;\r\n            margin-top : 0px;\r\n            margin-left : 5px;\r\n        }\r\n        `}\r\n`","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport { Typography, TextField, Button, IconButton, CircularProgress } from '@material-ui/core'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport  { useHistory } from 'react-router-dom'\r\nimport { updateGroupName, loadGroupList, deleteGroupMembers } from '../Store/Actions/groupsAction'\r\nimport  { connect } from 'react-redux'\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link } from 'react-router-dom'\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport EditGroupMember from './EditGroupMember'\r\n\r\nfunction EditGroup({ closeModalHandler, updateGroupName, updadingGroupNameLoader, loadGroupList, groupList, groupListLoader, deleteGroupMembers,\r\n                deletingGroupMembersLoader }) {\r\n\r\n    const history = useHistory();\r\n    const [groupName, setGroupName] = useState({ value : '', error : false })\r\n    const [activeMemberId, setActiveMemberId] = useState('')\r\n    const [openEditModal, setOpenEditModal] = useState({ value : false, memberName : '', memberId : '', memberPhone : '' });\r\n\r\n    const groupNameChangeHandler = e => {\r\n        setGroupName({ ...groupName, value : e.target.value, error : false })\r\n    }\r\n\r\n    const changeGroupNameHandler = () => {\r\n        updateGroupName(groupName.value, history.location.state.groupId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setGroupName(prev => {\r\n            return {\r\n                ...prev,\r\n                value : history.location.state.groupName,\r\n                error : false\r\n            }\r\n        })\r\n    }, [history])\r\n\r\n    const deleteGroupMemberHandler = memberId => {\r\n        setActiveMemberId(memberId)\r\n        deleteGroupMembers(memberId);\r\n    }\r\n\r\n    const closeEditHandler = () => {\r\n        setOpenEditModal({ ...openEditModal, value : false })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadGroupList(history.location.state.groupId, 0)\r\n    }, [loadGroupList, history.location.state.groupId])\r\n\r\n    return (\r\n        <Container>\r\n              {openEditModal.value ? <EditGroupMember openEditModal={openEditModal} closeEditHandler={closeEditHandler}/> : null}\r\n              <Typography variant='body1' color='textPrimary'>\r\n                  Edit Group Name\r\n             </Typography>\r\n             <InputContainer>\r\n                <StyledTextField\r\n                        label=\"Group name\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        type=\"text\"\r\n                        size = 'small'\r\n                        value = {groupName.value}\r\n                        onChange = {groupNameChangeHandler}\r\n                        error = { groupName.error }\r\n                        helperText = { groupName.error ? 'Enter valid group name.' : '' }\r\n                    />\r\n                   <Button \r\n                        style={{ marginLeft:'7px', textTransform : 'capitalize' }}\r\n                        variant=\"contained\" color='primary' \r\n                        disableElevation\r\n                        disabled={updadingGroupNameLoader}\r\n                        onClick={changeGroupNameHandler}>\r\n                        {updadingGroupNameLoader ? <CircularProgress size={20}/> : 'Save'}\r\n                   </Button> \r\n            </InputContainer>\r\n            <Typography variant='body1' color='textPrimary' gutterBottom>\r\n                  Edit Group List\r\n             </Typography>\r\n            <div style={{ display : 'flex', width : '100%', marginBottom : '0.8rem' }}>\r\n               <Link style={{ textDecoration : 'none' }} to={{\r\n                    pathname : '/manage-groups/add-member',\r\n                    state : { groupId : history.location.state.groupId, groupName : history.location.state.groupName }\r\n                }}>\r\n                    <Button variant='contained' \r\n                                size='small'\r\n                                disableElevation\r\n                                startIcon={<OpenInNewIcon fontSize='small'/>}\r\n                                style={{ textTransform : 'capitalize' }}\r\n                                >\r\n                            Add new member\r\n                    </Button>\r\n               </Link> \r\n            </div>\r\n            <div style={{ display : 'flex', justifyContent : 'center' , width : '100%', marginBottom : '0.8rem' }}>\r\n                <SearchBox>\r\n                    <input type='text' className='search-inp' placeholder='Search'/>\r\n                    <div className='search-icon'>\r\n                        <SearchIcon color='inherit'/>\r\n                    </div>    \r\n                </SearchBox>\r\n            </div>\r\n           { !groupListLoader?\r\n                groupList.length !== 0 ?\r\n                    <StyledTableContainer>\r\n                            <Table size='small' stickyHeader aria-label=\"sticky table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                                <TableCell>S.N</TableCell>\r\n                                                <TableCell align=\"right\">Name</TableCell>\r\n                                                <TableCell align=\"right\">Phone no</TableCell>\r\n                                                <TableCell align=\"right\">Edit</TableCell>\r\n                                                <TableCell align=\"right\">Delete</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                <TableBody>\r\n                                    {\r\n                                        groupList.map((list, index) => \r\n                                            <TableRow key={list.memberId}>\r\n                                                    <TableCell>{++index}.</TableCell>\r\n                                                    <TableCell align=\"right\">{list.memberName}</TableCell>\r\n                                                    <TableCell align=\"right\">{list.memberPhone}</TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                        <IconButton size='small'\r\n                                                                    onClick={() => setOpenEditModal({ \r\n                                                                        ...openEditModal, \r\n                                                                        value : true,\r\n                                                                        memberName : list.memberName,\r\n                                                                        memberId : list.memberId,\r\n                                                                        memberPhone : list.memberPhone\r\n                                                                        })}>\r\n                                                            <CreateIcon fontSize='small' />\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                        <IconButton size='small' onClick={deleteGroupMemberHandler.bind(null, list.memberId)}>\r\n                                                                {\r\n                                                                    (deletingGroupMembersLoader && list.memberId === activeMemberId)\r\n                                                                    ?\r\n                                                                    <CircularProgress  size={20}/> \r\n                                                                    :\r\n                                                                    <RemoveCircleOutlineIcon fontSize='small' color='secondary'/>\r\n                                                                }\r\n                                                        </IconButton>\r\n                                                    </TableCell>\r\n                                            </TableRow>\r\n                                            )\r\n                                     }\r\n                                 </TableBody> \r\n                            </Table>\r\n                        </StyledTableContainer>  \r\n                  :\r\n                <Empty>\r\n                    <Typography variant='subtitle2' \r\n                                style={{ fontSize : '13px', fontWeight : '400' }} \r\n                                color='textSecondary' \r\n                                align='center' \r\n                                component='div'>\r\n                            This group is empty. You can add some by clicking add member button.\r\n                    </Typography>\r\n                </Empty>\r\n             :\r\n             <Empty>\r\n                 <CircularProgress size={30}/>\r\n            </Empty>\r\n            }\r\n            <div style={{ display : 'flex', justifyContent : 'flex-end', width : '100%', marginTop : '0.8rem' }}>\r\n                <Button variant='contained' \r\n                        size='small'\r\n                        color='primary'\r\n                        disableElevation\r\n                        style={{ textTransform : 'capitalize', marginRight : '7px' }}\r\n                        >\r\n                     Save\r\n                </Button>\r\n                <Button variant='contained' \r\n                        size='small'\r\n                        disableElevation\r\n                        onClick={closeModalHandler}\r\n                        style={{ textTransform : 'capitalize' }}\r\n                        >\r\n                     Cancel\r\n                </Button>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        updadingGroupNameLoader : state.groupsReducer.updadingGroupNameLoader,\r\n        groupList : state.groupsReducer.groupList,\r\n        groupListLoader : state.groupsReducer.groupListLoader,\r\n        deletingGroupMembersLoader : state.groupsReducer.deletingGroupMembersLoader,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateGroupName : (groupName, groupId) => dispatch(updateGroupName(groupName, groupId)),\r\n        loadGroupList : (groupId, pageNo) => dispatch(loadGroupList(groupId, pageNo)),\r\n        deleteGroupMembers : memberId => dispatch(deleteGroupMembers(memberId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditGroup);\r\n\r\nconst Container = styled.div`\r\n  display : flex;\r\n  flex-direction : column;\r\n  width : 100%;\r\n  align-items : flex-start;\r\n  position : relative;\r\n  padding : 1rem;\r\n  box-sizing : border-box;\r\n`;\r\nconst InputContainer = styled.div`\r\n    margin : 10px 0px 20px;\r\n    display : flex;\r\n    position : relative;\r\n    width : 100%;\r\n    .MuiFormHelperText-root {\r\n        font-weight : 500;\r\n    }\r\n`\r\nconst StyledTextField = styled(TextField)`\r\n    ${({ theme }) => `\r\n        label {\r\n            font-weight : 500;\r\n        }\r\n        .Mui-focused {\r\n            font-weight : 400;\r\n        }\r\n        .MuiOutlinedInput-root {\r\n            fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &:hover fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &.Mui-focused fieldset {\r\n                border-color: ${theme.palette.primary.main};\r\n            }\r\n        }\r\n        .MuiFormHelperText-root {\r\n            top : 100%;\r\n            margin-top : 0px;\r\n            margin-left : 5px;\r\n        }\r\n        `}\r\n`\r\nconst StyledTableContainer = styled(TableContainer)`\r\n   overflow-y : auto;\r\n    ::-webkit-scrollbar {\r\n    width: 14px;\r\n    height: 14px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n    height: 6px;\r\n    border: 4px solid rgba(0, 0, 0, 0);\r\n    background-clip: padding-box;\r\n    border-radius: 7px;\r\n    background-color: rgba(0, 0, 0, .2);\r\n    }\r\n    ::-webkit-scrollbar-button {\r\n    width: 0;\r\n    height: 0;\r\n    display: none;\r\n    }\r\n    ::-webkit-scrollbar-corner {\r\n    background-color: transparent;\r\n    }\r\n`;\r\nconst Empty = styled.div`\r\n  width : 100%;\r\n  display : flex;\r\n  justify-content : center;\r\n  padding : 20px 0px;\r\n`;\r\nexport const SearchBox = styled.div`\r\n   width : 300px;\r\n   height : 35px;\r\n   display : flex;\r\n   box-sizing : border-box;\r\n\r\n   .search-inp {\r\n       height : 100%;\r\n       flex : 1;\r\n       border-radius : 3px 0px 0px 3px;\r\n       outline : none;\r\n       border : 0;\r\n       box-sizing : border-box;\r\n       padding : 1rem;\r\n       border : 1px solid rgba(0,0,0,0.1);\r\n       font-family : 'roboto';\r\n       font-size : 0.9em;\r\n       &::placeholder {\r\n           color : #9e9e9e;\r\n       }\r\n   }\r\n   .search-icon {\r\n       width : 50px;\r\n       border : 1px solid rgba(0,0,0,0.1);\r\n       border-left : none;\r\n       color : #000;\r\n       border-radius : 0px 3px 3px 0px;\r\n       display : flex;\r\n       justify-content : center;\r\n       align-items : center;\r\n       cursor: pointer;\r\n   }\r\n`","import React, { useState, useRef } from 'react'\r\nimport styled from 'styled-components';\r\nimport { Typography, TextField, Button, Table, IconButton, CircularProgress } from '@material-ui/core'\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline'\r\nimport readXlsxFile from 'read-excel-file'\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { addGroupMember } from '../Store/Actions/groupsAction'\r\nimport { setUserSuccess } from '../Store/Actions/userAction'\r\nimport { connect } from 'react-redux' \r\nimport helperImg from '../Assets/helper.JPG'\r\n\r\nfunction AddMember({ loader, addGroupMember, success, closeModalHandler, setUserSuccess }) {\r\n\r\n    const [members, setMembers] = useState([]);\r\n    const [name, setName] = useState({ value : '', error : false });\r\n    const [number, setNumber] = useState({ value : '', error : false });\r\n    const fileRef = useRef(null);\r\n    const history = useHistory();\r\n\r\n    const nameChangeHandler = e => {\r\n        setName({ ...name, value : e.target.value, error : false })\r\n    }\r\n\r\n    const numberChangeHandler = e => {\r\n        setNumber({ ...number, value : e.target.value, error : false })\r\n    }\r\n\r\n    const addNumberHandler = () => {\r\n        let nameError = false;\r\n        let numberError = false;\r\n        if( name.value.length === 0 ) {\r\n            nameError = true\r\n        }\r\n        if( number.value.length !== 10 ) {\r\n            numberError = true\r\n        }\r\n        if( nameError || numberError ) {\r\n            setName({ ...name, error : nameError })\r\n            setNumber({ ...number, error : numberError })\r\n        }\r\n        else {\r\n            setMembers(members.concat({ ...members, memberName : name.value, memberPhone : number.value }));\r\n            setName({ ...name, value : '', error : false })\r\n            setNumber({ ...number, value : '',  error : false })\r\n        }\r\n    }\r\n\r\n    const returnKeyHandler = e => {\r\n        if(e.keyCode === 13) {\r\n            addNumberHandler();\r\n        }\r\n    }\r\n\r\n    const deleteMemberHandler = i => {\r\n        let newMembers = [...members];\r\n        newMembers.splice(i, 1);\r\n        setMembers([...newMembers]);\r\n    }\r\n\r\n    const fileChangeHandler = e => {\r\n        let list = [];\r\n        const regx = /^[9]\\d{9}/;\r\n        readXlsxFile(e.target.files[0]).then((rows) => {\r\n              list = rows.map(row => {\r\n                  if(regx.test(row[1])){\r\n                    return { memberName : row[0], memberPhone : row[1] }\r\n                  }\r\n                  return false;\r\n              });\r\n        })\r\n        .then(_ => {\r\n            setMembers(members.concat(list.filter( filterList => filterList !==false )));\r\n        })\r\n    }\r\n\r\n    const saveMembersHandler = () => {\r\n        addGroupMember(history.location.state.groupId, members);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(success.value){\r\n            closeModalHandler()\r\n            setUserSuccess();\r\n        }\r\n    },[success, closeModalHandler, setUserSuccess])\r\n\r\n    return (\r\n        <Container>\r\n             <Link style={{ textDecoration : 'none' }}\r\n                   to={{\r\n                       pathname : '/manage-groups/edit-group',\r\n                       state : { groupId : history.location.state.groupId, groupName : history.location.state.groupName } \r\n                   }}>\r\n                   <IconButton edge='start'>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>    \r\n             </Link>\r\n              <Typography variant='body1' color='textPrimary'>\r\n                  Add member\r\n             </Typography>\r\n             <InputContainer>\r\n                <StyledTextField\r\n                        label=\"Name\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        type=\"text\"\r\n                        size = 'small'\r\n                        value={name.value}\r\n                        onChange={nameChangeHandler}\r\n                        autoFocus\r\n                        disabled={loader}\r\n                        error = {name.error}\r\n                        helperText = { name.error ? 'Enter a valid name.' : ''}\r\n                        onKeyDown = {returnKeyHandler}\r\n                    /> \r\n                <StyledTextField\r\n                        label=\"Number\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        type=\"number\"\r\n                        disabled={loader}\r\n                        size = 'small'\r\n                        onChange={numberChangeHandler}\r\n                        value={number.value}\r\n                        style={{ marginLeft : '10px' }}\r\n                        error={number.error}\r\n                        helperText = { number.error ? 'Number must be of 10 digits.' : '' }\r\n                        onKeyDown = {returnKeyHandler}\r\n                    /> \r\n            </InputContainer>\r\n            <div style={{ display : 'flex', justifyContent : 'space-between' , width : '100%', marginBottom : '0.8rem' }}>\r\n                <div style={{ display : 'flex', alignItems : 'center' }}>\r\n                    <Button variant='contained' \r\n                            size='small'\r\n                            disabled={loader}\r\n                            disableElevation\r\n                            startIcon={<PublishIcon fontSize='small'/>}\r\n                            style={{ textTransform : 'capitalize' }}\r\n                            onClick = {() => fileRef.current.click()}\r\n                            >\r\n                        Import\r\n                    </Button>\r\n                    <Helper>\r\n                        <HelpIcon fontSize='small' color='primary'/>\r\n                        <div className='helperModal'>\r\n                            <Typography variant='subtitle2' style={{ fontWeight : \"400\" }}>\r\n                                You can only import excel file.\r\n                            </Typography>\r\n                            <Typography variant='caption' style={{ color : '#757575' }}>\r\n                                Format for excel file is given in below image.\r\n                            </Typography>\r\n                            <img src={helperImg} alt=''/>\r\n                            <Typography variant='caption' color='secondary'>\r\n                                * Don't upload in any other format.\r\n                            </Typography>\r\n                        </div>\r\n                    </Helper>\r\n                </div>\r\n                <input type='file' ref={fileRef} style={{ display : 'none' }} onChange={fileChangeHandler} accept='.xlsx , .xls'/>\r\n                <Button variant='contained' \r\n                        size='small'\r\n                        disableElevation\r\n                        disabled={loader}\r\n                        color='primary'\r\n                        style={{ textTransform : 'capitalize' }}\r\n                        onClick={addNumberHandler}\r\n                        >\r\n                     Add\r\n                </Button>\r\n            </div>\r\n           { members.length !== 0 ? <StyledTableContainer>\r\n                <Table size='small' stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                    <TableCell>S.N</TableCell>\r\n                                    <TableCell align=\"right\">Name</TableCell>\r\n                                    <TableCell align=\"right\">Phone no</TableCell>\r\n                                    <TableCell align=\"right\">Delete</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                    <TableBody>\r\n                            {\r\n                                members.map((list, index) => \r\n                                    <TableRow key={index}>\r\n                                            <TableCell>{index + 1}.</TableCell>\r\n                                            <TableCell align=\"right\">{list.memberName}</TableCell>\r\n                                            <TableCell align=\"right\">{list.memberPhone}</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                <IconButton size='small' onClick={deleteMemberHandler.bind(null, index)}>\r\n                                                        <RemoveCircleOutlineIcon fontSize='small' color='secondary'/>\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                    </TableRow>\r\n                                    )\r\n                            }\r\n                        </TableBody> \r\n                </Table>\r\n            </StyledTableContainer>\r\n             :\r\n            <Empty>\r\n                    <Typography variant='subtitle2' \r\n                                style={{ fontSize : '13px', fontWeight : '400' }} \r\n                                color='textSecondary' \r\n                                align='center' \r\n                                component='div'>\r\n                            You can add some by importing an excel file or by typing manually.\r\n                    </Typography>\r\n             </Empty>\r\n            }\r\n                <div style={{ display : 'flex', justifyContent : 'flex-end', width : '100%', marginTop : '0.8rem' }}>\r\n                    <Button variant='contained' \r\n                            size='small'\r\n                            color='primary'\r\n                            disabled={loader}\r\n                            disableElevation\r\n                            style={{ textTransform : 'capitalize', marginRight : '7px' }}\r\n                            onClick={saveMembersHandler}\r\n                            >\r\n                         {loader ? <CircularProgress size={20}/> : 'Save'}\r\n                    </Button>\r\n                    <Button variant='contained' \r\n                            size='small'\r\n                            disabled={loader}\r\n                            disableElevation\r\n                            style={{ textTransform : 'capitalize' }}\r\n                            onClick={closeModalHandler}\r\n                            >\r\n                        Cancel\r\n                    </Button>\r\n                </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        success : state.userReducer.success,\r\n        loader : state.groupsReducer.addingMemberLoader,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addGroupMember : (groupId, groupList) => dispatch(addGroupMember(groupId, groupList)),\r\n        setUserSuccess : () => dispatch(setUserSuccess())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMember);\r\n\r\nconst Container = styled.div`\r\n  display : flex;\r\n  flex-direction : column;\r\n  width : 100%;\r\n  align-items : flex-start;\r\n  padding : 0px 1rem 1rem;\r\n`;\r\nconst InputContainer = styled.div`\r\n    margin : 10px 0px 20px;\r\n    display : flex;\r\n    position : relative;\r\n    width : 100%;\r\n    .MuiFormHelperText-root {\r\n        font-weight : 500;\r\n    }\r\n`\r\nconst StyledTextField = styled(TextField)`\r\n    ${({ theme }) => `\r\n        label {\r\n            font-weight : 500;\r\n        }\r\n        .Mui-focused {\r\n            font-weight : 400;\r\n        }\r\n        .MuiOutlinedInput-root {\r\n            fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &:hover fieldset {\r\n                border-color: rgba(0, 0, 0, 0.23);\r\n            }\r\n            &.Mui-focused fieldset {\r\n                border-color: ${theme.palette.primary.main};\r\n            }\r\n        }\r\n        .MuiFormHelperText-root {\r\n            top : 100%;\r\n            margin-top : 0px;\r\n            margin-left : 5px;\r\n        }\r\n        `}\r\n`\r\nconst StyledTableContainer = styled(TableContainer)`\r\n   overflow-y : auto;\r\n    ::-webkit-scrollbar {\r\n    width: 14px;\r\n    height: 14px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n    height: 6px;\r\n    border: 4px solid rgba(0, 0, 0, 0);\r\n    background-clip: padding-box;\r\n    border-radius: 7px;\r\n    background-color: rgba(0, 0, 0, .2);\r\n    }\r\n    ::-webkit-scrollbar-button {\r\n    width: 0;\r\n    height: 0;\r\n    display: none;\r\n    }\r\n    ::-webkit-scrollbar-corner {\r\n    background-color: transparent;\r\n    }\r\n`;\r\nconst Empty = styled.div`\r\n  width : 100%;\r\n  display : flex;\r\n  justify-content : center;\r\n  padding : 20px 0px;\r\n`;\r\nconst Helper = styled.div`\r\n  margin-left : 7px;\r\n  cursor : pointer;\r\n  position : relative;\r\n  .helperModal {\r\n      position : absolute;\r\n      left : calc(100% + 7px);\r\n      top : -10px;\r\n      padding : 0.5rem 1rem;\r\n      width : 250px;\r\n      box-sizing : border-box;\r\n      background : #ede9fb;\r\n      border-radius : 3px;\r\n      flex-direction : column;\r\n      z-index : 3;  \r\n      border : 1px solid #ccc;\r\n      display : none;\r\n      opacity : 0;\r\n      transition : 350ms all;\r\n      &::after {\r\n         content : ''; \r\n         position : absolute; \r\n         left : -14px;\r\n         top : 12px;\r\n         border-top : 7px solid transparent;\r\n         border-right : 7px solid #ccc;\r\n         border-bottom : 7px solid transparent;\r\n         border-left : 7px solid transparent;\r\n      }\r\n      img {\r\n          width : 200px;\r\n          object-fit : contain;\r\n          margin : 7px auto;\r\n      }\r\n  }\r\n  &:hover {\r\n    .helperModal {\r\n        display : flex;\r\n        opacity : 1;\r\n    }\r\n  }\r\n`;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport  { Switch, Route } from 'react-router-dom'\r\nimport CreateGroupForm from './CreateGroupForm';\r\nimport EditGroup from './EditGroup';\r\nimport AddMember from './AddMember';\r\nimport { motion } from 'framer-motion'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst fadeVariants = {\r\n    start : { opacity : 0 },\r\n    end : {\r\n        opacity : 1,\r\n        transition : {\r\n            type : 'tween',\r\n            duration : 0.2\r\n        }\r\n    }\r\n}\r\n\r\nfunction CreateGroupRoute({ closeModalHandler, openModalHalder, open }) {\r\n\r\n    const location = useLocation();\r\n\r\n    React.useEffect(() => {\r\n        if(location.pathname.split('/')[2] === 'add-member' || location.pathname.split('/')[2] === 'create-group' || location.pathname.split('/')[2] === 'edit-group' ){\r\n            openModalHalder();\r\n        }\r\n    },[location, openModalHalder])\r\n\r\n    return (\r\n        open && <Container variants={fadeVariants} initial='start' animate='end'>\r\n             <FormContainer>\r\n                        <Switch>\r\n                                <Route path='/manage-groups/create-group'>\r\n                                    <CreateGroupForm closeModalHandler={closeModalHandler}/>\r\n                                </Route>  \r\n                                <Route path='/manage-groups/edit-group'>\r\n                                    <EditGroup closeModalHandler={closeModalHandler}/>\r\n                                </Route> \r\n                                <Route path='/manage-groups/add-member'>\r\n                                    <AddMember closeModalHandler={closeModalHandler}/>\r\n                                </Route> \r\n                        </Switch>\r\n             </FormContainer>    \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreateGroupRoute\r\n\r\nconst Container = styled(motion.div)`\r\n  width : 100vw;\r\n  height : 100vh;\r\n  position : absolute;\r\n  top : 0px;\r\n  left : 0px;\r\n  background : rgba(0 ,0 ,0, 0.3);\r\n  z-index : 1;\r\n  display : flex;\r\n  justify-content : center;\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n   height : 100%;\r\n   box-sizing : border-box;\r\n   width : 500px;\r\n   background : #fff;\r\n   display : flex;\r\n   overflow-x : hidden;\r\n`;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion'\r\nimport { Typography, Button } from '@material-ui/core';\r\nconst fadeVariants = {\r\n    start : { opacity : 0 },\r\n    end : {\r\n        opacity : 1,\r\n        transition : {\r\n            type : 'tween',\r\n            duration : 0.2\r\n        }\r\n    }\r\n}\r\n\r\nfunction DeleteModal({ deleteGroupHandler, closeDeleteModal }) {\r\n    return (\r\n        <Container variants={fadeVariants} initial='start' animate='end'>\r\n             <DeleteBox>\r\n                    <StyledTypography variant='subtitle2' color='textPrimary'>\r\n                          This record will permanently be removed from your system. Are you sure?  \r\n                    </StyledTypography>\r\n                    <div className='action'>\r\n                        <Button variant='contained' \r\n                                color='secondary' \r\n                                disableElevation \r\n                                onClick={deleteGroupHandler}\r\n                                size='small' \r\n                                style={{ textTransform : 'capitalize' }}>\r\n                            Delete\r\n                        </Button>\r\n                        <Button variant='contained' \r\n                                disableElevation \r\n                                size='small' \r\n                                onClick={closeDeleteModal}\r\n                                style={{ marginLeft : '7px', textTransform : 'capitalize' }}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n              </DeleteBox>   \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DeleteModal;\r\n\r\nconst Container = styled(motion.div)`\r\n  width : 100vw;\r\n  height : 100vh;\r\n  position : absolute;\r\n  top : 0px;\r\n  left : 0px;\r\n  background : rgba(0 ,0 ,0, 0.4);\r\n  z-index : 1;\r\n  display : flex;\r\n  justify-content : center;\r\n  align-items : center;\r\n`;\r\nconst DeleteBox = styled.div`\r\n    padding : 1rem;\r\n    border-radius : 5px;\r\n    background : #fff;\r\n    .action {\r\n        padding : 15px 0px 0px;\r\n        display : flex;\r\n        justify-content : flex-end;\r\n    }\r\n`;\r\n\r\nconst StyledTypography = styled(Typography)`\r\n    &&& {\r\n        font-size : 0.9rem;\r\n        font-weight : 400;\r\n    }\r\n`","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Typography, Divider, IconButton, Button, CircularProgress } from '@material-ui/core'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport { connect } from 'react-redux';\r\nimport { loadGroups, deleteGroup } from '../Store/Actions/groupsAction'\r\nimport TableLoader from '../Component/TableLoader'\r\nimport CreateGroupRoute from './CreateGroupRoute'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport DeleteModal from './DeleteModal';\r\n\r\nconst GroupList = ({ loadGroups, loader, groups, deleteGroup, deletingGroupLoader }) => {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openDeleteModal, setOpenDeleteModal] = React.useState({ value : false, groupId : '' });\r\n    const history = useHistory();\r\n\r\n    const openModalHalder = () => {\r\n        setOpen(true)\r\n    }\r\n \r\n    const closeModalHandler = () => {\r\n        setOpen(false)\r\n        history.push('/manage-groups');\r\n    }\r\n\r\n    const openDeleteModalHandler = groupId => {\r\n       setOpenDeleteModal({ ...openDeleteModal, value : true, groupId : groupId })\r\n    }\r\n    const closeDeleteModal = () => {\r\n        setOpenDeleteModal({ ...openDeleteModal, value : false })\r\n    }     \r\n\r\n    const deleteGroupHandler = () => {\r\n        deleteGroup(openDeleteModal.groupId)\r\n        setOpenDeleteModal({ ...openDeleteModal, value : false })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        groups.length === 0 && loadGroups();\r\n    },[loadGroups, groups])\r\n\r\n    return (\r\n        <Container>\r\n            <CreateGroupRoute openModalHalder={openModalHalder} open={open} closeModalHandler={closeModalHandler}/>\r\n            { openDeleteModal.value ? <DeleteModal deleteGroupHandler={deleteGroupHandler} closeDeleteModal={closeDeleteModal}/> : null }\r\n            <Header>\r\n                    <Typography variant='subtitle2' color='textPrimary' style={{ fontSize : '16px' }}>\r\n                            Group List\r\n                    </Typography>\r\n                    <Link to={`${history.location.pathname}/create-group`} \r\n                          style={{ textDecoration : 'none' }} onClick={openModalHalder}>\r\n                        <Button color='primary'\r\n                                size='small'\r\n                                variant='contained'\r\n                                disableElevation\r\n                                startIcon={<OpenInNewIcon fontSize='small'/>}\r\n                                >\r\n                            Create Group      \r\n                        </Button>\r\n                    </Link>\r\n            </Header>\r\n            <Divider />\r\n            <StyledTableContainer>\r\n                { !loader ?\r\n                      groups.length !== 0 ?  \r\n                         <Table size=\"small\">\r\n                            <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>S.N</TableCell>\r\n                                        <TableCell align=\"center\">Group name</TableCell>\r\n                                        <TableCell align=\"center\">Edit</TableCell>\r\n                                        <TableCell align=\"right\">Delete</TableCell>\r\n                                    </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                    {\r\n                                        groups.map((group, index) =>\r\n                                            <TableRow key={group.groupId}>\r\n                                                <TableCell>{++index}.</TableCell>\r\n                                                <TableCell align=\"center\">{group.groupName}</TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                   <Link to={{\r\n                                                               pathname : `${history.location.pathname}/edit-group`,\r\n                                                               state : { groupId : group.groupId, groupName : group.groupName } \r\n                                                            }}\r\n                                                            onClick={openModalHalder}\r\n                                                         >\r\n                                                        <IconButton size='small'>\r\n                                                                    <EditIcon fontSize='small'/>\r\n                                                        </IconButton>\r\n                                                   </Link> \r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton size='small' onClick={openDeleteModalHandler.bind(null, group.groupId)}>\r\n                                                          {  \r\n                                                            (deletingGroupLoader && group.groupId === openDeleteModal.groupId)\r\n                                                                ?\r\n                                                                <CircularProgress  size={20}/> \r\n                                                                :\r\n                                                                <RemoveCircleOutlineIcon fontSize='small' color='secondary'/>\r\n                                                          }\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        )\r\n                                    }\r\n                            \r\n                            </TableBody>\r\n                        </Table>\r\n                :   \r\n                 <div>\r\n                     <Typography variant='subtitle2' color='textSecondary' align='center' component='div'>\r\n                            You don't have any groups yet.\r\n                     </Typography>\r\n                 </div> \r\n                :\r\n                <TableLoader />\r\n                }\r\n            </StyledTableContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n     return {\r\n         loader : state.groupsReducer.groupsLoader,\r\n         groups : state.groupsReducer.groups,\r\n         deletingGroupLoader : state.groupsReducer.deletingGroupLoader\r\n     }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadGroups : () => dispatch(loadGroups()),\r\n        deleteGroup : groupId => dispatch(deleteGroup(groupId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupList)\r\n\r\nconst Container = styled.div`\r\n    margin-bottom : 20px;\r\n    border-radius : 10px;\r\n    width : 100%;\r\n    background : #fff;\r\n    box-sizing : border-box;\r\n    box-shadow: rgba(53, 64, 82, 0.05) 1px 0px 14px 0px;\r\n`\r\nconst Header = styled.div`\r\n   height : 60px;\r\n   padding : 0px 20px;\r\n   display : flex;\r\n    box-sizing : border-box;\r\n   align-items : center;\r\n   justify-content : space-between;\r\n   border-bottom : 1px solid rgba(0, 0, 0, 0.12);\r\n`\r\nconst StyledTableContainer = styled(TableContainer)`\r\n    &&& {\r\n        padding : 2rem 3rem;\r\n        box-sizing : border-box;\r\n        width : 100%;\r\n        @media(max-width : 768px) {\r\n            padding : 0px;\r\n        }\r\n    }\r\n`;","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport bg from '../Assets/bg-icon.svg';\r\nimport { Grid, Typography, CircularProgress } from '@material-ui/core';\r\nimport { motion } from 'framer-motion';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport GroupList from '../Component/GroupList';\r\n\r\nconst fadeVariant = {\r\n    start : {\r\n        opacity : 0\r\n    },\r\n    end : {\r\n        opacity : 1,\r\n        transition : {\r\n            type : 'tween',\r\n            duration : 0.5\r\n        }\r\n    }\r\n}\r\n\r\nconst ManageGroups = ({ userLoader, user }) => {\r\n    React.useEffect(() => {\r\n        document.title = 'SMS Nepal - Manage Groups';\r\n    },[])\r\n    return (\r\n        <Container variants={fadeVariant} initial='start' animate='end'>\r\n                <Header>\r\n                <div className= 'top'>\r\n                        <div style={{ flex : '1' }}>\r\n                            <Typography variant='h4' style={{ color : '#fff', fontWeight: '700' }}>\r\n                                Manage Groups\r\n                            </Typography> \r\n                            <Typography variant='subtitle2' style={{ color : '#fff', fontWeight : '400', marginTop : '5px' }}>\r\n                                Create and manage group contacts for sending bulk SMS more easily.\r\n                            </Typography>\r\n                        </div>\r\n                    { !userLoader ?  \r\n                            <div className='statCard'>\r\n                                    <div className='title'>\r\n                                        <Typography variant='caption'  style={{  fontWeight : '400', color : '#eee' }}>\r\n                                            Statistics\r\n                                        </Typography>  \r\n                                        <Typography variant='subtitle2' style={{  fontWeight : '400' }}>\r\n                                            Total Message\r\n                                        </Typography>          \r\n                                    </div>    \r\n                                    <div>\r\n                                        <Typography variant='subtitle2' className='number' component='div' align='right' style={{ fontFamily : 'Kanit' }}>\r\n                                            { user.smsLimit && user.smsLimit}\r\n                                        </Typography> \r\n                                    </div>    \r\n                            </div> \r\n                            :  \r\n                            <Skeleton animation='wave' height={120} width={200}\r\n                                    style={{ background : 'rgba(242, 113, 33, 0.7)'}}\r\n                                />\r\n                        }\r\n                    </div>\r\n                </Header>    \r\n                { !userLoader ? \r\n                    <GridContainer container>\r\n                            <StyledGrid item xs={12} sm={12} md={12} lg={12}>\r\n                                   <GroupList /> \r\n                            </StyledGrid>  \r\n                    </GridContainer>  \r\n                    :\r\n                    <LoaderContainer>\r\n                            <CircularProgress />\r\n                    </LoaderContainer>   } \r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLoader : state.userReducer.userLoader,\r\n        user : state.userReducer.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ManageGroups)\r\n\r\nconst Container = styled(motion.div)`\r\n    height : calc(100% - 56px);\r\n    overflow : auto;\r\n    flex : 1;\r\n    background : #DADDE1;\r\n`\r\nconst Header = styled.div`\r\n     height : 180px;\r\n     ${({ theme }) => `background :  ${theme.palette.primary.main}`};\r\n     padding : 10px 30px;\r\n     box-sizing : border-box;\r\n     background-image : url(${bg});\r\n     background-size : 50%;\r\n     @media( max-width : 768px ) {\r\n         height : auto;\r\n     }\r\n     .top {\r\n         position : relative;\r\n         display : flex;\r\n         @media( max-width : 768px ) {\r\n             flex-direction : column;\r\n         }\r\n             .statCard  {\r\n                  color : #fff ;\r\n                  box-sizing : border-box;\r\n                  padding : 5px 10px;\r\n                  display : flex;\r\n                  height : 70px;  \r\n                  width : 200px;\r\n                  background : #fff;\r\n                  border-radius : 3px;\r\n                  justify-content : space-between;\r\n                  align-items : flex-end;\r\n                  background: #F27121;\r\n                  .title {\r\n                      height : 100%;\r\n                      flex : 1;\r\n                      display : flex;\r\n                      flex-direction : column;\r\n                      justify-content : space-evenly;\r\n                  }\r\n                  .number {\r\n                      font-size : 25px;\r\n                  }\r\n                  @media( max-width : 768px ) {\r\n                        margin-top : 10px;\r\n                    }\r\n         }\r\n     }\r\n`\r\n\r\n\r\n\r\nconst StyledGrid = styled(Grid)`\r\n    &&& {\r\n        box-sizing : border-box;\r\n        padding : 0px 5px;\r\n    }\r\n`\r\nconst GridContainer = styled(Grid)`\r\n    box-sizing : border-box;\r\n    padding : 0px 10px;\r\n    margin-bottom : 10px;\r\n    @media( min-width : 768px ) {\r\n        margin-top : -70px;\r\n    }\r\n    @media( max-width : 768px ) {\r\n        margin-top : 15px;\r\n    }\r\n`\r\n\r\nconst LoaderContainer = styled.div`\r\n    position : absolute;\r\n    left : 50%;\r\n    transform : translate(-50%, -50%);\r\n    height : 60px;\r\n    width : 60px;\r\n    border-radius : 60px;\r\n    box-shadow: rgba(0, 0, 0, 0.05) 1px 0px 14px 0px;\r\n    background : #fff;\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Typography, Grid, AppBar, Tabs, Tab, Box } from '@material-ui/core'\r\n\r\nfunction ApiDocs() {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n              <Typography variant='subtitle2'\r\n                            color='textPrimary'\r\n                            style={{ fontWeight : '400', fontSize : '1rem' }}>\r\n                Method\r\n             </Typography>\r\n             <samp style={{ marginBottom : '0.7rem' }}>\r\n                 POST - Only post request is supported by our system.\r\n             </samp>\r\n             <Typography variant='subtitle2'\r\n                            color='textPrimary'\r\n                            style={{ fontWeight : '400', fontSize : '1rem' }}>\r\n                 API endpoint\r\n             </Typography>\r\n             <samp style={{ marginBottom : '0.7rem' }}>\r\n                https://sms-nepal-backend.herokuapp.com/sendSMS\r\n             </samp>\r\n             <Typography variant='subtitle2'\r\n                            color='textPrimary'\r\n                            style={{ fontWeight : '400', fontSize : '1rem' }}>\r\n                 Responses\r\n             </Typography>\r\n             <Grid container spacing={1}>\r\n                <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                    <Response>\r\n                     <samp>\r\n                        Success response <br /> <br />\r\n                        {'{'}<br />\r\n                         &nbsp;&nbsp;&nbsp;&nbsp;data : \"Sent Successfully\",<br/>\r\n                         &nbsp;&nbsp;&nbsp;&nbsp;status : 200,<br/>\r\n                        {'}'}<br />\r\n                    </samp>\r\n                    </Response>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                     <Response>\r\n                        <samp>\r\n                            Error response <br /> <br />\r\n                            {'{'}<br />\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;status 400 : \"Bad requests\",<br/>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;status 402 : \"Sms Limit exceeds\",<br/>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;status 403 : \"Unauthorized access\",<br/>\r\n                            {'}'}<br />\r\n                        </samp>\r\n                    </Response>   \r\n                </Grid>\r\n             </Grid>\r\n             <Typography variant='subtitle2'\r\n                            color='textPrimary'\r\n                            style={{ fontWeight : '400', fontSize : '1rem', margin: '1rem 0px' }}>\r\n                 Code samples\r\n             </Typography>\r\n             <div style={{ width : '100%' }}>\r\n                        <AppBar position=\"static\" style={{ boxShadow : 'none' }}>\r\n                            <Tabs value={value} \r\n                                onChange={handleChange}\r\n                                variant=\"scrollable\"\r\n                                scrollButtons=\"auto\"\r\n                                aria-label=\"scrollable auto tabs example\">\r\n                                <Tab label=\"Javascript\" id={`scrollable-auto-tab-${0}`} aria-controls={`scrollable-auto-tabpanel-${0}`}/>\r\n                                <Tab label=\"Python\" id={`scrollable-auto-tab-${1}`} aria-controls={`scrollable-auto-tabpanel-${1}`}/>\r\n                                <Tab label=\"Java\" id={`scrollable-auto-tab-${2}`} aria-controls={`scrollable-auto-tabpanel-${2}`}/>\r\n                                <Tab label=\"PHP\" id={`scrollable-auto-tab-${3}`} aria-controls={`scrollable-auto-tabpanel-${3}`}/>\r\n                                <Tab label=\"Node.js\" id={`scrollable-auto-tab-${4}`} aria-controls={`scrollable-auto-tabpanel-${4}`}/>\r\n                            </Tabs>\r\n                        </AppBar>\r\n                        <StyledBox value={value} index={0}role=\"tabpanel\"\r\n                                    hidden={value !== 0}\r\n                                    id={`scrollable-auto-tabpanel-${0}`}\r\n                                    aria-labelledby={`scrollable-auto-tab-${0}`}> \r\n                                <samp>\r\n                                    {'{'}<br />\r\n                                    <div style={{ padding : '0px 30px', boxSizing : \"border-box\", lineHeight : '1.3rem' }}>\r\n                                        var myHeaders = new Headers();<br/>\r\n                                        myHeaders.append(\"Authorization\", \"ApiKey <span className='highlight'>Your_API_key</span>\");<br/>\r\n                                        myHeaders.append(\"Content-Type\", \"application/json\");<br/>\r\n                                        var raw = JSON.stringify({'{'}\"sms\":\"<span className='highlight'>Your_message</span>\",\"phone\":[<span className='highlight'>Phone_numbers_list</span>]{'}'});<br/>\r\n                                        var requestOptions = {'{'}<br/>\r\n                                        method: 'POST',<br/>\r\n                                        headers: myHeaders,<br/>\r\n                                        body: raw,<br/>\r\n                                        redirect: 'follow'<br/>\r\n                                        {'}'};<br/>\r\n                                        fetch(\"https://sms-nepal-backend.herokuapp.com/sendSMS\", requestOptions)<br/>\r\n                                        .then(response {\"=>\"} response.text())<br/>\r\n                                        .then(result {\"=>\"}  console.log(result))<br/>\r\n                                        .catch(error {\"=>\"} console.log('error', error));<br/>\r\n                                    </div>\r\n                                    {'}'}<br />\r\n                                </samp>\r\n                        </StyledBox>\r\n                        <StyledBox value={value} index={1} role=\"tabpanel\"\r\n                                hidden={value !== 1}\r\n                                id={`scrollable-auto-tabpanel-${1}`}\r\n                                aria-labelledby={`scrollable-auto-tab-${1}`}>\r\n                                <samp>\r\n                                {'{'}<br />\r\n                                    <div style={{ padding : '0px 30px', lineHeight : '1.3rem' }}>\r\n                                    import requests<br/>\r\n                                    url = \"https://sms-nepal-backend.herokuapp.com/sendSMS\"<br/>\r\n                                    payload = \"{'{'}\\r\\n    \\\"sms\\\": \\\"<span className='highlight'>Your_message</span>\\\",\\r\\n    \\\"phone\\\": [<span className='highlight'>Phone_numbers_list</span>]\\r\\n{'}'}\"<br/>\r\n                                    headers = {'{'}<br/>\r\n                                    'Authorization': 'ApiKey <span className='highlight'>Your_API_key</span>',<br/>\r\n                                    'Content-Type': 'application/json'<br/>\r\n                                    {'}'}<br/>\r\n                                    response = requests.request(\"POST\", url, headers=headers, data = payload)<br/>\r\n                                    print(response.text.encode('utf8'))<br/>\r\n                                    </div>\r\n                                {'}'}<br />\r\n                                </samp>\r\n                        </StyledBox>\r\n                        <StyledBox value={value} index={2} role=\"tabpanel\"\r\n                                hidden={value !== 2}\r\n                                id={`scrollable-auto-tabpanel-${2}`}\r\n                                aria-labelledby={`scrollable-auto-tab-${2}`}>\r\n                                <samp>\r\n                                {'{'}<br />\r\n                                <div style={{ padding : '0px 30px', lineHeight : '1.3rem' }}>\r\n                                        OkHttpClient client = new OkHttpClient().newBuilder().build();<br />\r\n                                        MediaType mediaType = MediaType.parse(\"application/json\");<br />\r\n                                        RequestBody body = RequestBody.create(mediaType, \"{'{'}\\r\\n    \\\"sms\\\": \\\"<span className='highlight'>Your_message</span>\\\",\\r\\n    \\\"phone\\\": [<span className='highlight'>Phone_numbers_list</span>]\\r\\n{'}'}\");<br />\r\n                                        Request request = new Request.Builder()<br />\r\n                                        .url(\"https://sms-nepal-backend.herokuapp.com/sendSMS\")<br />\r\n                                        .method(\"POST\", body)<br />\r\n                                        .addHeader(\"Authorization\", \"ApiKey <span className='highlight'>Your_API_key</span>\")<br />\r\n                                        .addHeader(\"Content-Type\", \"application/json\")<br />\r\n                                        .build();<br />\r\n                                        Response response = client.newCall(request).execute();<br />\r\n                                </div>\r\n                                \r\n                                {'}'}<br />\r\n                                </samp>\r\n                        </StyledBox>\r\n                        <StyledBox value={value} index={3} role=\"tabpanel\"\r\n                                hidden={value !== 3}\r\n                                id={`scrollable-auto-tabpanel-${3}`}\r\n                                aria-labelledby={`scrollable-auto-tab-${3}`}>\r\n                                <samp>\r\n                                {'{'}<br />\r\n                                <div style={{ padding : '0px 30px', lineHeight : '1.3rem' }}>\r\n                                        $client = new http\\Client;<br/>\r\n                                        $request = new http\\Client\\Request;<br/>\r\n                                        $request{'->'}setRequestUrl('https://sms-nepal-backend.herokuapp.com/sendSMS');<br/>\r\n                                        $request{'->'}setRequestMethod('POST');<br/>\r\n                                        $body = new http\\Message\\Body;<br/>\r\n                                        $body{'->'}append('{'{'}<br/>\r\n                                            \"sms\": \"<span className='highlight'>Your_message</span>\",<br/>\r\n                                            \"phone\": [<span className='highlight'>Phone_numbers_list</span>]<br/>\r\n                                        {'}'}');<br/>\r\n                                        $request{'->'}setBody($body);<br/>\r\n                                        $request{'->'}setOptions(array());<br/>\r\n                                        $request{'->'}setHeaders(array(<br/>\r\n                                        'Authorization' {'=>'} 'ApiKey <span className='highlight'>Your_API_key</span>',<br/>\r\n                                        'Content-Type' {'=>'} 'application/json'<br/>\r\n                                        ));<br/>\r\n                                        $client{'->'}enqueue($request){'->'}send();<br/>\r\n                                        $response = $client{'->'}getResponse();<br/>\r\n                                        echo $response{'->'}getBody();<br/>\r\n                                </div>\r\n                                {'}'}<br />\r\n                                </samp>\r\n                        </StyledBox>\r\n                        <StyledBox value={value} index={4} role=\"tabpanel\"\r\n                                hidden={value !== 4}\r\n                                id={`scrollable-auto-tabpanel-${4}`}\r\n                                aria-labelledby={`scrollable-auto-tab-${4}`}>\r\n                                <samp>\r\n                                {'{'}<br />\r\n                                <div style={{ padding : '0px 30px', lineHeight : '1.3rem' }}>\r\n                                        var https = require('follow-redirects').https;<br/>\r\n                                        var fs = require('fs');<br/>\r\n                                        var options = {'{'}<br/>\r\n                                        'method': 'POST',<br/>\r\n                                        'hostname': 'sms-nepal-backend.herokuapp.com',<br/>\r\n                                        'path': '/sendSMS',<br/>\r\n                                        'headers': {'{'}<br/>\r\n                                            'Authorization': 'ApiKey <span className='highlight'>Your_API_key</span>',<br/>\r\n                                            'Content-Type': 'application/json'<br/>\r\n                                        {'}'},<br/>\r\n                                        'maxRedirects': 20<br/>\r\n                                        {'}'};<br/>\r\n                                        var req = https.request(options, function (res) {'{'}<br/>\r\n                                        var chunks = [];<br/>\r\n                                        res.on(\"data\", function (chunk) {'{'}<br/>\r\n                                            chunks.push(chunk);<br/>\r\n                                        {'}'});<br/>\r\n                                        res.on(\"end\", function (chunk) {'{'}<br/>\r\n                                            var body = Buffer.concat(chunks);<br/>\r\n                                            console.log(body.toString());<br/>\r\n                                        {'}'});<br/>\r\n                                        res.on(\"error\", function (error) {'{'}<br/>\r\n                                            console.error(error);<br/>\r\n                                        {'}'});<br/>\r\n                                        {'}'});<br/>\r\n                                        var postData = JSON.stringify({'{'}\"sms\":\"<span className='highlight'>Your_message</span>\",\"phone\":[<span className='highlight'>Phone_numbers_list</span>]{'}'});<br/>\r\n                                        req.write(postData);<br/>\r\n                                        req.end();<br/>\r\n                                </div>\r\n                                {'}'}<br />\r\n                                </samp>\r\n                        </StyledBox>\r\n             </div>\r\n           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ApiDocs\r\n\r\nconst Container = styled.div`\r\n   box-sizing : border-box;\r\n   padding : 0rem 1rem 1.2rem; \r\n   samp {\r\n      font-size : 1.1rem;\r\n      display : block;\r\n      .highlight {\r\n          color : #e6db74;\r\n      }\r\n   }\r\n`;\r\n\r\nconst Response = styled.div`\r\n   margin-top : 10px; \r\n   box-sizing : border-box;\r\n   background : #272c34;\r\n   padding : 0.7rem;\r\n   color : #fff;\r\n   border-radius : 7px; \r\n`;\r\nconst StyledBox = styled(Box)`\r\n    &&& {\r\n        box-sizing : border-box;\r\n        padding : 0.7rem;  \r\n        background : #272c34;\r\n        color : #fff;\r\n    }\r\n`;\r\n","import React, { useState, useRef } from 'react'\r\nimport styled from 'styled-components';\r\nimport bg from '../Assets/bg-icon.svg';\r\nimport { Grid, Typography, CircularProgress, Button, Tooltip } from '@material-ui/core';\r\nimport { motion } from 'framer-motion';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { connect } from 'react-redux';\r\nimport { generateApi, getApiKey } from '../Store/Actions/userAction'\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport ApiDocs from './ApiDocs';\r\n\r\nconst fadeVariant = {\r\n    start : {\r\n        opacity : 0\r\n    },\r\n    end : {\r\n        opacity : 1,\r\n        transition : {\r\n            type : 'tween',\r\n            duration : 0.5\r\n        }\r\n    }\r\n}\r\n\r\nfunction ManageApi({ userLoader, user, generateApi, apiKeyLoader, apiKey, getApiKey, getApiLoader }) {\r\n\r\n    const [showApiDocs, setShowApiDocs] = useState(false)\r\n    const [copied, setCopied] = useState(false)\r\n    const inputRef = useRef(null);\r\n\r\n    const generateApiKeyHandler = () => {\r\n        generateApi()\r\n    }\r\n\r\n    const copyTextHandler = e => {\r\n        if(navigator.clipboard){\r\n            navigator.clipboard.writeText(inputRef.current.value);\r\n            setCopied(true)\r\n        }\r\n        else {\r\n            inputRef.current.select();\r\n            document.execCommand(\"copy\");\r\n            setCopied(true)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n       apiKey === 0 && getApiKey();\r\n    }, [getApiKey, apiKey])\r\n\r\n    return (\r\n        <Container variants={fadeVariant} initial='start' animate='end'>\r\n                <Header>\r\n                    <div className= 'top'>\r\n                        <div style={{ flex : '1' }}>\r\n                            <Typography variant='h4' style={{ color : '#fff', fontWeight: '700' }}>\r\n                                Manage Api\r\n                            </Typography> \r\n                            <Typography variant='subtitle2' style={{ color : '#fff', fontWeight : '400', marginTop : '5px' }}>\r\n                                Setup bulk messaging from your own system using our api.\r\n                            </Typography>\r\n                        </div>\r\n                        { !userLoader ?  \r\n                            <div className='statCard'>\r\n                                        <div className='title'>\r\n                                            <Typography variant='caption'  style={{  fontWeight : '400', color : '#eee' }}>\r\n                                                Statistics\r\n                                            </Typography>  \r\n                                            <Typography variant='subtitle2' style={{  fontWeight : '400' }}>\r\n                                                Total Message\r\n                                            </Typography>          \r\n                                        </div>    \r\n                                        <div>\r\n                                            <Typography variant='subtitle2' className='number' component='div' align='right' style={{ fontFamily : 'Kanit' }}>\r\n                                                {user.smsLimit}\r\n                                            </Typography> \r\n                                        </div>    \r\n                                </div>   \r\n                                :  \r\n                                <Skeleton animation='wave' height={120} width={200}\r\n                                            style={{ background : 'rgba(242, 113, 33, 0.7)'}}\r\n                                />\r\n                            }\r\n                    </div>  \r\n                </Header>\r\n                { !userLoader ? \r\n                        <GridContainer container>\r\n                            <StyledGrid item xs={12}>\r\n                                   <ApiContainer>\r\n                                        <ApiHeader>\r\n                                            <Typography variant='subtitle2' color='textPrimary' style={{ fontSize : '16px' }}>\r\n                                                    Your Api key\r\n                                            </Typography>\r\n                                            <GenerateApiBtn variant='contained' size='small'\r\n                                                            onClick={generateApiKeyHandler}\r\n                                                            disabled={apiKeyLoader}\r\n                                                            disableElevation>\r\n                                                { apiKeyLoader ?<CircularProgress style={{ color : '#fff' }} size={20}/> : 'Generate Api' }\r\n                                            </GenerateApiBtn>\r\n                                        </ApiHeader>\r\n                                        <ApiBody>\r\n                                            <ApiKey>\r\n                                               {\r\n                                                   getApiLoader ?\r\n                                                   <>\r\n                                                    <Skeleton width={50} height = {20}/>\r\n                                                    <Skeleton width={250} height = {40}/>\r\n                                                   </> :\r\n                                                        apiKey === 0 ?\r\n                                                        <Typography variant='subtitle2'\r\n                                                                    color='textSecondary' \r\n                                                                    align = 'center'\r\n                                                                    style={{ fontWeight : '400', marginLeft : '5px', fontSize : '1rem' }}>\r\n                                                            You have not generated an API key.\r\n                                                        </Typography> \r\n                                                        :\r\n                                                        <>\r\n                                                            <Typography variant='subtitle2'\r\n                                                                        color='textSecondary' \r\n                                                                        style={{ fontWeight : '400', marginLeft : '5px', fontSize : '1rem' }}>\r\n                                                                Api key \r\n                                                            </Typography> \r\n                                                            <div className='key'>\r\n                                                                <input type='text' value={apiKey} readOnly ref={inputRef}/>\r\n                                                                <Tooltip title={ copied ? 'Copied' : 'Copy' } \r\n                                                                         placement=\"top\">\r\n                                                                    <FileCopyOutlinedIcon \r\n                                                                        onClick={copyTextHandler}\r\n                                                                        fontSize='small' \r\n                                                                        style={{ padding : '0px 7px', color:'rgba(0, 0, 0, 0.54)', cursor : 'pointer' }}/>\r\n                                                                </Tooltip>\r\n                                                            </div>\r\n                                                     </>\r\n                                                   } \r\n                                            </ApiKey>\r\n                                            <Button variant='contained' size='small' \r\n                                                    disableElevation\r\n                                                    color='primary'\r\n                                                    onClick={() => setShowApiDocs(!showApiDocs)}\r\n                                                    endIcon={<CodeIcon fontSize='small'/>}\r\n                                                    style={{ margin : '1rem', textTransform : 'capitalize' }}>\r\n                                                 View Api docs\r\n                                            </Button>\r\n                                            {showApiDocs ? <ApiDocs /> : null}\r\n                                        </ApiBody>\r\n                                   </ApiContainer>\r\n                            </StyledGrid>  \r\n                        </GridContainer>  \r\n                        :\r\n                        <LoaderContainer>\r\n                                <CircularProgress />\r\n                        </LoaderContainer>   \r\n                    } \r\n                </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLoader : state.userReducer.userLoader,\r\n        apiKeyLoader : state.userReducer.apiKeyLoader,\r\n        apiKey : state.userReducer.apiKey,\r\n        user : state.userReducer.user,\r\n        getApiLoader : state.userReducer.getApiLoader\r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n    return {\r\n        generateApi : () => dispatch(generateApi()),\r\n        getApiKey : () => dispatch(getApiKey())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchtoProps)(ManageApi);\r\n\r\nconst Container = styled(motion.div)`\r\n    height : calc(100% - 56px);\r\n    overflow : auto;\r\n    flex : 1;\r\n    background : #DADDE1;\r\n`\r\nconst Header = styled.div`\r\n     height : 180px;\r\n     ${({ theme }) => `background :  ${theme.palette.primary.main}`};\r\n     padding : 10px 30px;\r\n     box-sizing : border-box;\r\n     background-image : url(${bg});\r\n     background-size : 50%;\r\n     @media( max-width : 768px ) {\r\n         height : auto;\r\n     }\r\n     .top {\r\n         position : relative;\r\n         display : flex;\r\n         @media( max-width : 768px ) {\r\n             flex-direction : column;\r\n         }\r\n             .statCard  {\r\n                  color : #fff ;\r\n                  box-sizing : border-box;\r\n                  padding : 5px 10px;\r\n                  display : flex;\r\n                  height : 70px;  \r\n                  width : 200px;\r\n                  background : #fff;\r\n                  border-radius : 3px;\r\n                  justify-content : space-between;\r\n                  align-items : flex-end;\r\n                  background: #F27121;\r\n                  .title {\r\n                      height : 100%;\r\n                      flex : 1;\r\n                      display : flex;\r\n                      flex-direction : column;\r\n                      justify-content : space-evenly;\r\n                  }\r\n                  .number {\r\n                      font-size : 25px;\r\n                  }\r\n                  @media( max-width : 768px ) {\r\n                        margin-top : 10px;\r\n                    }\r\n         }\r\n     }\r\n`\r\nconst StyledGrid = styled(Grid)`\r\n    &&& {\r\n        box-sizing : border-box;\r\n        padding : 0px 5px;\r\n    }\r\n`\r\nconst GridContainer = styled(Grid)`\r\n    box-sizing : border-box;\r\n    padding : 0px 10px;\r\n    margin-bottom : 10px;\r\n    @media( min-width : 768px ) {\r\n        margin-top : -70px;\r\n    }\r\n    @media( max-width : 768px ) {\r\n        margin-top : 15px;\r\n    }\r\n`\r\nconst LoaderContainer = styled.div`\r\n    position : absolute;\r\n    left : 50%;\r\n    transform : translate(-50%, -50%);\r\n    height : 60px;\r\n    width : 60px;\r\n    border-radius : 60px;\r\n    box-shadow: rgba(0, 0, 0, 0.05) 1px 0px 14px 0px;\r\n    background : #fff;\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n`\r\nconst ApiContainer = styled.div`\r\n    margin-bottom : 20px;\r\n    border-radius : 10px;\r\n    width : 100%;\r\n    background : #fff;\r\n    box-sizing : border-box;\r\n    box-shadow: rgba(53, 64, 82, 0.05) 1px 0px 14px 0px;\r\n`\r\nconst ApiHeader = styled.div`\r\n   height : 60px;\r\n   padding : 0px 20px;\r\n   display : flex;\r\n    box-sizing : border-box;\r\n   align-items : center;\r\n   justify-content : space-between;\r\n   border-bottom : 1px solid rgba(0, 0, 0, 0.12);\r\n`\r\nconst ApiBody = styled.div`\r\n   box-sizing : border-box;\r\n   padding : 0.7rem;\r\n`;\r\nconst GenerateApiBtn = styled(Button)`\r\n   &&& {\r\n       ${({ theme }) => `\r\n       background : ${theme.palette.success.main};\r\n       color : #fff;\r\n   `}\r\n   }\r\n`\r\nconst ApiKey = styled.div`\r\n  display : flex;\r\n  flex-direction : column;\r\n  box-sizing : border-box;\r\n  padding : 0px 1rem;\r\n  .key {\r\n      display : flex;\r\n      width : 100%;\r\n      margin-top : 7px;\r\n      background : #eee;\r\n      align-items : center;\r\n      input {\r\n          outline : none;\r\n          flex : 1;\r\n          border : 0;\r\n          box-sizing : border-box;\r\n          padding : 0.6rem;\r\n          font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',monospace;\r\n          font-size : 1rem;\r\n          background : #eee;\r\n      }\r\n  }\r\n`;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport Navigation from '../Component/Navigation';\r\nimport Homepage from '../Component/Homepage';\r\nimport {  Avatar, Typography, IconButton, SwipeableDrawer, Snackbar } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { Switch, Route, useLocation, Redirect } from 'react-router-dom';\r\nimport Setting from '../Component/Setting';\r\nimport Subscription from '../Component/Subscription';\r\nimport { connect } from 'react-redux';\r\nimport  { loadUser, setUserError } from '../Store/Actions/userAction';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Media from 'react-media';\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport ManageGroups from '../Component/ManageGroups';\r\nimport ManageApi from '../Component/ManageApi';\r\n\r\nfunction Dashboard({ loadUser, userLoader, user, success, error, setUserSuccess, setUserError }) {\r\n\r\n    const [openDrawer, setOpenDrawer] = React.useState(false);\r\n    const location = useLocation();\r\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n    const [openErrorSnackbar, setOpenErrorSnackbar] = React.useState(false);\r\n\r\n    const toggleDrawer = () => {\r\n        setOpenDrawer(!openDrawer)\r\n    }\r\n\r\n    const handleCloseSnackBar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpenSnackbar(false);\r\n    };\r\n\r\n    const handleCloseErrorSnackBar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpenErrorSnackbar(false);\r\n      };\r\n\r\n    React.useEffect(() => {\r\n        loadUser();\r\n    }, [loadUser])\r\n\r\n    React.useEffect(() => {\r\n        if(success.value){\r\n             setOpenSnackbar(true);\r\n        }\r\n        if(error.value){\r\n            setOpenErrorSnackbar(true);\r\n            setUserError();\r\n       }\r\n   },[success, error, setUserSuccess, setUserError])\r\n\r\n    return (\r\n        <Container>\r\n            <Media query={{ minWidth: 992 }}>\r\n                {matches =>\r\n                    matches ? (\r\n                        <Navigation itemClicked={toggleDrawer}/>\r\n                    ) : (\r\n                    <SwipeableDrawer\r\n                            open={openDrawer}\r\n                            onOpen={() => setOpenDrawer(true)}\r\n                            onClose={toggleDrawer}\r\n                        >\r\n                            <MobileNav>\r\n                                <Navigation itemClicked={toggleDrawer}/>\r\n                            </MobileNav> \r\n                    </SwipeableDrawer>   \r\n                    )\r\n                }\r\n            </Media>\r\n                <Content>\r\n                    <AppBar>\r\n                            <Hamburger onClick={toggleDrawer}>\r\n                                <MenuIcon style={{ color : '#fff'  }}/>  \r\n                            </Hamburger>\r\n                            <Typography variant='subtitle2' style={{ flex : '1', color : '#fff' }}>\r\n                                { location && location.pathname.split('/')[1].toUpperCase() }\r\n                            </Typography>   \r\n                            {!userLoader ? \r\n                                <StyledAvatar color='success'>\r\n                                    { user.name && user.name.charAt(0).toUpperCase() }\r\n                                </StyledAvatar>\r\n                                : \r\n                                <Skeleton variant=\"circle\" width={35} height={35} \r\n                                        style={{ background : 'rgba(255, 255, 255, 0.1)' }}\r\n                                />}\r\n                            <IconButton>\r\n                                <MoreVertIcon style={{ color : '#fff'  }}/>  \r\n                            </IconButton>  \r\n                    </AppBar>\r\n                    <Switch>\r\n                        <Route path='/dashboard'>\r\n                                <Homepage />\r\n                         </Route>   \r\n                        <Route path='/setting' component={Setting}/>\r\n                        <Route path='/subscription' component={Subscription}/>\r\n                        <Route path='/manage-groups' component={ManageGroups}/>\r\n                        <Route path='/manage-api' component={ManageApi}/>\r\n                        <Redirect to='/dashboard'/>\r\n                     </Switch>\r\n               </Content>   \r\n               <Snackbar open={openSnackbar} \r\n                          autoHideDuration={5000} \r\n                          onClose={handleCloseSnackBar}\r\n                          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n                    <Alert onClose={handleCloseSnackBar} severity=\"success\">\r\n                         {success.label}\r\n                    </Alert>\r\n                </Snackbar>   \r\n                <Snackbar open={openErrorSnackbar} \r\n                          autoHideDuration={5000} \r\n                          onClose={handleCloseErrorSnackBar}\r\n                          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n                    <Alert onClose={handleCloseErrorSnackBar} severity=\"error\">\r\n                         {error.label}\r\n                    </Alert>\r\n                </Snackbar>  \r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLoader : state.userReducer.userLoader,\r\n        user : state.userReducer.user,\r\n        success : state.userReducer.success,\r\n        error : state.userReducer.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadUser : () => dispatch(loadUser()),\r\n        setUserError : () => dispatch(setUserError()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n\r\nconst Container = styled.div`\r\n    position : relative;\r\n    display : flex;\r\n    width : 100%;\r\n    box-sizing : border-box;\r\n    height : ${window.innerHeight}px;\r\n`\r\nconst Content = styled.div`\r\n    flex : 1;\r\n    height : 100%;\r\n`\r\nconst AppBar = styled.div`\r\n    height : 56px;\r\n    ${({ theme }) => `background :  ${theme.palette.primary.main}`};\r\n    display : flex;\r\n    box-sizing : border-box;\r\n    padding : 20px 30px;\r\n    align-items : center;\r\n    @media( max-width : 992px) {\r\n        padding : 20px 5px;\r\n    }\r\n`\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n    &&& {\r\n        ${({ theme }) => `background :  ${theme.palette.success.main}`};\r\n        height : 35px;\r\n        width : 35px\r\n    }\r\n`\r\nconst MobileNav = styled.div`\r\n   height : 100%;\r\n   width : 260px;\r\n`\r\nconst Hamburger = styled(IconButton)`\r\n   @media( min-width : 992px ){\r\n       &&& {\r\n           display : none\r\n       }\r\n   }   \r\n`","import React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from 'styled-components';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/styles';\nimport PublicPage from './PublicPage';\nimport Dashboard from './Dashboard';\nimport '../font/flaticon.css'\nimport { connect } from 'react-redux';\nimport { checkAuth } from '../Store/Actions/authAction';\n\nfunction App({ isAuth, checkAuth }) {\n\n  const theme = createMuiTheme({\n    palette : {\n        primary : {\n            main : '#311b92'\n        },\n        secondary : {\n            main : '#f44336'\n        },\n        text : {\n            primary : '#000',\n            hint : '#9e9e9e'\n        }\n    }\n  })\n\n  React.useEffect(() => {\n      checkAuth();\n  },[checkAuth])\n\n  return (\n          <MuiThemeProvider theme={theme} >  \n              <ThemeProvider theme={theme} >\n                      { isAuth ? <Dashboard /> : <PublicPage />}\n              </ThemeProvider> \n          </MuiThemeProvider> \n     );\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth : state.authReducer.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        checkAuth : () => dispatch(checkAuth())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { START_REGISTRATION, REGISTRATION_MAIL_SUCCESS, START_LOGIN, LOGIN_SUCCESS,VERIFYING_EMAIL , VERIFY_EMAIL_SUCCESS,\r\n        SET_SUCCESS, REGISTRATION_FAIL, SET_ERROR, LOGIN_FAIL, LOG_OUT, RESENDING_EMAIL, RESEND_EMAIL_SUCCESS,\r\n        RESEND_EMAIL_FAIL, UNVERIFIED_ACCOUNT, SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT_FAIL, SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT,\r\n       SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT_SUCCESS, RESETTING_PASSWORD_SUCCESS } from '../Actions/actionTypes';\r\n\r\nconst initState = {\r\n    token : null,\r\n    registerLoader : false,\r\n    loginLoader : false,\r\n    registerStatus : false,\r\n    verifyingLoader : false,\r\n    success : { value : false, msg : '' },\r\n    error : { value : false, msg : '' },\r\n    unverifiedMsg : false,\r\n    unverifiedAccountSuccess : false\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case START_REGISTRATION : \r\n                    return {\r\n                        ...state,\r\n                        registerLoader : true\r\n                    }\r\n        case REGISTRATION_MAIL_SUCCESS : \r\n                   return {\r\n                       ...state,\r\n                       registerLoader : false,\r\n                       registerStatus : true\r\n                   }   \r\n        case START_LOGIN : \r\n                     return {\r\n                         ...state,\r\n                         loginLoader : true\r\n                     }\r\n        case LOGIN_SUCCESS : \r\n                     return {\r\n                         ...state,\r\n                         loginLoader : false,\r\n                         token : action.token\r\n                     }  \r\n        case LOGIN_FAIL: \r\n                     return {\r\n                         ...state,\r\n                         loginLoader : false,\r\n                         error : {\r\n                            ...state.error,\r\n                            value : true,\r\n                            msg : action.error\r\n                        }\r\n                     }               \r\n        case VERIFYING_EMAIL : \r\n                        return {\r\n                            ...state,\r\n                            verifyingLoader : true\r\n                        }   \r\n        case REGISTRATION_FAIL : \r\n                         return {\r\n                             ...state,\r\n                             registerLoader : false,\r\n                             verifyingLoader : false,\r\n                             error : {\r\n                                ...state.error,\r\n                                value : true,\r\n                                msg : action.error\r\n                            }\r\n                         }   \r\n        case VERIFY_EMAIL_SUCCESS : \r\n                     return {\r\n                         ...state,\r\n                         verifyingLoader : false,\r\n                         success : {\r\n                             ...state.success,\r\n                             value : true,\r\n                             msg : 'Email has been verified successfully. Please Login to continue.'\r\n                         }\r\n                     } \r\n        case RESENDING_EMAIL :\r\n                      return {\r\n                          ...state,\r\n                          registerLoader : true\r\n                      }  \r\n        case RESETTING_PASSWORD_SUCCESS : \r\n                      return {\r\n                          ...state,\r\n                          success : {\r\n                            ...state.success,\r\n                            value : true,\r\n                            msg : 'Password has been changed successfully. Login to continue.'\r\n                        }\r\n                      }\r\n        case RESEND_EMAIL_SUCCESS :\r\n                        return {\r\n                            ...state,\r\n                            registerLoader : false,\r\n                            success : {\r\n                                ...state.success,\r\n                                value : true,\r\n                                msg : 'Verification link has been sent successfully'\r\n                            }\r\n                        } \r\n        case RESEND_EMAIL_FAIL :\r\n                        return {\r\n                            ...state,\r\n                            registerLoader : false,\r\n                            error : {\r\n                                ...state.error,\r\n                                value : true,\r\n                                msg : action.error\r\n                            }\r\n                        } \r\n        case UNVERIFIED_ACCOUNT : \r\n                        return {\r\n                            ...state,\r\n                            unverifiedMsg : true,\r\n                            unverifiedAccountSuccess : false,\r\n                            loginLoader : false,\r\n                        }\r\n        case SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT :\r\n                        return {\r\n                            ...state,\r\n                            loginLoader : true\r\n                        }    \r\n        case SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT_SUCCESS : \r\n                        return {\r\n                            ...state,\r\n                            loginLoader : false,\r\n                            unverifiedMsg : false,\r\n                            unverifiedAccountSuccess : true,\r\n                        }\r\n        case SENDING_EMAIL_TO_UNVERIFIED_ACCOUNT_FAIL : \r\n                        return {\r\n                            ...state,\r\n                            error : {\r\n                                ...state.error,\r\n                                value : true,\r\n                                msg : action.error\r\n                            }\r\n                        }\r\n        case LOG_OUT :\r\n                    return {\r\n                        ...state,\r\n                        token : null\r\n                    } \r\n        case SET_SUCCESS : \r\n                     return {\r\n                         ...state,\r\n                         success : {\r\n                            ...state.success,\r\n                            value : false\r\n                        }\r\n                     }\r\n        case SET_ERROR : \r\n                     return {\r\n                         ...state,\r\n                         error : {\r\n                            ...state.error,\r\n                            value : false\r\n                        }\r\n                     }\r\n        default : return state;\r\n    }\r\n \r\n}\r\n\r\nexport default authReducer;","import { LOADING_USER_DATA, LOAD_USER_DATA_SUCCESS, SENDING_MESSAGE, SENDING_MESSAGE_SUCCESS, SENDING_MESSAGE_FAIL,\r\n         SUCCESS, ERROR, SET_USER_ERROR, SET_USER_SUCCESS, CHANGING_PASSWORD, CHANGING_PASSWORD_SUCCESS, CHANGING_PASSWORD_ERROR,\r\n         CHANGING_USER_DETAIL, CHANGING_USER_DETAIL_SUCCESS, CHANGING_USER_DETAIL_ERROR, GENERATING_API_KEY, GENERATING_API_KEY_SUCCESS,\r\n         GENERATING_API_KEY_ERROR, FETCHING_API_KEY } from '../Actions/actionTypes';\r\n\r\nconst initState = {\r\n    user : {},\r\n    userLoader : false,\r\n    messageLoader : false,\r\n    success : { value : false, label : '' },\r\n    error : { value : false, label : '' },\r\n    changePasswordLoader : false,\r\n    changeDetailLoader : false,\r\n    apiKey : 0,\r\n    apiKeyLoader : false,\r\n    getApiLoader : false\r\n}\r\n\r\nconst userReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case LOADING_USER_DATA :\r\n                        return {\r\n                            ...state,\r\n                            userLoader : true\r\n                        }\r\n        case LOAD_USER_DATA_SUCCESS : \r\n                        return {\r\n                            ...state,\r\n                            userLoader : false,\r\n                            user : { ...action.user }\r\n                        }         \r\n        case SENDING_MESSAGE : \r\n                        return {\r\n                            ...state,\r\n                            messageLoader : true\r\n                        }    \r\n        case SENDING_MESSAGE_SUCCESS : \r\n                        return {\r\n                            ...state,\r\n                            messageLoader : false,\r\n                            user : {\r\n                                ...state.user,\r\n                                smsLimit : state.user.smsLimit - action.count\r\n                            }\r\n                        }   \r\n        case SENDING_MESSAGE_FAIL : \r\n                        return {\r\n                            ...state,\r\n                            messageLoader : false\r\n                        }\r\n        case SUCCESS : \r\n                     return {\r\n                         ...state,\r\n                         success : {\r\n                             ...state.success,\r\n                             value : true,\r\n                             label : action.data\r\n                         }\r\n                     }   \r\n        case ERROR : \r\n                     return {\r\n                         ...state,\r\n                         error : {\r\n                             ...state.error,\r\n                             value : true,\r\n                             label : action.error\r\n                         }\r\n                     }   \r\n        case SET_USER_SUCCESS : \r\n                     return {\r\n                         ...state,\r\n                         success : {\r\n                             ...state.success,\r\n                             value : false\r\n                         }\r\n                     }\r\n        case SET_USER_ERROR : \r\n                     return {\r\n                         ...state,\r\n                         error : {\r\n                             ...state.error,\r\n                             value : false\r\n                         }\r\n                     }\r\n        case CHANGING_PASSWORD : \r\n                     return {\r\n                         ...state,\r\n                         changePasswordLoader : true\r\n                     }\r\n        case CHANGING_PASSWORD_SUCCESS : \r\n                return {\r\n                    ...state,\r\n                    changePasswordLoader : false\r\n                }\r\n        case CHANGING_PASSWORD_ERROR : \r\n                return {\r\n                    ...state,\r\n                    changePasswordLoader : false\r\n                }\r\n        case CHANGING_USER_DETAIL :\r\n                 return {\r\n                    ...state,\r\n                    changeDetailLoader : true\r\n                 }\r\n        case CHANGING_USER_DETAIL_SUCCESS :\r\n                    return {\r\n                        ...state,\r\n                        changeDetailLoader : false,\r\n                        user : {\r\n                            ...state.user,\r\n                            name : action.name,\r\n                            phone : action.phone\r\n                        }\r\n                    }\r\n        case CHANGING_USER_DETAIL_ERROR :\r\n                    return {\r\n                        ...state,\r\n                        changeDetailLoader : false\r\n                    }\r\n        case GENERATING_API_KEY : \r\n                    return {\r\n                        ...state,\r\n                        apiKeyLoader : true\r\n                    }\r\n        case GENERATING_API_KEY_SUCCESS : \r\n                    return {\r\n                        ...state,\r\n                        apiKeyLoader : false,\r\n                        apiKey : action.apiKey,\r\n                        getApiLoader : false\r\n                    }\r\n        case GENERATING_API_KEY_ERROR : \r\n                    return {\r\n                        ...state,\r\n                        apiKeyLoader : false,\r\n                        getApiLoader : false\r\n                    }\r\n        case FETCHING_API_KEY : \r\n                    return {\r\n                        ...state,\r\n                        getApiLoader : true\r\n                    }\r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { LOADING_GROUPS_ERROR, LOADING_GROUPS_SUCCESS, LOADING_GROUPS, CREATING_GROUPS, CREATING_GROUPS_FAIL, CREATING_GROUPS_SUCCESS,\r\n        UPDATING_GROUP_NAME, UPDATING_GROUP_NAME_SUCCESS, UPDATING_GROUP_NAME_ERROR, LOADING_GROUP_LIST, LOADING_GROUP_LIST_SUCCESS,\r\n        LOADING_GROUP_LIST_ERROR, DELETE_GROUP_ERROR, DELETE_GROUP_SUCCESS, DELETE_GROUP, ADDING_GROUP_MEMBER,ADDING_GROUP_MEMBER_SUCCESS,\r\n        ADDING_GROUP_MEMBER_ERROR, DELETEING_GROUPMEMBER, DELETEING_GROUPMEMBER_ERROR, DELETEING_GROUPMEMBER_SUCCESS, UPDATING_GROUPMEMBER_ERROR,\r\n        UPDATING_GROUPMEMBER, UPDATING_GROUPMEMBER_SUCCESS, SET_CREATE_SUCCESS } from '../Actions/actionTypes';\r\n\r\nconst initState = {\r\n    groups : [],\r\n    groupList : [],\r\n    newlyAddedGroup : {},\r\n    groupsLoader : false,\r\n    createGroupsLoader : false,\r\n    createSuccess : false,\r\n    updadingGroupNameLoader : false,\r\n    groupListLoader : false,\r\n    deletingGroupLoader : false,\r\n    addingMemberLoader : false,\r\n    deletingGroupMembersLoader : false,\r\n    updatingGroupMemberLoader : false\r\n}\r\n\r\nconst groupsReducer = ( state= initState, action ) => {\r\n    switch(action.type) {\r\n        case LOADING_GROUPS : \r\n                        return {\r\n                            ...state,\r\n                            groupsLoader : true\r\n                        }\r\n        case LOADING_GROUPS_SUCCESS : \r\n                        const newGrp = [...action.groups].map(group => ({ ...group, checked : false }));\r\n                        return {\r\n                            ...state,\r\n                            groupsLoader : false, \r\n                            groups : [...newGrp]\r\n                        }\r\n        case LOADING_GROUPS_ERROR : \r\n                        return {\r\n                            ...state,\r\n                            groupsLoader : false\r\n                        }\r\n        case CREATING_GROUPS :\r\n                        return {\r\n                            ...state,\r\n                            createGroupsLoader : true\r\n                        }\r\n        case CREATING_GROUPS_SUCCESS :\r\n                        return {\r\n                            ...state,\r\n                            createGroupsLoader : false,\r\n                            newlyAddedGroup : {\r\n                                ...state.newlyAddedGroup,\r\n                                groupName : action.data[action.data.length - 1].groupName,\r\n                                groupId : action.data[action.data.length - 1].groupId,\r\n                            },\r\n                            groups : [...action.data],\r\n                            createSuccess : true\r\n                        }\r\n        case SET_CREATE_SUCCESS : \r\n                        return {\r\n                            ...state,\r\n                            createSuccess : false\r\n                        }\r\n        case CREATING_GROUPS_FAIL :\r\n                        return {\r\n                            ...state,\r\n                            createGroupsLoader : false\r\n                        }\r\n        case UPDATING_GROUP_NAME : \r\n                        return {\r\n                            ...state,\r\n                            updadingGroupNameLoader : true\r\n                        }\r\n        case UPDATING_GROUP_NAME_SUCCESS : \r\n                        const groupIndex = state.groups.findIndex(group => group.groupId === action.groupId);\r\n                        let newGroup = [...state.groups];\r\n                        newGroup[groupIndex] = { ...newGroup[groupIndex], groupName : action.groupName }\r\n                        return {\r\n                            ...state,\r\n                            updadingGroupNameLoader : false,\r\n                            groups : [...newGroup]\r\n                        }\r\n        case UPDATING_GROUP_NAME_ERROR : \r\n                        return {\r\n                            ...state,\r\n                            updadingGroupNameLoader : false\r\n                        }\r\n        case LOADING_GROUP_LIST :\r\n                        return {\r\n                            ...state,\r\n                            groupListLoader : true,\r\n                        }      \r\n        case LOADING_GROUP_LIST_SUCCESS :\r\n                        return {\r\n                            ...state,\r\n                            groupListLoader : false,\r\n                            groupListLoaderSecondary : false, \r\n                            groupList : [...action.data],\r\n                        }       \r\n        case LOADING_GROUP_LIST_ERROR :\r\n                        return {\r\n                            ...state,\r\n                            groupListLoader : false,\r\n                            groupListLoaderSecondary : false\r\n                        }      \r\n        case DELETE_GROUP : \r\n                        return {\r\n                            ...state,\r\n                            deletingGroupLoader : true\r\n                        }\r\n        case DELETE_GROUP_SUCCESS : \r\n                        const index = state.groups.findIndex(group => group.groupId === action.groupId);\r\n                        let newGroups = [...state.groups];\r\n                        if(index > -1){\r\n                            newGroups.splice(index, 1);\r\n                        }\r\n                        return {\r\n                            ...state,\r\n                            deletingGroupLoader : false,\r\n                            groups : [...newGroups]\r\n                        }\r\n        case DELETE_GROUP_ERROR : \r\n                        return {\r\n                            ...state,\r\n                            deletingGroupLoader : false\r\n                        }\r\n        case ADDING_GROUP_MEMBER : \r\n                        return {\r\n                            ...state,\r\n                            addingMemberLoader : true\r\n                        }  \r\n        case ADDING_GROUP_MEMBER_SUCCESS : \r\n                        return {\r\n                            ...state,\r\n                            addingMemberLoader : false\r\n                        }  \r\n        case ADDING_GROUP_MEMBER_ERROR : \r\n                        return {\r\n                            ...state,\r\n                            addingMemberLoader : false\r\n                        }    \r\n        case DELETEING_GROUPMEMBER : \r\n                        return {\r\n                            ...state,\r\n                            deletingGroupMembersLoader : true\r\n                        }\r\n        case DELETEING_GROUPMEMBER_SUCCESS :\r\n                        const groupMemberIndex = state.groupList.findIndex( member => member.memberId === action.groupMemberId )\r\n                        let newGroupMembers = [...state.groupList];\r\n                        console.log(groupMemberIndex)\r\n                        if(groupMemberIndex > -1){\r\n                            newGroupMembers.splice(groupMemberIndex, 1);\r\n                        }\r\n                        return {\r\n                            ...state,\r\n                            deletingGroupMembersLoader : false,\r\n                            groupList : [...newGroupMembers]\r\n                        }\r\n        case DELETEING_GROUPMEMBER_ERROR : \r\n                        return {\r\n                            ...state,\r\n                            deletingGroupMembersLoader : false\r\n                        }\r\n        case UPDATING_GROUPMEMBER : \r\n                        return {\r\n                            ...state,\r\n                            updatingGroupMemberLoader : true\r\n                        }\r\n        case UPDATING_GROUPMEMBER_SUCCESS : \r\n                        const groupListIndex = state.groupList.findIndex(group => group.memberId === action.memberId);\r\n                        let newGroupList = [...state.groupList];\r\n                        newGroupList[groupListIndex] = { ...newGroupList[groupListIndex], memberName : action.memberName, memberPhone : action.memberPhone }\r\n                        return {\r\n                            ...state,\r\n                            updatingGroupMemberLoader : false,\r\n                            groupList : [...newGroupList]\r\n                        }\r\n        case UPDATING_GROUPMEMBER_ERROR : \r\n                        return {\r\n                            ...state,\r\n                            updatingGroupMemberLoader : false\r\n                        }\r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport default groupsReducer;","import { SENDING_EMAIL_FOR_RESET, SENDING_EMAIL_FOR_RESET_SUCCESS, SENDING_EMAIL_FOR_RESET_FAIL, RESETTING_PASSWORD,\n       RESETTING_PASSWORD_FAIL, RESETTING_PASSWORD_SUCCESS } \n    from '../Actions/actionTypes';\n\nconst initState = {\n    emailLoader : false,\n    emailSendSuccess : false,\n    emailError : false,\n    resetSuccess : false,\n    resetError : false\n}\n\nconst resetPasswordReducer = (state = initState, action) => {\n    switch(action.type){\n        case SENDING_EMAIL_FOR_RESET :\n                            return {\n                                ...state,\n                                emailLoader : true\n                            }\n        case SENDING_EMAIL_FOR_RESET_SUCCESS :\n                            return {\n                                ...state,\n                                emailLoader : false,\n                                emailSendSuccess : true\n                            }\n        case SENDING_EMAIL_FOR_RESET_FAIL : \n                            return {\n                                ...state,\n                                emailLoader : false,\n                                emailError : true\n                            }    \n        case RESETTING_PASSWORD : \n                             return {\n                                 ...state,\n                                 emailLoader : true\n                             }\n        case RESETTING_PASSWORD_SUCCESS :\n                             return {\n                                 ...state,\n                                 emailLoader : false,\n                                 resetSuccess : true\n                             }   \n        case RESETTING_PASSWORD_FAIL :\n                                return {\n                                    ...state,\n                                    emailLoader : false, \n                                    resetError : true\n                                } \n        default : return state;\n    }\n}\n\nexport default resetPasswordReducer;","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport userReducer from './userReducer';\r\nimport groupsReducer from './groupsReducer';\r\nimport resetPasswordReducer from './resetPasswordReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    authReducer,\r\n    userReducer,\r\n    resetPasswordReducer,\r\n    groupsReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Container/App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './Store/Reducers/rootReducer';\nimport { BrowserRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\naxios.defaults.baseURL = 'https://sms-nepal-backend.herokuapp.com'\n\nconst app = <Provider store={store}>\n                <BrowserRouter>\n                     <App/>\n               </BrowserRouter>\n            </Provider>\n\nReactDOM.render( app ,document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.eeabe02d.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-icon.a3612026.svg\";"],"sourceRoot":""}